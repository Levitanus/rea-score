{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"selected",
				"get_selected_item(…)"
			],
			[
				"i",
				"item_mut(…)"
			],
			[
				"Reaper",
				"Reaper (use rea_rs::Reaper)"
			],
			[
				"ChordNotations",
				"ChordNotations (use crate::notation::chord_notations::ChordNotations)"
			],
			[
				"NoteNotations",
				"NoteNotations (use crate::notation::note_notations::NoteNotations)"
			],
			[
				"Nota",
				"NotationType"
			],
			[
				"c",
				"\"cmd\""
			],
			[
				"ins",
				"inputs"
			],
			[
				"to",
				"to_string() (as ToString)"
			],
			[
				"in",
				"get_user_inputs(…)"
			],
			[
				"D",
				"KeyCode::D"
			],
			[
				"Has",
				"HashMap<…> (use std::collections::HashMap)"
			],
			[
				"asse",
				"assert_eq!(…)"
			],
			[
				"MNo",
				"MNotation::Note{}"
			],
			[
				"rep",
				"replace(…)"
			],
			[
				"Notati",
				"NotationType"
			],
			[
				"repla",
				"replace_given_notations(…)"
			],
			[
				"ex",
				"extend(…) (as Extend)"
			],
			[
				"sw",
				"swap_remove(…)"
			],
			[
				"rea",
				"reascore_string"
			],
			[
				"sta",
				"starts_with(…)"
			],
			[
				"iter",
				"iter_mut()"
			],
			[
				"MN",
				"MNotation::Note{}"
			],
			[
				"st",
				"starts_with(…)"
			],
			[
				"enu",
				"enumerate() (as Iterator)"
			],
			[
				"reasc",
				"reascore_notation_string(…)"
			],
			[
				"into",
				"into_iter() (as IntoIterator)"
			],
			[
				"for",
				"format!(…)"
			],
			[
				"IP",
				"IPv4Address"
			],
			[
				"api",
				"test_api"
			],
			[
				"LO",
				"LOCALHOST"
			],
			[
				"Ip",
				"IPv4Address"
			],
			[
				"con",
				"connect"
			],
			[
				"ma",
				"map"
			],
			[
				"get_",
				"get_info_value"
			],
			[
				"set",
				"set_info_value"
			],
			[
				"region",
				"region_states"
			],
			[
				"track",
				"track.items"
			],
			[
				"is_",
				"is_online"
			],
			[
				"fx",
				"fxs"
			],
			[
				"selected_trac",
				"get_selected_track"
			],
			[
				"pp",
				"pprint"
			],
			[
				"undo",
				"undo_block"
			],
			[
				"fro",
				"from_GUID"
			],
			[
				"add",
				"add_rendered_tracks"
			],
			[
				"rem",
				"remove_rendered_tracks"
			],
			[
				"rendere",
				"rendered_stems"
			],
			[
				"rende",
				"rendered_stems"
			],
			[
				"mu",
				"is_muted"
			],
			[
				"from",
				"from_GUID"
			],
			[
				"stem_st",
				"stem_states"
			],
			[
				"region_s",
				"region_states"
			],
			[
				"region_State",
				"region_state"
			],
			[
				"inst",
				"instrument"
			],
			[
				"__",
				"__iter__"
			],
			[
				"ye",
				"yield"
			],
			[
				"Itera",
				"Iterator"
			],
			[
				"fxs",
				"fxs"
			],
			[
				"set_in",
				"set_info_value"
			],
			[
				"gui",
				"GUID"
			],
			[
				"Type",
				"TypedDict"
			],
			[
				"Dic",
				"Dict"
			],
			[
				"render",
				"rendered_stems"
			],
			[
				"not_e",
				"not_empty(stem."
			],
			[
				"sour",
				"source_track"
			],
			[
				"recie",
				"receives"
			],
			[
				"sou",
				"source_track"
			],
			[
				"re",
				"receives"
			],
			[
				"item",
				"items"
			],
			[
				"ren",
				"rendered_tracks"
			],
			[
				"regi",
				"regions"
			],
			[
				"Eve",
				"EventsDictType"
			],
			[
				"Musi",
				"MusicList"
			],
			[
				"Voic",
				"VoiceSplit"
			],
			[
				"Clef",
				"ClefChange"
			],
			[
				"Cle",
				"ClefChange"
			],
			[
				"__repr_",
				"__repr__(self):"
			],
			[
				"appe",
				"append(self, event):"
			],
			[
				"length",
				"length.for_ly()"
			],
			[
				"pro",
				"property"
			],
			[
				"num",
				"numerator"
			],
			[
				"staff",
				"staff_expr"
			],
			[
				"eve",
				"events"
			],
			[
				"sup",
				"super"
			],
			[
				"_ly",
				"_ly_duration"
			],
			[
				"nor",
				"normalized_duration"
			],
			[
				"Mus",
				"MusicList':"
			],
			[
				"extend",
				"extend(self, event: Event) ->"
			],
			[
				"__re",
				"__repr__(self) -> str:"
			],
			[
				"_",
				"_music"
			],
			[
				"for_ly",
				"for_ly(self,"
			],
			[
				"Mu",
				"Music"
			],
			[
				"for_",
				"for_ly(self) -> str:"
			],
			[
				"bi",
				"big=big"
			],
			[
				"le",
				"length=length"
			],
			[
				"po",
				"position"
			],
			[
				"__geti",
				"__getitem__(self, other: object"
			],
			[
				"Ch",
				"Chord"
			],
			[
				"Fra",
				"Fraction"
			],
			[
				"dur",
				"duration"
			],
			[
				"last",
				"last_length"
			],
			[
				"no",
				"normalize_alteration"
			],
			[
				"normali",
				"normalized_duration"
			],
			[
				"fo",
				"for_ly"
			],
			[
				"la",
				"last_pos"
			],
			[
				"ppq",
				"ppq_to_time"
			],
			[
				"voi",
				"voice_m"
			],
			[
				"dura",
				"duration"
			],
			[
				"Len",
				"Length(0, take)"
			],
			[
				"las",
				"last_pos"
			],
			[
				"Ta",
				"Take"
			],
			[
				"Po",
				"Position"
			],
			[
				"Du",
				"Duration"
			],
			[
				"F",
				"Fraction"
			],
			[
				"remain",
				"remainder"
			],
			[
				"frac",
				"fractions"
			],
			[
				"nu",
				"number"
			],
			[
				"bar",
				"bar_position"
			],
			[
				"Re",
				"Rest"
			],
			[
				"app",
				"append("
			],
			[
				"fir",
				"first_pos = pos"
			],
			[
				"firs",
				"first_pos"
			],
			[
				"ke",
				"keys())"
			],
			[
				"musicLi",
				"MusicList"
			],
			[
				"mus",
				"music"
			],
			[
				"staf",
				"staffs_music"
			],
			[
				"Sta",
				"StaffType"
			],
			[
				"No",
				"Notation"
			]
		]
	},
	"buffers":
	[
		{
			"file": "plugin/src/key_bindings.rs",
			"settings":
			{
				"buffer_size": 2264,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					34,
					1,
					"insert",
					{
						"characters": "\nle"
					},
					"BAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAQAAAAAAAIkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAQAAAAAAAJUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "key_binding"
					},
					"CwAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAQAAAAAAAJYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAKEBAAAAAAAAogEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAQAAAAAAAKEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACkAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAQAAAAAAAKIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " HashMap"
					},
					"CAAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACsAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAQAAAAAAAKQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "::n"
					},
					"AwAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAQAAAAAAAKwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert_completion",
					{
						"completion": "new",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "new"
					},
					"AgAAAK4BAAAAAAAArgEAAAAAAAABAAAAbq4BAAAAAAAAsQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAQAAAAAAAK8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALEBAAAAAAAAswEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAQAAAAAAALEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALMBAAAAAAAAtAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAQAAAAAAALMBAAAAAAAA////////738"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC9AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AQAAAAAAALQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAADGAQAAAAAAAAAAAAC1AQAAAAAAALUBAAAAAAAACAAAACAgICAgICAg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9AQAAAAAAAL0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					4,
					"left_delete",
					null,
					"BAAAALoBAAAAAAAAugEAAAAAAAAEAAAAICAgILYBAAAAAAAAtgEAAAAAAAAEAAAAICAgILUBAAAAAAAAtQEAAAAAAAABAAAACrQBAAAAAAAAtAEAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AQAAAAAAAL4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					2,
					"left_delete",
					null,
					"AgAAAIoBAAAAAAAAigEAAAAAAAAqAAAAICAgICAgICBsZXQga2V5X2JpbmRpbmdzID0gSGFzaE1hcDo6bmV3KCk7iQEAAAAAAACJAQAAAAAAAAEAAAAK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AQAAAAAAAIoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAQAAAAAAAK8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " key_bindin"
					},
					"CwAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACyAQAAAAAAAAAAAACyAQAAAAAAALMBAAAAAAAAAAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAQAAAAAAALABAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "gs:"
					},
					"AwAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AQAAAAAAAL4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "ake_kay"
					},
					"BwAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADCAQAAAAAAAAAAAADCAQAAAAAAAMMBAAAAAAAAAAAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAQAAAAAAAMABAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "_bindings"
					},
					"CQAAAMcBAAAAAAAAyAEAAAAAAAAAAAAAyAEAAAAAAADJAQAAAAAAAAAAAADJAQAAAAAAAMoBAAAAAAAAAAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHAQAAAAAAAMcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANABAAAAAAAA0gEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAQAAAAAAANABAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAAC2AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAALYAAAAAAAAAwgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMIAAAAAAAAAwwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAAAAAAAAAMIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " Has"
					},
					"BAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{},\"data\":{\"imports\":[{\"imported_name\":\"HashMap\",\"full_import_path\":\"std::collections::HashMap\"}],\"position\":{\"textDocument\":{\"uri\":\"file:///home/levitanus/gits/rea-score/plugin/src/key_bindings.rs\"},\"position\":{\"line\":6,\"character\":21}}},\"textEdit\":{\"replace\":{\"start\":{\"line\":6,\"character\":18},\"end\":{\"line\":6,\"character\":21}},\"newText\":\"HashMap<$0>\",\"insert\":{\"start\":{\"line\":6,\"character\":18},\"end\":{\"line\":6,\"character\":21}}},\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"deprecated\":false,\"insertTextFormat\":2,\"kind\":22,\"additionalTextEdits\":[],\"label\":\"HashMap<…> (use std::collections::HashMap)\",\"sortText\":\"fffffff0\",\"documentation\":{\"kind\":\"markdown\",\"value\":\"A [hash map] implemented with quadratic probing and SIMD lookup.\\n\\nBy default, `HashMap` uses a hashing algorithm selected to provide\\nresistance against HashDoS attacks. The algorithm is randomly seeded, and a\\nreasonable best-effort is made to generate this seed from a high quality,\\nsecure source of randomness provided by the host without blocking the\\nprogram. Because of this, the randomness of the seed depends on the output\\nquality of the system's random number generator when the seed is created.\\nIn particular, seeds generated when the system's entropy pool is abnormally\\nlow such as during system boot may be of a lower quality.\\n\\nThe default hashing algorithm is currently SipHash 1-3, though this is\\nsubject to change at any point in the future. While its performance is very\\ncompetitive for medium sized keys, other hashing algorithms will outperform\\nit for small keys such as integers as well as large keys such as long\\nstrings, though those algorithms will typically *not* protect against\\nattacks such as HashDoS.\\n\\nThe hashing algorithm can be replaced on a per-`HashMap` basis using the\\n[`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods.\\nThere are many alternative [hashing algorithms available on crates.io].\\n\\nIt is required that the keys implement the [`Eq`] and [`Hash`] traits, although\\nthis can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.\\nIf you implement these yourself, it is important that the following\\nproperty holds:\\n\\n```text\\nk1 == k2 -> hash(k1) == hash(k2)\\n```\\n\\nIn other words, if two keys are equal, their hashes must be equal.\\n\\nIt is a logic error for a key to be modified in such a way that the key's\\nhash, as determined by the [`Hash`] trait, or its equality, as determined by\\nthe [`Eq`] trait, changes while it is in the map. This is normally only\\npossible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\\nThe behavior resulting from such a logic error is not specified, but will\\nbe encapsulated to the `HashMap` that observed the logic error and not\\nresult in undefined behavior. This could include panics, incorrect results,\\naborts, memory leaks, and non-termination.\\n\\nThe hash table implementation is a Rust port of Google's [SwissTable].\\nThe original C++ version of SwissTable can be found [here], and this\\n[CppCon talk] gives an overview of how the algorithm works.\\n\\n[hash map]: crate::collections#use-a-hashmap-when\\n[hashing algorithms available on crates.io]: https://crates.io/keywords/hasher\\n[SwissTable]: https://abseil.io/blog/20180927-swisstables\\n[here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h\\n[CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4\\n\\n# Examples\\n\\n```rust\\nuse std::collections::HashMap;\\n\\n// Type inference lets us omit an explicit type signature (which\\n// would be `HashMap<String, String>` in this example).\\nlet mut book_reviews = HashMap::new();\\n\\n// Review some books.\\nbook_reviews.insert(\\n    \\\"Adventures of Huckleberry Finn\\\".to_string(),\\n    \\\"My favorite book.\\\".to_string(),\\n);\\nbook_reviews.insert(\\n    \\\"Grimms' Fairy Tales\\\".to_string(),\\n    \\\"Masterpiece.\\\".to_string(),\\n);\\nbook_reviews.insert(\\n    \\\"Pride and Prejudice\\\".to_string(),\\n    \\\"Very enjoyable.\\\".to_string(),\\n);\\nbook_reviews.insert(\\n    \\\"The Adventures of Sherlock Holmes\\\".to_string(),\\n    \\\"Eye lyked it alot.\\\".to_string(),\\n);\\n\\n// Check for a specific one.\\n// When collections store owned values (String), they can still be\\n// queried using references (&str).\\nif !book_reviews.contains_key(\\\"Les Misérables\\\") {\\n    println!(\\\"We've got {} reviews, but Les Misérables ain't one.\\\",\\n             book_reviews.len());\\n}\\n\\n// oops, this review has a lot of spelling mistakes, let's delete it.\\nbook_reviews.remove(\\\"The Adventures of Sherlock Holmes\\\");\\n\\n// Look up the values associated with some keys.\\nlet to_find = [\\\"Pride and Prejudice\\\", \\\"Alice's Adventure in Wonderland\\\"];\\nfor &book in &to_find {\\n    match book_reviews.get(book) {\\n        Some(review) => println!(\\\"{book}: {review}\\\"),\\n        None => println!(\\\"{book} is unreviewed.\\\")\\n    }\\n}\\n\\n// Look up the value for a key (will panic if the key is not found).\\nprintln!(\\\"Review for Jane: {}\\\", book_reviews[\\\"Pride and Prejudice\\\"]);\\n\\n// Iterate over everything.\\nfor (book, review) in &book_reviews {\\n    println!(\\\"{book}: \\\\\\\"{review}\\\\\\\"\\\");\\n}\\n```\\n\\nA `HashMap` with a known list of items can be initialized from an array:\\n\\n```rust\\nuse std::collections::HashMap;\\n\\nlet solar_distance = HashMap::from([\\n    (\\\"Mercury\\\", 0.4),\\n    (\\\"Venus\\\", 0.7),\\n    (\\\"Earth\\\", 1.0),\\n    (\\\"Mars\\\", 1.5),\\n]);\\n```\\n\\n`HashMap` implements an [`Entry` API](#method.entry), which allows\\nfor complex methods of getting, setting, updating and removing keys and\\ntheir values:\\n\\n```rust\\nuse std::collections::HashMap;\\n\\n// type inference lets us omit an explicit type signature (which\\n// would be `HashMap<&str, u8>` in this example).\\nlet mut player_stats = HashMap::new();\\n\\nfn random_stat_buff() -> u8 {\\n    // could actually return some random value here - let's just return\\n    // some fixed value for now\\n    42\\n}\\n\\n// insert a key only if it doesn't already exist\\nplayer_stats.entry(\\\"health\\\").or_insert(100);\\n\\n// insert a key using a function that provides a new value only if it\\n// doesn't already exist\\nplayer_stats.entry(\\\"defence\\\").or_insert_with(random_stat_buff);\\n\\n// update a key, guarding against the key possibly not being set\\nlet stat = player_stats.entry(\\\"attack\\\").or_insert(100);\\n*stat += random_stat_buff();\\n\\n// modify an entry before an insert with in-place mutation\\nplayer_stats.entry(\\\"mana\\\").and_modify(|mana| *mana += 200).or_insert(100);\\n```\\n\\nThe easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].\\nWe must also derive [`PartialEq`].\\n\\n[`RefCell`]: crate::cell::RefCell\\n[`Cell`]: crate::cell::Cell\\n[`default`]: Default::default\\n[`with_hasher`]: Self::with_hasher\\n[`with_capacity_and_hasher`]: Self::with_capacity_and_hasher\\n\\n```rust\\nuse std::collections::HashMap;\\n\\n#[derive(Hash, Eq, PartialEq, Debug)]\\nstruct Viking {\\n    name: String,\\n    country: String,\\n}\\n\\nimpl Viking {\\n    /// Creates a new Viking.\\n    fn new(name: &str, country: &str) -> Viking {\\n        Viking { name: name.to_string(), country: country.to_string() }\\n    }\\n}\\n\\n// Use a HashMap to store the vikings' health points.\\nlet vikings = HashMap::from([\\n    (Viking::new(\\\"Einar\\\", \\\"Norway\\\"), 25),\\n    (Viking::new(\\\"Olaf\\\", \\\"Denmark\\\"), 24),\\n    (Viking::new(\\\"Harald\\\", \\\"Iceland\\\"), 12),\\n]);\\n\\n// Use derived implementation to print the status of the vikings.\\nfor (viking, health) in &vikings {\\n    println!(\\\"{viking:?} has {health} hp\\\");\\n}\\n```\"},\"filterText\":\"HashMap\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							52,
							72,
							4
						],
						"trigger": "HashMap<…> (use std::collections::HashMap)"
					},
					"AgAAAMQAAAAAAAAAxAAAAAAAAAADAAAASGFzxAAAAAAAAADNAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHAAAAAAAAAMcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									0,
									0
								],
								[
									0,
									0
								],
								"use std::collections::HashMap;",
								null
							],
							[
								[
									0,
									0
								],
								[
									0,
									0
								],
								"\n",
								null
							],
							[
								[
									0,
									0
								],
								[
									0,
									0
								],
								"\n",
								null
							]
						]
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "Key"
					},
					"AwAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{},\"label\":\"KeyBinding\",\"textEdit\":{\"replace\":{\"start\":{\"line\":8,\"character\":26},\"end\":{\"line\":8,\"character\":29}},\"newText\":\"KeyBinding\",\"insert\":{\"start\":{\"line\":8,\"character\":26},\"end\":{\"line\":8,\"character\":29}}},\"kind\":22,\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"deprecated\":false,\"preselect\":true,\"filterText\":\"KeyBinding\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							55,
							79,
							3
						],
						"trigger": "KeyBinding"
					},
					"AgAAAOwAAAAAAAAA7AAAAAAAAAADAAAAS2V57AAAAAAAAAD2AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAAAAAAAAAO8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2AAAAAAAAAPYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3AAAAAAAAAPcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "Box"
					},
					"AwAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD6AAAAAAAAAAAAAAD6AAAAAAAAAPsAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":8,\"character\":38},\"end\":{\"line\":8,\"character\":41}},\"newText\":\"Box<$0>\",\"insert\":{\"start\":{\"line\":8,\"character\":38},\"end\":{\"line\":8,\"character\":41}}},\"kind\":22,\"preselect\":true,\"deprecated\":false,\"insertTextFormat\":2,\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"additionalTextEdits\":[],\"label\":\"Box<…>\",\"sortText\":\"ffffffef\",\"documentation\":{\"kind\":\"markdown\",\"value\":\"A pointer type that uniquely owns a heap allocation of type `T`.\\n\\nSee the [module-level documentation](../../std/boxed/index.html) for more.\"},\"filterText\":\"Box\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							59,
							83,
							3
						],
						"trigger": "Box<…>"
					},
					"AgAAAPgAAAAAAAAA+AAAAAAAAAADAAAAQm94+AAAAAAAAAD9AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AAAAAAAAAPsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "dyn"
					},
					"AwAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AAAAAAAAAPwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " Fm"
					},
					"AwAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAAEBAAAAAAAAAQEAAAAAAAABAAAAbQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAEBAAAAAAAAAgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAQAAAAAAAAEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									8,
									52
								],
								[
									8,
									52
								],
								",",
								null
							],
							[
								[
									15,
									24
								],
								[
									15,
									38
								],
								"\n            _im_gui,\n            ctx,\n           ",
								null
							],
							[
								[
									15,
									72
								],
								[
									15,
									72
								],
								",\n       ",
								null
							]
						]
					},
					"AwAAACcCAAAAAAAAMAIAAAAAAAAAAAAA9wEAAAAAAAApAgAAAAAAAA4AAAAgX2ltX2d1aSwgY3R4LAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"left_delete",
					null,
					"AQAAAD8CAAAAAAAAPwIAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAgAAAAAAAEACAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAD8CAAAAAAAAQAIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AgAAAAAAAD8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAAoAUAAAAAAAChBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfBQAAAAAAAJ8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAKAFAAAAAAAAoQUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgBQAAAAAAAKAFAAAAAAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAAKAFAAAAAAAAoAUAAAAAAAABAAAAcA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChBQAAAAAAAKEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACiBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgBQAAAAAAAKAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIFAAAAAAAAowUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiBQAAAAAAAKIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"paste",
					null,
					"AQAAAKMFAAAAAAAAtgUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALYFAAAAAAAAuAUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAALcFAAAAAAAAuAUAAAAAAAAAAAAAuAUAAAAAAAC5BQAAAAAAAAAAAAC4BQAAAAAAALwFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BQAAAAAAALcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"BAAAALYFAAAAAAAAtwUAAAAAAAAAAAAAuQUAAAAAAAC5BQAAAAAAAAQAAAAgICAgtwUAAAAAAAC4BQAAAAAAAAAAAAC4BQAAAAAAALkFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkFAAAAAAAAugUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"paste",
					null,
					"AQAAALoFAAAAAAAA3AUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6BQAAAAAAALoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"reindent",
					null,
					"AQAAAN4FAAAAAAAA4gUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeBQAAAAAAAN4FAAAAAAAA////////738"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "todo"
					},
					"BAAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA4wUAAAAAAADkBQAAAAAAAAAAAADkBQAAAAAAAOUFAAAAAAAAAAAAAOUFAAAAAAAA5gUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiBQAAAAAAAOIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"replace\":{\"start\":{\"line\":53,\"character\":4},\"end\":{\"line\":53,\"character\":8}},\"newText\":\"todo!($0)\",\"insert\":{\"start\":{\"line\":53,\"character\":4},\"end\":{\"line\":53,\"character\":8}}},\"labelDetails\":{\"description\":\"macro_rules! todo\"},\"label\":\"todo!(…)\",\"detail\":\"macro_rules! todo\",\"kind\":3,\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"filterText\":\"todo!\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Indicates unfinished code.\\n\\nThis can be useful if you are prototyping and are just looking to have your\\ncode typecheck.\\n\\nThe difference between [`unimplemented!`] and `todo!` is that while `todo!` conveys\\nan intent of implementing the functionality later and the message is \\\"not yet\\nimplemented\\\", `unimplemented!` makes no such claims. Its message is \\\"not implemented\\\".\\nAlso some IDEs will mark `todo!`s.\\n\\n# Panics\\n\\nThis will always [`panic!`].\\n\\n# Examples\\n\\nHere's an example of some in-progress code. We have a trait `Foo`:\\n\\n```rust\\ntrait Foo {\\n    fn bar(&self);\\n    fn baz(&self);\\n}\\n```\\n\\nWe want to implement `Foo` on one of our types, but we also want to work on\\njust `bar()` first. In order for our code to compile, we need to implement\\n`baz()`, so we can use `todo!`:\\n\\n```rust\\nstruct MyStruct;\\n\\nimpl Foo for MyStruct {\\n    fn bar(&self) {\\n        // implementation goes here\\n    }\\n\\n    fn baz(&self) {\\n        // let's not worry about implementing baz() for now\\n        todo!();\\n    }\\n}\\n\\nfn main() {\\n    let s = MyStruct;\\n    s.bar();\\n\\n    // we aren't even using baz(), so this is fine.\\n}\\n```\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							97,
							127,
							4
						],
						"trigger": "todo!(…)"
					},
					"AgAAAOIFAAAAAAAA4gUAAAAAAAAEAAAAdG9kb+IFAAAAAAAA6QUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmBQAAAAAAAOYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									52,
									60
								],
								[
									52,
									60
								],
								" ",
								null
							]
						]
					},
					"AQAAANwFAAAAAAAA3QUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoBQAAAAAAAOgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAAPAEAAAAAAAA8QQAAAAAAAAAAAAA8QQAAAAAAAD9BAAAAAAAAAAAAAD9BAAAAAAAAP4EAAAAAAAAAAAAAP4EAAAAAAAA/wQAAAAAAAAAAAAA/wQAAAAAAAAABQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwBAAAAAAAAPAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAAFAAAAAAAAAQUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "kb,"
					},
					"AwAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAAQFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABBQAAAAAAAAEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEBQAAAAAAAAQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAYFAAAAAAAABwUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGBQAAAAAAAAYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcFAAAAAAAACAUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHBQAAAAAAAAcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					2,
					"left_delete",
					null,
					"AgAAAAcFAAAAAAAABwUAAAAAAAABAAAAIAYFAAAAAAAABgUAAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIBQAAAAAAAAgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "unc"
					},
					"AwAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGBQAAAAAAAAYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAAEFAAAAAAAAAQUAAAAAAAAIAAAAa2IsIGZ1bmMBBQAAAAAAAAsFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBQAAAAAAAAEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAsFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA4FAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALBQAAAAAAAAsFAAAAAAAA////////738"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " self."
					},
					"BgAAAA4FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABEFAAAAAAAAAAAAABEFAAAAAAAAEgUAAAAAAAAAAAAAEgUAAAAAAAATBQAAAAAAAAAAAAATBQAAAAAAABQFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOBQAAAAAAAA4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "ke"
					},
					"AgAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAWBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUBQAAAAAAABQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{\"description\":\"HashMap<KeyBinding, Box<dyn Fn(), Global>, RandomState>\"},\"label\":\"key_bindings\",\"detail\":\"HashMap<KeyBinding, Box<dyn Fn(), Global>, RandomState>\",\"kind\":5,\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"textEdit\":{\"replace\":{\"start\":{\"line\":39,\"character\":35},\"end\":{\"line\":39,\"character\":35}},\"newText\":\"key_bindings\",\"insert\":{\"start\":{\"line\":39,\"character\":35},\"end\":{\"line\":39,\"character\":35}}},\"deprecated\":false,\"preselect\":true,\"filterText\":\"key_bindings\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							114,
							147,
							6
						],
						"trigger": "key_bindings"
					},
					"AwAAABUFAAAAAAAAFQUAAAAAAAABAAAAZRQFAAAAAAAAFAUAAAAAAAABAAAAaxQFAAAAAAAAIAUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWBQAAAAAAABYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": ".i"
					},
					"AgAAACAFAAAAAAAAIQUAAAAAAAAAAAAAIQUAAAAAAAAiBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgBQAAAAAAACAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{\"description\":\"fn(&self) -> Iter<K, V>\"},\"textEdit\":{\"replace\":{\"start\":{\"line\":39,\"character\":48},\"end\":{\"line\":39,\"character\":49}},\"newText\":\"iter()$0\",\"insert\":{\"start\":{\"line\":39,\"character\":48},\"end\":{\"line\":39,\"character\":49}}},\"kind\":2,\"preselect\":true,\"deprecated\":false,\"insertTextFormat\":2,\"additionalTextEdits\":[],\"label\":\"iter()\",\"detail\":\"fn(&self) -> Iter<K, V>\",\"sortText\":\"ffffffef\",\"documentation\":{\"kind\":\"markdown\",\"value\":\"An iterator visiting all key-value pairs in arbitrary order.\\nThe iterator element type is `(&'a K, &'a V)`.\\n\\n# Examples\\n\\n```rust\\nuse std::collections::HashMap;\\n\\nlet map = HashMap::from([\\n    (\\\"a\\\", 1),\\n    (\\\"b\\\", 2),\\n    (\\\"c\\\", 3),\\n]);\\n\\nfor (key, val) in map.iter() {\\n    println!(\\\"key: {key} val: {val}\\\");\\n}\\n```\\n\\n# Performance\\n\\nIn the current implementation, iterating over map takes O(capacity) time\\ninstead of O(len) because it internally visits empty buckets too.\"},\"filterText\":\"iter\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							117,
							150,
							2
						],
						"trigger": "iter()"
					},
					"AgAAACEFAAAAAAAAIQUAAAAAAAABAAAAaSEFAAAAAAAAJwUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiBQAAAAAAACIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACcFAAAAAAAAKQUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnBQAAAAAAACcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACgFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAA1BQAAAAAAAAAAAAA1BQAAAAAAADYFAAAAAAAAAAAAADYFAAAAAAAAQgUAAAAAAAAAAAAAKQUAAAAAAAApBQAAAAAAAAwAAAAgICAgICAgICAgICApBQAAAAAAADkFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoBQAAAAAAACgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					164,
					1,
					"paste",
					null,
					"AQAAADkFAAAAAAAAGQYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5BQAAAAAAADkFAAAAAAAA////////738"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "kb"
					},
					"AwAAAGEFAAAAAAAAYgUAAAAAAAAAAAAAYgUAAAAAAABiBQAAAAAAADMAAABLZXlCaW5kaW5nOjpuZXcoS2V5TW9kaWZpZXI6Ok5vbmUsIEtleUNvZGU6OkVzY2FwZSliBQAAAAAAAGMFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUBQAAAAAAAGEFAAAAAAAAAAAAAAAAXEA"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAAJwFAAAAAAAAnAUAAAAAAAAhAAAAcHJpbnRsbiEoImdvdCBlc2NhcGU6IHN0b3BwaW5nIik7",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9BQAAAAAAAJwFAAAAAAAAAAAAAAAAXEA"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAAJwFAAAAAAAAnQUAAAAAAAAAAAAAnQUAAAAAAACeBQAAAAAAAAAAAACeBQAAAAAAAJ8FAAAAAAAAAAAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcBQAAAAAAAJwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKAFAAAAAAAAogUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgBQAAAAAAAKAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKIFAAAAAAAAowUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiBQAAAAAAAKIFAAAAAAAA////////738"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAMAFAAAAAAAAwQUAAAAAAAAAAAAAwQUAAAAAAADRBQAAAAAAAAAAAADRBQAAAAAAANIFAAAAAAAAAAAAANIFAAAAAAAA0wUAAAAAAAAAAAAA0wUAAAAAAADUBQAAAAAAAAAAAADUBQAAAAAAANUFAAAAAAAAAAAAANUFAAAAAAAA1gUAAAAAAAAAAAAA1gUAAAAAAADXBQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADABQAAAAAAAMAFAAAAAAAA////////738"
				],
				[
					183,
					1,
					"left_delete",
					null,
					"AQAAANYFAAAAAAAA1gUAAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXBQAAAAAAANcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"left_delete",
					null,
					"AQAAANEFAAAAAAAA0QUAAAAAAAAFAAAAcmV0dXI",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWBQAAAAAAANEFAAAAAAAAAAAAAAAAXEA"
				],
				[
					187,
					2,
					"left_delete",
					null,
					"AgAAAMEFAAAAAAAAwQUAAAAAAAAQAAAAICAgICAgICAgICAgICAgIMAFAAAAAAAAwAUAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRBQAAAAAAAMEFAAAAAAAAAAAAAAAAAAA"
				],
				[
					189,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									39,
									54
								],
								[
									39,
									54
								],
								" ",
								null
							],
							[
								[
									40,
									39
								],
								[
									42,
									15
								],
								"kb,",
								null
							],
							[
								[
									42,
									21
								],
								[
									42,
									22
								],
								") {",
								null
							],
							[
								[
									43,
									10
								],
								[
									44,
									0
								],
								"",
								null
							],
							[
								[
									44,
									10
								],
								[
									44,
									16
								],
								"",
								null
							],
							[
								[
									45,
									16
								],
								[
									45,
									16
								],
								"    ",
								null
							],
							[
								[
									46,
									0
								],
								[
									46,
									0
								],
								"    ",
								null
							]
						]
					},
					"BwAAAMEFAAAAAAAAxQUAAAAAAAAAAAAAtAUAAAAAAAC4BQAAAAAAAAAAAACWBQAAAAAAAJYFAAAAAAAABgAAACAgICAgIIYFAAAAAAAAhgUAAAAAAAAGAAAAICApIHsKegUAAAAAAAB9BQAAAAAAAAEAAAAsUAUAAAAAAABTBQAAAAAAACQAAAAKICAgICAgICAgICAgICAgIGtiLAogICAgICAgICAgICAgICAnBQAAAAAAACgFAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADABQAAAAAAAMAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAKYDAAAAAAAApwMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAwAAAAAAAKYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAK4GAAAAAAAArgYAAAAAAAAHAAAAdG9kbyEoKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQYAAAAAAACuBgAAAAAAAAAAAAAAADxA"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "kb"
					},
					"AgAAAK4GAAAAAAAArwYAAAAAAAAAAAAArwYAAAAAAACwBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgYAAAAAAACuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALAGAAAAAAAAsQYAAAAAAAAAAAAAsQYAAAAAAACyBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsAYAAAAAAACwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " H"
					},
					"AgAAALIGAAAAAAAAswYAAAAAAAAAAAAAswYAAAAAAAC0BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsgYAAAAAAACyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAK4GAAAAAAAArwYAAAAAAAAAAAAArwYAAAAAAACwBgAAAAAAAAAAAACwBgAAAAAAALEGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgYAAAAAAACuBgAAAAAAAAAAAAAAADxA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEGAAAAAAAAsgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsQYAAAAAAACxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "ashm"
					},
					"BAAAALgGAAAAAAAAuQYAAAAAAAAAAAAAuQYAAAAAAAC6BgAAAAAAAAAAAAC6BgAAAAAAALsGAAAAAAAAAAAAALsGAAAAAAAAvAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuAYAAAAAAAC4BgAAAAAAAP///////+9/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAALsGAAAAAAAAuwYAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAYAAAAAAAC8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "Map::new"
					},
					"CAAAALsGAAAAAAAAvAYAAAAAAAAAAAAAvAYAAAAAAAC9BgAAAAAAAAAAAAC9BgAAAAAAAL4GAAAAAAAAAAAAAL4GAAAAAAAAvwYAAAAAAAAAAAAAvwYAAAAAAADABgAAAAAAAAAAAADABgAAAAAAAMEGAAAAAAAAAAAAAMEGAAAAAAAAwgYAAAAAAAAAAAAAwgYAAAAAAADDBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMMGAAAAAAAAxQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwwYAAAAAAADDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMUGAAAAAAAAxgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQYAAAAAAADFBgAAAAAAAP///////+9/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n\nkb"
					},
					"BwAAAMYGAAAAAAAAxwYAAAAAAAAAAAAAxwYAAAAAAADLBgAAAAAAAAAAAADLBgAAAAAAAMwGAAAAAAAAAAAAAMwGAAAAAAAA0AYAAAAAAAAAAAAAxwYAAAAAAADHBgAAAAAAAAQAAAAgICAgzAYAAAAAAADNBgAAAAAAAAAAAADNBgAAAAAAAM4GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgYAAAAAAADGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYGAAAAAAAAxwYAAAAAAAAAAAAAxwYAAAAAAADLBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgYAAAAAAADGBgAAAAAAAP///////+9/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "kb.in"
					},
					"BQAAAMsGAAAAAAAAzAYAAAAAAAAAAAAAzAYAAAAAAADNBgAAAAAAAAAAAADNBgAAAAAAAM4GAAAAAAAAAAAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywYAAAAAAADLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "sert"
					},
					"BAAAANAGAAAAAAAA0QYAAAAAAAAAAAAA0QYAAAAAAADSBgAAAAAAAAAAAADSBgAAAAAAANMGAAAAAAAAAAAAANMGAAAAAAAA1AYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0AYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANQGAAAAAAAA1gYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AYAAAAAAADUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "Key"
					},
					"AwAAANUGAAAAAAAA1gYAAAAAAAAAAAAA1gYAAAAAAADXBgAAAAAAAAAAAADXBgAAAAAAANgGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QYAAAAAAADVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "Binding"
					},
					"BwAAANgGAAAAAAAA2QYAAAAAAAAAAAAA2QYAAAAAAADaBgAAAAAAAAAAAADaBgAAAAAAANsGAAAAAAAAAAAAANsGAAAAAAAA3AYAAAAAAAAAAAAA3AYAAAAAAADdBgAAAAAAAAAAAADdBgAAAAAAAN4GAAAAAAAAAAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AYAAAAAAADYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAN8GAAAAAAAA4AYAAAAAAAAAAAAA4AYAAAAAAADhBgAAAAAAAAAAAADhBgAAAAAAAOIGAAAAAAAAAAAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA4wYAAAAAAADkBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wYAAAAAAADfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOQGAAAAAAAA5gYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AYAAAAAAADkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"insertTextFormat\":2,\"labelDetails\":{\"description\":\"KeyModifier::Ctrl\"},\"label\":\"KeyModifier::Ctrl\",\"detail\":\"KeyModifier::Ctrl\",\"kind\":20,\"sortText\":\"ffffffec\",\"additionalTextEdits\":[],\"textEdit\":{\"replace\":{\"start\":{\"line\":60,\"character\":30},\"end\":{\"line\":60,\"character\":30}},\"newText\":\"KeyModifier::Ctrl$0\",\"insert\":{\"start\":{\"line\":60,\"character\":30},\"end\":{\"line\":60,\"character\":30}}},\"deprecated\":false,\"preselect\":true,\"filterText\":\"KeyModifier::Ctrl\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							116,
							34,
							1
						],
						"trigger": "KeyModifier::Ctrl"
					},
					"AQAAAOUGAAAAAAAA9gYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "|"
					},
					"AQAAAPYGAAAAAAAA9wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gYAAAAAAAD2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"insertTextFormat\":2,\"labelDetails\":{\"description\":\"KeyModifier::Shift\"},\"label\":\"KeyModifier::Shift\",\"detail\":\"KeyModifier::Shift\",\"kind\":20,\"sortText\":\"ffffffec\",\"additionalTextEdits\":[],\"textEdit\":{\"replace\":{\"start\":{\"line\":60,\"character\":48},\"end\":{\"line\":60,\"character\":48}},\"newText\":\"KeyModifier::Shift$0\",\"insert\":{\"start\":{\"line\":60,\"character\":48},\"end\":{\"line\":60,\"character\":48}}},\"deprecated\":false,\"preselect\":true,\"filterText\":\"KeyModifier::Shift\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							118,
							52,
							1
						],
						"trigger": "KeyModifier::Shift"
					},
					"AQAAAPcGAAAAAAAACQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wYAAAAAAAD3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAkHAAAAAAAACgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAoHAAAAAAAACwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACgcAAAAAAAAKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAAsHAAAAAAAADAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACwcAAAAAAAALBwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAAsHAAAAAAAACwcAAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAAsHAAAAAAAADAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACwcAAAAAAAALBwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAAsHAAAAAAAACwcAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAAsHAAAAAAAADAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACwcAAAAAAAALBwAAAAAAAAAAAAAAwH1A"
				],
				[
					78,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"insertTextFormat\":2,\"labelDetails\":{\"description\":\"KeyCode::D\"},\"label\":\"KeyCode::D\",\"detail\":\"KeyCode::D\",\"kind\":20,\"sortText\":\"ffffffec\",\"additionalTextEdits\":[],\"textEdit\":{\"replace\":{\"start\":{\"line\":60,\"character\":68},\"end\":{\"line\":60,\"character\":69}},\"newText\":\"KeyCode::D$0\",\"insert\":{\"start\":{\"line\":60,\"character\":68},\"end\":{\"line\":60,\"character\":69}}},\"deprecated\":false,\"preselect\":true,\"filterText\":\"KeyCode::D\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							128,
							65,
							1
						],
						"trigger": "KeyCode::D"
					},
					"AgAAAAsHAAAAAAAACwcAAAAAAAABAAAARAsHAAAAAAAAFQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABYHAAAAAAAAFwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgcAAAAAAAAWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " B"
					},
					"AgAAABcHAAAAAAAAGAcAAAAAAAAAAAAAGAcAAAAAAAAZBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwcAAAAAAAAXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "ox::new"
					},
					"BwAAABkHAAAAAAAAGgcAAAAAAAAAAAAAGgcAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABwHAAAAAAAAAAAAABwHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAeBwAAAAAAAAAAAAAeBwAAAAAAAB8HAAAAAAAAAAAAAB8HAAAAAAAAIAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQcAAAAAAAAZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACAHAAAAAAAAIgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAcAAAAAAAAgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAACEHAAAAAAAAIgcAAAAAAAAAAAAAIgcAAAAAAAAjBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQcAAAAAAAAhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					2,
					"left_delete",
					null,
					"AgAAACIHAAAAAAAAIgcAAAAAAAABAAAAfCEHAAAAAAAAIQcAAAAAAAABAAAAfA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIwcAAAAAAAAjBwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "apply"
					},
					"BQAAACEHAAAAAAAAIgcAAAAAAAAAAAAAIgcAAAAAAAAjBwAAAAAAAAAAAAAjBwAAAAAAACQHAAAAAAAAAAAAACQHAAAAAAAAJQcAAAAAAAAAAAAAJQcAAAAAAAAmBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQcAAAAAAAAhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "_dynamics"
					},
					"CQAAACYHAAAAAAAAJwcAAAAAAAAAAAAAJwcAAAAAAAAoBwAAAAAAAAAAAAAoBwAAAAAAACkHAAAAAAAAAAAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC8HAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJgcAAAAAAAAmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "_to_"
					},
					"BAAAAC8HAAAAAAAAMAcAAAAAAAAAAAAAMAcAAAAAAAAxBwAAAAAAAAAAAAAxBwAAAAAAADIHAAAAAAAAAAAAADIHAAAAAAAAMwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwcAAAAAAAAvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					4,
					"left_delete",
					null,
					"BAAAADIHAAAAAAAAMgcAAAAAAAABAAAAXzEHAAAAAAAAMQcAAAAAAAABAAAAbzAHAAAAAAAAMAcAAAAAAAABAAAAdC8HAAAAAAAALwcAAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwcAAAAAAAAzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADEHAAAAAAAAMgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQcAAAAAAAAxBwAAAAAAAP///////+9/"
				],
				[
					93,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									60,
									14
								],
								[
									60,
									14
								],
								"\n        ",
								null
							],
							[
								[
									60,
									47
								],
								[
									60,
									48
								],
								" | ",
								null
							],
							[
								[
									60,
									80
								],
								[
									60,
									80
								],
								"\n       ",
								null
							],
							[
								[
									60,
									105
								],
								[
									60,
									105
								],
								",\n    ",
								null
							]
						]
					},
					"BAAAADAHAAAAAAAANgcAAAAAAAAAAAAAFwcAAAAAAAAfBwAAAAAAAAAAAAD2BgAAAAAAAPkGAAAAAAAAAQAAAHzVBgAAAAAAAN4GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMgcAAAAAAAAyBwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{},\"sortText\":\"ffffffef\",\"textEdit\":{\"replace\":{\"start\":{\"line\":61,\"character\":24},\"end\":{\"line\":61,\"character\":35}},\"newText\":\"KeyModifier\",\"insert\":{\"start\":{\"line\":61,\"character\":24},\"end\":{\"line\":61,\"character\":35}}},\"kind\":13,\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"KeyModifier\",\"filterText\":\"KeyModifier\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							144,
							95,
							0
						],
						"trigger": "KeyModifier"
					},
					"AgAAAO4GAAAAAAAA7gYAAAAAAAALAAAAS2V5TW9kaWZpZXLuBgAAAAAAAPkGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+QYAAAAAAAD5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFYHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABYBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgcAAAAAAABWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFcHAAAAAAAAWAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwcAAAAAAABXBwAAAAAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAFgHAAAAAAAAWQcAAAAAAAAAAAAAWQcAAAAAAABaBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAcAAAAAAABYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgcAAAAAAABaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAFsHAAAAAAAAaQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwcAAAAAAABbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkHAAAAAAAAawcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaQcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGsHAAAAAAAAbQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawcAAAAAAABrBwAAAAAAAP///////+9/"
				],
				[
					116,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAGwHAAAAAAAAbQcAAAAAAAAAAAAAbQcAAAAAAABuBwAAAAAAAAAAAABtBwAAAAAAAHEHAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "todo"
					},
					"BAAAAHEHAAAAAAAAcgcAAAAAAAAAAAAAcgcAAAAAAABzBwAAAAAAAAAAAABzBwAAAAAAAHQHAAAAAAAAAAAAAHQHAAAAAAAAdQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQcAAAAAAABxBwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"labelDetails\":{\"description\":\"macro_rules! todo\"},\"textEdit\":{\"replace\":{\"start\":{\"line\":70,\"character\":4},\"end\":{\"line\":70,\"character\":8}},\"newText\":\"todo!($0)\",\"insert\":{\"start\":{\"line\":70,\"character\":4},\"end\":{\"line\":70,\"character\":8}}},\"kind\":3,\"preselect\":true,\"deprecated\":false,\"insertTextFormat\":2,\"additionalTextEdits\":[],\"label\":\"todo!(…)\",\"detail\":\"macro_rules! todo\",\"sortText\":\"ffffffef\",\"documentation\":{\"kind\":\"markdown\",\"value\":\"Indicates unfinished code.\\n\\nThis can be useful if you are prototyping and are just looking to have your\\ncode typecheck.\\n\\nThe difference between [`unimplemented!`] and `todo!` is that while `todo!` conveys\\nan intent of implementing the functionality later and the message is \\\"not yet\\nimplemented\\\", `unimplemented!` makes no such claims. Its message is \\\"not implemented\\\".\\nAlso some IDEs will mark `todo!`s.\\n\\n# Panics\\n\\nThis will always [`panic!`].\\n\\n# Examples\\n\\nHere's an example of some in-progress code. We have a trait `Foo`:\\n\\n```rust\\ntrait Foo {\\n    fn bar(&self);\\n    fn baz(&self);\\n}\\n```\\n\\nWe want to implement `Foo` on one of our types, but we also want to work on\\njust `bar()` first. In order for our code to compile, we need to implement\\n`baz()`, so we can use `todo!`:\\n\\n```rust\\nstruct MyStruct;\\n\\nimpl Foo for MyStruct {\\n    fn bar(&self) {\\n        // implementation goes here\\n    }\\n\\n    fn baz(&self) {\\n        // let's not worry about implementing baz() for now\\n        todo!();\\n    }\\n}\\n\\nfn main() {\\n    let s = MyStruct;\\n    s.bar();\\n\\n    // we aren't even using baz(), so this is fine.\\n}\\n```\"},\"filterText\":\"todo!\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							161,
							117,
							4
						],
						"trigger": "todo!(…)"
					},
					"AgAAAHEHAAAAAAAAcQcAAAAAAAAEAAAAdG9kb3EHAAAAAAAAeAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQcAAAAAAAB1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									68,
									0
								],
								[
									69,
									0
								],
								"",
								null
							],
							[
								[
									69,
									19
								],
								[
									69,
									19
								],
								" ",
								null
							]
						]
					},
					"AgAAAGsHAAAAAAAAbAcAAAAAAAAAAAAAVwcAAAAAAABXBwAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwcAAAAAAAB3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					2,
					"left_delete",
					null,
					"AgAAAAAHAAAAAAAAAAcAAAAAAAABAAAAfP8GAAAAAAAA/wYAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEHAAAAAAAAAQcAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP8GAAAAAAAAAAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8GAAAAAAAA/wYAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "[${0:$SELECTION}]"
					},
					"AgAAAO4GAAAAAAAA7gYAAAAAAAAlAAAAS2V5TW9kaWZpZXI6OkN0cmwsIEtleU1vZGlmaWVyOjpTaGlmdO4GAAAAAAAAFQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4GAAAAAAAAEwcAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAHIHAAAAAAAAcgcAAAAAAAAHAAAAdG9kbyEoKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkHAAAAAAAAcgcAAAAAAAAAAAAAAAA8QA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "Reap"
					},
					"BAAAAHIHAAAAAAAAcwcAAAAAAAAAAAAAcwcAAAAAAAB0BwAAAAAAAAAAAAB0BwAAAAAAAHUHAAAAAAAAAAAAAHUHAAAAAAAAdgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIHAAAAAAAAcgcAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAHIHAAAAAAAAcgcAAAAAAAAEAAAAUmVhcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYHAAAAAAAAcgcAAAAAAAAAAAAAAAA8QA"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAHIHAAAAAAAAcwcAAAAAAAAAAAAAcwcAAAAAAAB0BwAAAAAAAAAAAAB0BwAAAAAAAHUHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIHAAAAAAAAcgcAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " rpr"
					},
					"BAAAAHUHAAAAAAAAdgcAAAAAAAAAAAAAdgcAAAAAAAB3BwAAAAAAAAAAAAB3BwAAAAAAAHgHAAAAAAAAAAAAAHgHAAAAAAAAeQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUHAAAAAAAAdQcAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkHAAAAAAAAeQcAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " Reaper::ge"
					},
					"CwAAAHsHAAAAAAAAfAcAAAAAAAAAAAAAfAcAAAAAAAB9BwAAAAAAAAAAAAB9BwAAAAAAAH4HAAAAAAAAAAAAAH4HAAAAAAAAfwcAAAAAAAAAAAAAfwcAAAAAAACABwAAAAAAAAAAAACABwAAAAAAAIEHAAAAAAAAAAAAAIEHAAAAAAAAggcAAAAAAAAAAAAAggcAAAAAAACDBwAAAAAAAAAAAACDBwAAAAAAAIQHAAAAAAAAAAAAAIQHAAAAAAAAhQcAAAAAAAAAAAAAhQcAAAAAAACGBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsHAAAAAAAAewcAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAIYHAAAAAAAAhwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYHAAAAAAAAhgcAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIcHAAAAAAAAiQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcHAAAAAAAAhwcAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAIkHAAAAAAAAigcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkHAAAAAAAAiQcAAAAAAAD////////vfw"
				],
				[
					42,
					1,
					"insert_snippet",
					{
						"contents": "[${0:$SELECTION}]"
					},
					"AgAAALcDAAAAAAAAtwMAAAAAAAARAAAAS2V5TW9kaWZpZXI6Ok5vbmW3AwAAAAAAAMoDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcDAAAAAAAAyAMAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHQHAAAAAAAAdwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "Mut"
					},
					"AwAAAKUGAAAAAAAApgYAAAAAAAAAAAAApgYAAAAAAACnBgAAAAAAAAAAAACnBgAAAAAAAKgGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUGAAAAAAAApQYAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHcHAAAAAAAAdwcAAAAAAAADAAAALy8g",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIHAAAAAAAAkgcAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAI8HAAAAAAAAkAcAAAAAAAAAAAAAkAcAAAAAAACRBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8HAAAAAAAAjwcAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"deprecated\":false,\"label\":\"get_user_inputs(…)\",\"labelDetails\":{\"description\":\"fn(&self, impl Into<String>, Vec<&str, Global>, impl Into<Option<usize>>) -> Result<HashMap<String, String, RandomState>, Box<dyn Error, Global>>\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"fn(&self, impl Into<String>, Vec<&str, Global>, impl Into<Option<usize>>) -> Result<HashMap<String, String, RandomState>, Box<dyn Error, Global>>\",\"kind\":2,\"filterText\":\"get_user_inputs\",\"textEdit\":{\"replace\":{\"start\":{\"line\":69,\"character\":28},\"end\":{\"line\":69,\"character\":30}},\"newText\":\"get_user_inputs(${1:title}, ${2:captions}, ${3:buf_size})$0\",\"insert\":{\"start\":{\"line\":69,\"character\":28},\"end\":{\"line\":69,\"character\":30}}},\"preselect\":true,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Show text inputs to user and get values from them.\\n\\n# Note\\n\\ndefault buf size is 1024\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							195,
							79,
							2
						],
						"trigger": "get_user_inputs(…)"
					},
					"AgAAAI8HAAAAAAAAjwcAAAAAAAACAAAAaW6PBwAAAAAAALkHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEHAAAAAAAAkQcAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAJ8HAAAAAAAAnwcAAAAAAAAFAAAAdGl0bGWfBwAAAAAAAKYHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8HAAAAAAAApAcAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "Type"
					},
					"BQAAAKAHAAAAAAAAoQcAAAAAAAAAAAAAoQcAAAAAAAChBwAAAAAAAAUAAAB0aXRsZaEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAACjBwAAAAAAAKQHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAHAAAAAAAApQcAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQHAAAAAAAApQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQHAAAAAAAApAcAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "dynami"
					},
					"BgAAAKUHAAAAAAAApgcAAAAAAAAAAAAApgcAAAAAAACnBwAAAAAAAAAAAACnBwAAAAAAAKgHAAAAAAAAAAAAAKgHAAAAAAAAqQcAAAAAAAAAAAAAqQcAAAAAAACqBwAAAAAAAAAAAACqBwAAAAAAAKsHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUHAAAAAAAApQcAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "cs"
					},
					"AgAAAKsHAAAAAAAArAcAAAAAAAAAAAAArAcAAAAAAACtBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsHAAAAAAAAqwcAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0HAAAAAAAArgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0HAAAAAAAArQcAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAK4HAAAAAAAArwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4HAAAAAAAArgcAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAK4HAAAAAAAArgcAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8HAAAAAAAArwcAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "definition"
					},
					"CgAAAK4HAAAAAAAArwcAAAAAAAAAAAAArwcAAAAAAACwBwAAAAAAAAAAAACwBwAAAAAAALEHAAAAAAAAAAAAALEHAAAAAAAAsgcAAAAAAAAAAAAAsgcAAAAAAACzBwAAAAAAAAAAAACzBwAAAAAAALQHAAAAAAAAAAAAALQHAAAAAAAAtQcAAAAAAAAAAAAAtQcAAAAAAAC2BwAAAAAAAAAAAAC2BwAAAAAAALcHAAAAAAAAAAAAALcHAAAAAAAAuAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4HAAAAAAAArgcAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAHIHAAAAAAAAcwcAAAAAAAAAAAAAcwcAAAAAAAB3BwAAAAAAAAAAAAB3BwAAAAAAAHgHAAAAAAAAAAAAAHgHAAAAAAAAeQcAAAAAAAAAAAAAeQcAAAAAAAB6BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIHAAAAAAAAcgcAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " captio"
					},
					"BwAAAHoHAAAAAAAAewcAAAAAAAAAAAAAewcAAAAAAAB8BwAAAAAAAAAAAAB8BwAAAAAAAH0HAAAAAAAAAAAAAH0HAAAAAAAAfgcAAAAAAAAAAAAAfgcAAAAAAAB/BwAAAAAAAAAAAAB/BwAAAAAAAIAHAAAAAAAAAAAAAIAHAAAAAAAAgQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoHAAAAAAAAegcAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "ns"
					},
					"AgAAAIEHAAAAAAAAggcAAAAAAAAAAAAAggcAAAAAAACDBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEHAAAAAAAAgQcAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIMHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACFBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMHAAAAAAAAgwcAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIUHAAAAAAAAhgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUHAAAAAAAAhQcAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "vr"
					},
					"AgAAAIYHAAAAAAAAhwcAAAAAAAAAAAAAhwcAAAAAAACIBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYHAAAAAAAAhgcAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAIcHAAAAAAAAhwcAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgHAAAAAAAAiAcAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "ec"
					},
					"AgAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAiAcAAAAAAACJBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcHAAAAAAAAhwcAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"deprecated\":false,\"label\":\"vec![…]\",\"labelDetails\":{\"description\":\"macro_rules! vec\"},\"detail\":\"macro_rules! vec\",\"kind\":3,\"filterText\":\"vec!\",\"textEdit\":{\"replace\":{\"start\":{\"line\":69,\"character\":19},\"end\":{\"line\":69,\"character\":22}},\"newText\":\"vec![$0]\",\"insert\":{\"start\":{\"line\":69,\"character\":19},\"end\":{\"line\":69,\"character\":22}}},\"preselect\":true,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Creates a [`Vec`] containing the arguments.\\n\\n`vec!` allows `Vec`s to be defined with the same syntax as array expressions.\\nThere are two forms of this macro:\\n\\n- Create a [`Vec`] containing a given list of elements:\\n\\n```rust\\nlet v = vec![1, 2, 3];\\nassert_eq!(v[0], 1);\\nassert_eq!(v[1], 2);\\nassert_eq!(v[2], 3);\\n```\\n\\n- Create a [`Vec`] from a given element and size:\\n\\n```rust\\nlet v = vec![1; 3];\\nassert_eq!(v, [1, 1, 1]);\\n```\\n\\nNote that unlike array expressions this syntax supports all elements\\nwhich implement [`Clone`] and the number of elements doesn't have to be\\na constant.\\n\\nThis will use `clone` to duplicate an expression, so one should be careful\\nusing this with types having a nonstandard `Clone` implementation. For\\nexample, `vec![Rc::new(1); 5]` will create a vector of five references\\nto the same boxed integer value, not five references pointing to independently\\nboxed integers.\\n\\nAlso, note that `vec![expr; 0]` is allowed, and produces an empty vector.\\nThis will still evaluate `expr`, however, and immediately drop the resulting value, so\\nbe mindful of side effects.\\n\\n[`Vec`]: crate::vec::Vec\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							216,
							108,
							2
						],
						"trigger": "vec![…]"
					},
					"AgAAAIYHAAAAAAAAhgcAAAAAAAADAAAAdmVjhgcAAAAAAACMBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkHAAAAAAAAiQcAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIsHAAAAAAAAjQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsHAAAAAAAAiwcAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "dyn"
					},
					"AwAAAIwHAAAAAAAAjQcAAAAAAAAAAAAAjQcAAAAAAACOBwAAAAAAAAAAAACOBwAAAAAAAI8HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJEHAAAAAAAAkgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEHAAAAAAAAkQcAAAAAAAD////////vfw"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "amic"
					},
					"BAAAAI8HAAAAAAAAkAcAAAAAAAAAAAAAkAcAAAAAAACRBwAAAAAAAAAAAACRBwAAAAAAAJIHAAAAAAAAAAAAAJIHAAAAAAAAkwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8HAAAAAAAAjwcAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					2,
					"left_delete",
					null,
					"AgAAAOkHAAAAAAAA6QcAAAAAAAAIAAAAYnVmX3NpemXoBwAAAAAAAOgHAAAAAAAAAQAAACA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkHAAAAAAAA8QcAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgHAAAAAAAA6QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgHAAAAAAAA6AcAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "None"
					},
					"BAAAAOkHAAAAAAAA6gcAAAAAAAAAAAAA6gcAAAAAAADrBwAAAAAAAAAAAADrBwAAAAAAAOwHAAAAAAAAAAAAAOwHAAAAAAAA7QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkHAAAAAAAA6QcAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAO4HAAAAAAAA7wcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4HAAAAAAAA7gcAAAAAAAD////////vfw"
				],
				[
					133,
					1,
					"cut",
					null,
					"AQAAALIHAAAAAAAAsgcAAAAAAAA8AAAALmdldF91c2VyX2lucHV0cygiVHlwZSBkeW5hbWljcyBkZWZpbml0aW9uIiwgY2FwdGlvbnMsIE5vbmUp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIHAAAAAAAA7gcAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAALMHAAAAAAAAtAcAAAAAAAAAAAAAtAcAAAAAAAC4BwAAAAAAAAAAAAC4BwAAAAAAALkHAAAAAAAAAAAAALkHAAAAAAAAugcAAAAAAAAAAAAAugcAAAAAAAC7BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMHAAAAAAAAswcAAAAAAAD////////vfw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " inpo"
					},
					"BQAAALsHAAAAAAAAvAcAAAAAAAAAAAAAvAcAAAAAAAC9BwAAAAAAAAAAAAC9BwAAAAAAAL4HAAAAAAAAAAAAAL4HAAAAAAAAvwcAAAAAAAAAAAAAvwcAAAAAAADABwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsHAAAAAAAAuwcAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"left_delete",
					null,
					"AQAAAL8HAAAAAAAAvwcAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAHAAAAAAAAwAcAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "uts"
					},
					"AwAAAL8HAAAAAAAAwAcAAAAAAAAAAAAAwAcAAAAAAADBBwAAAAAAAAAAAADBBwAAAAAAAMIHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8HAAAAAAAAvwcAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMIHAAAAAAAAwwcAAAAAAAAAAAAAwwcAAAAAAADEBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIHAAAAAAAAwgcAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMQHAAAAAAAAxQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQHAAAAAAAAxAcAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"paste",
					null,
					"AQAAAMUHAAAAAAAAAQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUHAAAAAAAAxQcAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "rpr"
					},
					"AwAAAMUHAAAAAAAAxgcAAAAAAAAAAAAAxgcAAAAAAADHBwAAAAAAAAAAAADHBwAAAAAAAMgHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUHAAAAAAAAxQcAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAQIAAAAAAAABQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQIAAAAAAAABAgAAAAAAAD////////vfw"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAUIAAAAAAAABggAAAAAAAAAAAAABggAAAAAAAAKCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUIAAAAAAAABQgAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					2,
					"left_delete",
					null,
					"AgAAAAYIAAAAAAAABggAAAAAAAAEAAAAICAgIAUIAAAAAAAABQgAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoIAAAAAAAACggAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAQIAAAAAAAABQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQIAAAAAAAABAgAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAAAQIAAAAAAAABAgAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUIAAAAAAAABQgAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": ".ge"
					},
					"AwAAAAQIAAAAAAAABQgAAAAAAAAAAAAABQgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAcIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQIAAAAAAAABAgAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAAcIAAAAAAAACAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcIAAAAAAAABwgAAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgIAAAAAAAACggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAkIAAAAAAAACwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkIAAAAAAAACQgAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "dynamic"
					},
					"BwAAAAoIAAAAAAAACwgAAAAAAAAAAAAACwgAAAAAAAAMCAAAAAAAAAAAAAAMCAAAAAAAAA0IAAAAAAAAAAAAAA0IAAAAAAAADggAAAAAAAAAAAAADggAAAAAAAAPCAAAAAAAAAAAAAAPCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAEQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoIAAAAAAAACggAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": ".u"
					},
					"AgAAABMIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAVCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMIAAAAAAAAEwgAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAABQIAAAAAAAAFAgAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUIAAAAAAAAFQgAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAABQIAAAAAAAAFQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					2,
					"left_delete",
					null,
					"AgAAABQIAAAAAAAAFAgAAAAAAAABAAAAZRMIAAAAAAAAEwgAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUIAAAAAAAAFQgAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									71,
									20
								],
								[
									71,
									20
								],
								"\n        ",
								null
							],
							[
								[
									71,
									80
								],
								[
									71,
									80
								],
								"\n        ",
								null
							]
						]
					},
					"AgAAAAQIAAAAAAAADQgAAAAAAAAAAAAAyAcAAAAAAADRBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMIAAAAAAAAEwgAAAAAAAAAAAAAAADwvw"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": ".ex"
					},
					"AwAAAA0IAAAAAAAADggAAAAAAAAAAAAADggAAAAAAAAPCAAAAAAAAAAAAAAPCAAAAAAAABAIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0IAAAAAAAADQgAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					3,
					"left_delete",
					null,
					"AwAAAA8IAAAAAAAADwgAAAAAAAABAAAAeA4IAAAAAAAADggAAAAAAAABAAAAZQ0IAAAAAAAADQgAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAIAAAAAAAAEAgAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "match"
					},
					"BQAAAMUHAAAAAAAAxgcAAAAAAAAAAAAAxgcAAAAAAADHBwAAAAAAAAAAAADHBwAAAAAAAMgHAAAAAAAAAAAAAMgHAAAAAAAAyQcAAAAAAAAAAAAAyQcAAAAAAADKBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUHAAAAAAAAxQcAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoHAAAAAAAAywcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoHAAAAAAAAygcAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABMIAAAAAAAAFQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMIAAAAAAAAEwgAAAAAAAD////////vfw"
				],
				[
					181,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAABQIAAAAAAAAFQgAAAAAAAAAAAAAFQgAAAAAAAAdCAAAAAAAAAAAAAAdCAAAAAAAAB4IAAAAAAAAAAAAAB4IAAAAAAAAJggAAAAAAAAAAAAAFQgAAAAAAAAVCAAAAAAAAAgAAAAgICAgICAgIBUIAAAAAAAAIQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "Ok"
					},
					"AgAAACEIAAAAAAAAIggAAAAAAAAAAAAAIggAAAAAAAAjCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEIAAAAAAAAIQgAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACMIAAAAAAAAJQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMIAAAAAAAAIwgAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAACQIAAAAAAAAJQgAAAAAAAAAAAAAJQgAAAAAAAAmCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"left_delete",
					null,
					"AQAAACUIAAAAAAAAJQgAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYIAAAAAAAAJggAAAAAAAAAAAAAAADwvw"
				],
				[
					189,
					1,
					"cut",
					null,
					"AQAAADkIAAAAAAAAOQgAAAAAAAAQAAAALmdldCgiZHluYW1pYyIpOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkIAAAAAAAAOQgAAAAAAAAAAAAAAABMQA"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADAIAAAAAAAAMQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAIAAAAAAAAMAgAAAAAAAD////////vfw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACYIAAAAAAAAJwgAAAAAAAAAAAAAJwgAAAAAAAAoCAAAAAAAAAAAAAAoCAAAAAAAACkIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYIAAAAAAAAJggAAAAAAAD////////vfw"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAACkIAAAAAAAAKggAAAAAAAAAAAAAKggAAAAAAAArCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkIAAAAAAAAKQgAAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"paste",
					null,
					"AQAAACsIAAAAAAAAOwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsIAAAAAAAAKwgAAAAAAAAAAAAAAADwvw"
				],
				[
					200,
					1,
					"left_delete",
					null,
					"AQAAADoIAAAAAAAAOggAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsIAAAAAAAAOwgAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADoIAAAAAAAAOwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoIAAAAAAAAOggAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\nErr"
					},
					"BQAAADsIAAAAAAAAPAgAAAAAAAAAAAAAPAgAAAAAAABICAAAAAAAAAAAAABICAAAAAAAAEkIAAAAAAAAAAAAAEkIAAAAAAAASggAAAAAAAAAAAAASggAAAAAAABLCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsIAAAAAAAAOwgAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsIAAAAAAAATQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsIAAAAAAAASwgAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAEwIAAAAAAAATQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwIAAAAAAAATAgAAAAAAAAAAAAAAADwvw"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAE4IAAAAAAAATwgAAAAAAAAAAAAATwgAAAAAAABQCAAAAAAAAAAAAABQCAAAAAAAAFEIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4IAAAAAAAATggAAAAAAAD////////vfw"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAAFEIAAAAAAAAUggAAAAAAAAAAAAAUggAAAAAAABTCAAAAAAAAAAAAABTCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAVQgAAAAAAAAAAAAAVQgAAAAAAABWCAAAAAAAAAAAAABWCAAAAAAAAFcIAAAAAAAAAAAAAFcIAAAAAAAAWAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEIAAAAAAAAUQgAAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									71,
									26
								],
								[
									72,
									8
								],
								"",
								null
							],
							[
								[
									72,
									25
								],
								[
									72,
									25
								],
								"\n        ",
								null
							],
							[
								[
									72,
									52
								],
								[
									72,
									52
								],
								"\n       ",
								null
							],
							[
								[
									72,
									62
								],
								[
									72,
									62
								],
								"\n       ",
								null
							],
							[
								[
									72,
									67
								],
								[
									72,
									69
								],
								",",
								null
							],
							[
								[
									73,
									4
								],
								[
									73,
									5
								],
								") {\n",
								null
							],
							[
								[
									73,
									12
								],
								[
									73,
									12
								],
								" ",
								null
							],
							[
								[
									74,
									0
								],
								[
									74,
									4
								],
								"",
								null
							],
							[
								[
									74,
									28
								],
								[
									74,
									28
								],
								",",
								null
							],
							[
								[
									75,
									0
								],
								[
									75,
									3
								],
								"",
								null
							],
							[
								[
									75,
									7
								],
								[
									75,
									8
								],
								"",
								null
							],
							[
								[
									76,
									0
								],
								[
									77,
									0
								],
								"",
								null
							]
						]
					},
					"DAAAAGQIAAAAAAAAZAgAAAAAAAAJAAAAICAgICAgICAKYAgAAAAAAABgCAAAAAAAAAEAAAAgWQgAAAAAAABZCAAAAAAAAAMAAAAgICBYCAAAAAAAAFkIAAAAAAAAAAAAADwIAAAAAAAAPAgAAAAAAAAEAAAAICAgICEIAAAAAAAAIggAAAAAAAAAAAAAGQgAAAAAAAAdCAAAAAAAAAEAAAAgEggAAAAAAAATCAAAAAAAAAIAAAApew0IAAAAAAAAFQgAAAAAAAAAAAAAAwgAAAAAAAALCAAAAAAAAAAAAADoBwAAAAAAAPEHAAAAAAAAAAAAAM4HAAAAAAAAzgcAAAAAAAAJAAAACiAgICAgICAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgIAAAAAAAAWAgAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"right_delete",
					null,
					"AQAAAKUGAAAAAAAApQYAAAAAAAADAAAATXV0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUGAAAAAAAAqAYAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAKcGAAAAAAAAqAYAAAAAAAAAAAAAqAYAAAAAAACpBgAAAAAAAAAAAACpBgAAAAAAAKoGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcGAAAAAAAApwYAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " None"
					},
					"BQAAAKoGAAAAAAAAqwYAAAAAAAAAAAAAqwYAAAAAAACsBgAAAAAAAAAAAACsBgAAAAAAAK0GAAAAAAAAAAAAAK0GAAAAAAAArgYAAAAAAAAAAAAArgYAAAAAAACvBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoGAAAAAAAAqgYAAAAAAAAAAAAAAADwvw"
				],
				[
					232,
					1,
					"left_delete",
					null,
					"AQAAAKsGAAAAAAAAqwYAAAAAAAAEAAAATm9uZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8GAAAAAAAAqwYAAAAAAAAAAAAAAADwvw"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAKsGAAAAAAAArAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsGAAAAAAAAqwYAAAAAAAAAAAAAAADwvw"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKwGAAAAAAAArQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwGAAAAAAAArAYAAAAAAAAAAAAAAADwvw"
				],
				[
					242,
					1,
					"left_delete",
					null,
					"AQAAAKcGAAAAAAAApwYAAAAAAAAGAAAAIC0+ICgp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcGAAAAAAAArQYAAAAAAAAAAAAAAADwvw"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALYGAAAAAAAAtwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYGAAAAAAAAtgYAAAAAAAAAAAAAAADwvw"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcGAAAAAAAAuAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcGAAAAAAAAtwYAAAAAAAAAAAAAAADwvw"
				],
				[
					279,
					1,
					"paste",
					null,
					"AQAAALgGAAAAAAAA2gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgGAAAAAAAAuAYAAAAAAAAAAAAAAADwvw"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAALQGAAAAAAAAtQYAAAAAAAAAAAAAtQYAAAAAAAC2BgAAAAAAAAAAAAC2BgAAAAAAALcGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQGAAAAAAAAtAYAAAAAAAAAAAAAAADwvw"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcGAAAAAAAAuAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcGAAAAAAAAtwYAAAAAAAAAAAAAAADwvw"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": ".e"
					},
					"AgAAAHIIAAAAAAAAcwgAAAAAAAAAAAAAcwgAAAAAAAB0CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIIAAAAAAAAcggAAAAAAAAAAAAAAADwvw"
				],
				[
					312,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"expect\",\"label\":\"expect(…)\",\"labelDetails\":{\"description\":\"const fn(self, &str) -> T\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"const fn(self, &str) -> T\",\"deprecated\":false,\"textEdit\":{\"replace\":{\"start\":{\"line\":76,\"character\":34},\"end\":{\"line\":76,\"character\":34}},\"newText\":\"expect(${1:msg})$0\",\"insert\":{\"start\":{\"line\":76,\"character\":34},\"end\":{\"line\":76,\"character\":34}}},\"kind\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns the contained [`Some`] value, consuming the `self` value.\\n\\n# Panics\\n\\nPanics if the value is a [`None`] with a custom panic message provided by\\n`msg`.\\n\\n# Examples\\n\\n```rust\\nlet x = Some(\\\"value\\\");\\nassert_eq!(x.expect(\\\"fruits are healthy\\\"), \\\"value\\\");\\n```\\n\\n```rust\\nlet x: Option<&str> = None;\\nx.expect(\\\"fruits are healthy\\\"); // panics with `fruits are healthy`\\n```\\n\\n# Recommended Message Style\\n\\nWe recommend that `expect` messages are used to describe the reason you\\n_expect_ the `Option` should be `Some`.\\n\\n```rust\\nlet item = slice.get(0)\\n    .expect(\\\"slice should not be empty\\\");\\n```\\n\\n**Hint**: If you're having trouble remembering how to phrase expect\\nerror messages remember to focus on the word \\\"should\\\" as in \\\"env\\nvariable should be set by blah\\\" or \\\"the given binary should be available\\nand executable by the current user\\\".\\n\\nFor more detail on expect message styles and the reasoning behind our\\nrecommendation please refer to the section on [\\\"Common Message\\nStyles\\\"](../../std/error/index.html#common-message-styles) in the [`std::error`](../../std/error/index.html) module docs.\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							364,
							311,
							1
						],
						"trigger": "expect(…)"
					},
					"AgAAAHMIAAAAAAAAcwgAAAAAAAABAAAAZXMIAAAAAAAAfggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQIAAAAAAAAdAgAAAAAAAAAAAAAAADwvw"
				],
				[
					314,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAHoIAAAAAAAAeggAAAAAAAADAAAAbXNneggAAAAAAAB/CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoIAAAAAAAAfQgAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "sohuld"
					},
					"BwAAAHsIAAAAAAAAfAgAAAAAAAAAAAAAfAgAAAAAAAB8CAAAAAAAAAMAAABtc2d8CAAAAAAAAH0IAAAAAAAAAAAAAH0IAAAAAAAAfggAAAAAAAAAAAAAfggAAAAAAAB/CAAAAAAAAAAAAAB/CAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAgQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsIAAAAAAAAfggAAAAAAAAAAAAAAADwvw"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": " be"
					},
					"AwAAAIEIAAAAAAAAgggAAAAAAAAAAAAAgggAAAAAAACDCAAAAAAAAAAAAACDCAAAAAAAAIQIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEIAAAAAAAAgQgAAAAAAAAAAAAAAADwvw"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAIQIAAAAAAAAhQgAAAAAAAAAAAAAhQgAAAAAAACGCAAAAAAAAAAAAACGCAAAAAAAAIcIAAAAAAAAAAAAAIcIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACJCAAAAAAAAAAAAACJCAAAAAAAAIoIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAAADwvw"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": " hetre"
					},
					"BgAAAIoIAAAAAAAAiwgAAAAAAAAAAAAAiwgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAI0IAAAAAAAAAAAAAI0IAAAAAAAAjggAAAAAAAAAAAAAjggAAAAAAACPCAAAAAAAAAAAAACPCAAAAAAAAJAIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoIAAAAAAAAiggAAAAAAAAAAAAAAADwvw"
				],
				[
					319,
					3,
					"left_delete",
					null,
					"AwAAAI8IAAAAAAAAjwgAAAAAAAABAAAAZY4IAAAAAAAAjggAAAAAAAABAAAAco0IAAAAAAAAjQgAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAADwvw"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAI0IAAAAAAAAjggAAAAAAAAAAAAAjggAAAAAAACPCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0IAAAAAAAAjQgAAAAAAAAAAAAAAADwvw"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": ".to"
					},
					"AwAAAJEIAAAAAAAAkggAAAAAAAAAAAAAkggAAAAAAACTCAAAAAAAAAAAAACTCAAAAAAAAJQIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEIAAAAAAAAkQgAAAAAAAAAAAAAAADwvw"
				],
				[
					329,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"to_string\",\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"to_string() (as ToString)\",\"labelDetails\":{\"description\":\"fn(&self) -> String\"},\"textEdit\":{\"replace\":{\"start\":{\"line\":76,\"character\":65},\"end\":{\"line\":76,\"character\":67}},\"newText\":\"to_string()$0\",\"insert\":{\"start\":{\"line\":76,\"character\":65},\"end\":{\"line\":76,\"character\":67}}},\"kind\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Converts the given value to a `String`.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet i = 5;\\nlet five = String::from(\\\"5\\\");\\n\\nassert_eq!(five, i.to_string());\\n```\"},\"deprecated\":false,\"insertTextFormat\":2,\"detail\":\"fn(&self) -> String\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							375,
							323,
							3
						],
						"trigger": "to_string() (as ToString)"
					},
					"AgAAAJIIAAAAAAAAkggAAAAAAAACAAAAdG+SCAAAAAAAAJ0IAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQIAAAAAAAAlAgAAAAAAAAAAAAAAADwvw"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAL8IAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMUIAAAAAAAAAAAAAMUIAAAAAAAAxggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8IAAAAAAAAvwgAAAAAAAAAAAAAAKCAQA"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYIAAAAAAAAxwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYIAAAAAAAAxggAAAAAAAAAAAAAAADwvw"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "ins"
					},
					"AwAAAMcIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADJCAAAAAAAAAAAAADJCAAAAAAAAMoIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcIAAAAAAAAxwgAAAAAAAAAAAAAAADwvw"
				],
				[
					339,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"preselect\":true,\"sortText\":\"ffffffee\",\"label\":\"inputs\",\"labelDetails\":{\"description\":\"String\"},\"textEdit\":{\"replace\":{\"start\":{\"line\":79,\"character\":7},\"end\":{\"line\":79,\"character\":10}},\"newText\":\"inputs\",\"insert\":{\"start\":{\"line\":79,\"character\":7},\"end\":{\"line\":79,\"character\":10}}},\"kind\":6,\"filterText\":\"inputs\",\"deprecated\":false,\"additionalTextEdits\":[],\"detail\":\"String\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							380,
							334,
							3
						],
						"trigger": "inputs"
					},
					"AgAAAMcIAAAAAAAAxwgAAAAAAAADAAAAaW5zxwgAAAAAAADNCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoIAAAAAAAAyggAAAAAAAAAAAAAAADwvw"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": ".is"
					},
					"AwAAAM0IAAAAAAAAzggAAAAAAAAAAAAAzggAAAAAAADPCAAAAAAAAAAAAADPCAAAAAAAANAIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0IAAAAAAAAzQgAAAAAAAAAAAAAAADwvw"
				],
				[
					341,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"deprecated\":false,\"label\":\"is_empty()\",\"labelDetails\":{\"description\":\"fn(&self) -> bool\"},\"detail\":\"fn(&self) -> bool\",\"kind\":2,\"filterText\":\"is_empty\",\"textEdit\":{\"replace\":{\"start\":{\"line\":79,\"character\":14},\"end\":{\"line\":79,\"character\":16}},\"newText\":\"is_empty()$0\",\"insert\":{\"start\":{\"line\":79,\"character\":14},\"end\":{\"line\":79,\"character\":16}}},\"preselect\":true,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns `true` if this `String` has a length of zero, and `false` otherwise.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet mut v = String::new();\\nassert!(v.is_empty());\\n\\nv.push('a');\\nassert!(!v.is_empty());\\n```\"},\"sortText\":\"ffffffec\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							382,
							340,
							3
						],
						"trigger": "is_empty()"
					},
					"AgAAAM4IAAAAAAAAzggAAAAAAAACAAAAaXPOCAAAAAAAANgIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAIAAAAAAAA0AgAAAAAAAAAAAAAAADwvw"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgIAAAAAAAA2QgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAADwvw"
				],
				[
					343,
					1,
					"left_delete",
					null,
					"AQAAANgIAAAAAAAA2AgAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkIAAAAAAAA2QgAAAAAAAAAAAAAAADwvw"
				],
				[
					344,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANgIAAAAAAAA2ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAANkIAAAAAAAA2ggAAAAAAAAAAAAA2ggAAAAAAADbCAAAAAAAAAAAAADbCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA3QgAAAAAAAAAAAAA3QgAAAAAAADeCAAAAAAAAAAAAADeCAAAAAAAAN8IAAAAAAAAAAAAAN8IAAAAAAAA4AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkIAAAAAAAA2QgAAAAAAAAAAAAAAADwvw"
				],
				[
					347,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									79,
									24
								],
								[
									79,
									25
								],
								" {\n       ",
								null
							],
							[
								[
									79,
									32
								],
								[
									79,
									32
								],
								";\n    ",
								null
							]
						]
					},
					"AgAAAOAIAAAAAAAA5ggAAAAAAAAAAAAA2AgAAAAAAADiCAAAAAAAAAEAAAB7",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAIAAAAAAAA4AgAAAAAAAAAAAAAAADwvw"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPAIAAAAAAAA8QgAAAAAAAAAAAAA8QgAAAAAAAD1CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAIAAAAAAAA8AgAAAAAAAD////////vfw"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "printl"
					},
					"BgAAAPUIAAAAAAAA9ggAAAAAAAAAAAAA9ggAAAAAAAD3CAAAAAAAAAAAAAD3CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA+QgAAAAAAAAAAAAA+QgAAAAAAAD6CAAAAAAAAAAAAAD6CAAAAAAAAPsIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUIAAAAAAAA9QgAAAAAAAAAAAAAAADwvw"
				],
				[
					351,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"println!\",\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"println!(…)\",\"labelDetails\":{\"description\":\"macro_rules! println\"},\"textEdit\":{\"replace\":{\"start\":{\"line\":82,\"character\":4},\"end\":{\"line\":82,\"character\":10}},\"newText\":\"println!($0)\",\"insert\":{\"start\":{\"line\":82,\"character\":4},\"end\":{\"line\":82,\"character\":10}}},\"kind\":3,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prints to the standard output, with a newline.\\n\\nOn all platforms, the newline is the LINE FEED character (`\\\\n`/`U+000A`) alone\\n(no additional CARRIAGE RETURN (`\\\\r`/`U+000D`)).\\n\\nThis macro uses the same syntax as [`format!`], but writes to the standard output instead.\\nSee [`std::fmt`] for more information.\\n\\nThe `println!` macro will lock the standard output on each call. If you call\\n`println!` within a hot loop, this behavior may be the bottleneck of the loop.\\nTo avoid this, lock stdout with [`io::stdout().lock()`][lock]:\\n```rust\\nuse std::io::{stdout, Write};\\n\\nlet mut lock = stdout().lock();\\nwriteln!(lock, \\\"hello world\\\").unwrap();\\n```\\n\\nUse `println!` only for the primary output of your program. Use\\n[`eprintln!`] instead to print error and progress messages.\\n\\n[`std::fmt`]: crate::fmt\\n[`eprintln!`]: crate::eprintln\\n[lock]: crate::io::Stdout\\n\\n# Panics\\n\\nPanics if writing to [`io::stdout`] fails.\\n\\nWriting to non-blocking stdout can cause an error, which will lead\\nthis macro to panic.\\n\\n[`io::stdout`]: crate::io::stdout\\n\\n# Examples\\n\\n```rust\\nprintln!(); // prints just a newline\\nprintln!(\\\"hello there!\\\");\\nprintln!(\\\"format {} arguments\\\", \\\"some\\\");\\nlet local_variable = \\\"some\\\";\\nprintln!(\\\"format {local_variable} arguments\\\");\\n```\"},\"deprecated\":false,\"insertTextFormat\":2,\"detail\":\"macro_rules! println\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							391,
							350,
							6
						],
						"trigger": "println!(…)"
					},
					"AgAAAPUIAAAAAAAA9QgAAAAAAAAGAAAAcHJpbnRs9QgAAAAAAAD/CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsIAAAAAAAA+wgAAAAAAAAAAAAAAADwvw"
				],
				[
					352,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAP4IAAAAAAAAAAkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4IAAAAAAAA/ggAAAAAAAAAAAAAAADwvw"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "inserting"
					},
					"CQAAAP8IAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAwkAAAAAAAAAAAAAAwkAAAAAAAAECQAAAAAAAAAAAAAECQAAAAAAAAUJAAAAAAAAAAAAAAUJAAAAAAAABgkAAAAAAAAAAAAABgkAAAAAAAAHCQAAAAAAAAAAAAAHCQAAAAAAAAgJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8IAAAAAAAA/wgAAAAAAAAAAAAAAADwvw"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": " dynami"
					},
					"BwAAAAgJAAAAAAAACQkAAAAAAAAAAAAACQkAAAAAAAAKCQAAAAAAAAAAAAAKCQAAAAAAAAsJAAAAAAAAAAAAAAsJAAAAAAAADAkAAAAAAAAAAAAADAkAAAAAAAANCQAAAAAAAAAAAAANCQAAAAAAAA4JAAAAAAAAAAAAAA4JAAAAAAAADwkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgJAAAAAAAACAkAAAAAAAAAAAAAAADwvw"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "cs:"
					},
					"AwAAAA8JAAAAAAAAEAkAAAAAAAAAAAAAEAkAAAAAAAARCQAAAAAAAAAAAAARCQAAAAAAABIJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAADwvw"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": " {}"
					},
					"AwAAABIJAAAAAAAAEwkAAAAAAAAAAAAAEwkAAAAAAAAUCQAAAAAAAAAAAAAUCQAAAAAAABUJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIJAAAAAAAAEgkAAAAAAAAAAAAAAADwvw"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "inputs"
					},
					"BgAAABQJAAAAAAAAFQkAAAAAAAAAAAAAFQkAAAAAAAAWCQAAAAAAAAAAAAAWCQAAAAAAABcJAAAAAAAAAAAAABcJAAAAAAAAGAkAAAAAAAAAAAAAGAkAAAAAAAAZCQAAAAAAAAAAAAAZCQAAAAAAABoJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQJAAAAAAAAFAkAAAAAAAAAAAAAAADwvw"
				],
				[
					368,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									71,
									8
								],
								[
									71,
									14
								],
								"dyn_str",
								361
							],
							[
								[
									79,
									7
								],
								[
									79,
									13
								],
								"dyn_str",
								361
							]
						]
					},
					"AgAAAMcIAAAAAAAAzggAAAAAAAAGAAAAaW5wdXRz4QcAAAAAAADoBwAAAAAAAAYAAABpbnB1dHM",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcHAAAAAAAA5wcAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					1,
					"cut",
					null,
					"AQAAAKsHAAAAAAAAqwcAAAAAAAAPAAAAdmVjIVsiZHluYW1pYyJd",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsHAAAAAAAAugcAAAAAAAAAAAAAAADwvw"
				],
				[
					383,
					1,
					"paste",
					null,
					"AgAAACMIAAAAAAAAMggAAAAAAAAAAAAAMggAAAAAAAAyCAAAAAAAAAgAAABjYXB0aW9ucw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMIAAAAAAAAKwgAAAAAAAAAAAAAAADwvw"
				],
				[
					387,
					2,
					"left_delete",
					null,
					"AgAAAJgHAAAAAAAAmAcAAAAAAAAUAAAAICAgIGxldCBjYXB0aW9ucyA9IDuXBwAAAAAAAJcHAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwHAAAAAAAAmAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					403,
					1,
					"paste",
					null,
					"AgAAAPkIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACQAAAAAAAAYAAABpbnB1dHM",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkIAAAAAAAA/wgAAAAAAAAAAAAAAADwvw"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAAMJAAAAAAAABAkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMJAAAAAAAAAwkAAAAAAAAAAAAAAADwvw"
				],
				[
					412,
					1,
					"left_delete",
					null,
					"AQAAAAMJAAAAAAAAAwkAAAAAAAABAAAAYA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQJAAAAAAAABAkAAAAAAAAAAAAAAADwvw"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAAMJAAAAAAAABAkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMJAAAAAAAAAwkAAAAAAAAAAAAAAADwvw"
				],
				[
					414,
					1,
					"left_delete",
					null,
					"AQAAAAMJAAAAAAAAAwkAAAAAAAABAAAAPA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQJAAAAAAAABAkAAAAAAAAAAAAAAADwvw"
				],
				[
					415,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAMJAAAAAAAABQkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMJAAAAAAAAAwkAAAAAAAAAAAAAAADwvw"
				],
				[
					416,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAMJAAAAAAAAAwkAAAAAAAABAAAAIgMJAAAAAAAAAwkAAAAAAAABAAAAIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQJAAAAAAAABAkAAAAAAAAAAAAAAADwvw"
				],
				[
					418,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAMJAAAAAAAABQkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMJAAAAAAAAAwkAAAAAAAAAAAAAAADwvw"
				],
				[
					419,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAMJAAAAAAAAAwkAAAAAAAABAAAAKAMJAAAAAAAAAwkAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQJAAAAAAAABAkAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAANoIAAAAAAAA2ggAAAAAAAApAAAAcHJpbnRsbiEoImluc2VydGluZyBkeW5hbWljczoge2R5bl9zdHJ9Iik",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADCQAAAAAAANoIAAAAAAAAAAAAAAAAPEA"
				],
				[
					10,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									81,
									0
								],
								[
									82,
									0
								],
								"",
								null
							]
						]
					},
					"AQAAANYIAAAAAAAA1ggAAAAAAAAFAAAAICAgIAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaCAAAAAAAANoIAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANUIAAAAAAAA1ggAAAAAAAAAAAAA1ggAAAAAAADaCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVCAAAAAAAANUIAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "apply_"
					},
					"BgAAANoIAAAAAAAA2wgAAAAAAAAAAAAA2wgAAAAAAADcCAAAAAAAAAAAAADcCAAAAAAAAN0IAAAAAAAAAAAAAN0IAAAAAAAA3ggAAAAAAAAAAAAA3ggAAAAAAADfCAAAAAAAAAAAAADfCAAAAAAAAOAIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaCAAAAAAAANoIAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAANoIAAAAAAAA2ggAAAAAAAAGAAAAYXBwbHlf",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgCAAAAAAAANoIAAAAAAAAAAAAAAAAPEA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "add_notat"
					},
					"CQAAANoIAAAAAAAA2wgAAAAAAAAAAAAA2wgAAAAAAADcCAAAAAAAAAAAAADcCAAAAAAAAN0IAAAAAAAAAAAAAN0IAAAAAAAA3ggAAAAAAAAAAAAA3ggAAAAAAADfCAAAAAAAAAAAAADfCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA4QgAAAAAAAAAAAAA4QgAAAAAAADiCAAAAAAAAAAAAADiCAAAAAAAAOMIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaCAAAAAAAANoIAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAAOMIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADlCAAAAAAAAAAAAADlCAAAAAAAAOYIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjCAAAAAAAAOMIAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "_to_th"
					},
					"BgAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA5wgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOkIAAAAAAAAAAAAAOkIAAAAAAAA6ggAAAAAAAAAAAAA6ggAAAAAAADrCAAAAAAAAAAAAADrCAAAAAAAAOwIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmCAAAAAAAAOYIAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAOwIAAAAAAAA7QgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsCAAAAAAAAOwIAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					3,
					"left_delete",
					null,
					"AwAAAOwIAAAAAAAA7AgAAAAAAAABAAAAZesIAAAAAAAA6wgAAAAAAAABAAAAaOoIAAAAAAAA6ggAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtCAAAAAAAAO0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAADsCAAAAAAAAO0IAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqCAAAAAAAAOoIAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					2,
					"left_delete",
					null,
					"AgAAANYIAAAAAAAA1ggAAAAAAAAXAAAAICAgIGFkZF9ub3RhdGlvbl90b190aGXVCAAAAAAAANUIAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtCAAAAAAAANYIAAAAAAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"correct_spelling",
					{
						"begin": 2143,
						"correction": "should",
						"end": 2149,
						"event":
						{
							"modifier_keys":
							{
							}
						}
					},
					"AQAAAF8IAAAAAAAAZQgAAAAAAAAGAAAAc29odWxk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkCAAAAAAAAGQIAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "use crate::{\n    lilypond_render::RendersToLilypond,\n    primitives::{EventInfo, Measure, TimeMap},\n};\nuse itertools::Itertools;\nuse rea_rs::{\n    errors::ReaperError, Immutable, MidiEvent, Position, RawMidiMessage,\n    Reaper, Track,\n};\nuse std::{collections::HashMap, error::Error, sync::Arc};\n\nuse self::midi_parse::{parse_events, ParsedEvent};\n\npub mod midi_parse;\n\n#[derive(Debug)]\npub struct Voice {\n    pub time_map: Arc<TimeMap>,\n    pub index: u8,\n    pub measures: HashMap<u32, Measure>,\n}\nimpl Voice {\n    pub fn insert_event(&mut self, event: EventInfo) -> Result<(), String> {\n        let index = event.position.get_measure_index();\n        let head = self\n            .measures\n            .get_mut(&index)\n            .ok_or(format!(\"Can not find measure {}\", index))?\n            .insert(event)?;\n        match head {\n            None => Ok(()),\n            Some(head) => self.insert_event(head),\n        }\n    }\n}\nimpl From<Arc<TimeMap>> for Voice {\n    fn from(time_map: Arc<TimeMap>) -> Self {\n        let mut measures = HashMap::new();\n        for (idx, measure) in time_map.get().iter() {\n            measures.insert(*idx, Measure::from(measure));\n        }\n        Self {\n            time_map,\n            measures,\n            index: 0,\n        }\n    }\n}\nimpl RendersToLilypond for Voice {\n    fn render_lilypond(&self) -> String {\n        self.measures\n            .iter()\n            .sorted_by(|(idx1, _), (idx2, _)| Ord::cmp(idx1, idx2))\n            .map(|(idx, measure)| {\n                let ts = match idx {\n                    1 => measure.get_time_signature().render_lilypond(),\n                    x => match self.measures.get(&(x - 1)) {\n                        None => measure.get_time_signature().render_lilypond(),\n                        Some(m) => match m.get_time_signature()\n                            == measure.get_time_signature()\n                        {\n                            true => \"\".to_string(),\n                            false => {\n                                measure.get_time_signature().render_lilypond()\n                            }\n                        },\n                    },\n                };\n                let events = measure\n                    .get_events_normalized()\n                    .expect(\"Can not get normalized events\")\n                    .iter()\n                    .map(|ev| ev.render_lilypond())\n                    .join(\" \");\n                format! {\n                    \"% bar{idx}\\n{ts} {events} |\",\n                }\n            })\n            .join(\" \")\n    }\n}\n\n#[derive(Debug)]\npub struct Staff {\n    pub time_map: Arc<TimeMap>,\n    pub index: u8,\n    pub voices: Vec<Voice>,\n}\nimpl Staff {\n    pub fn new(time_map: Arc<TimeMap>, index: u8, voices: Vec<Voice>) -> Self {\n        Self {\n            time_map,\n            index,\n            voices,\n        }\n    }\n}\nimpl RendersToLilypond for Staff {\n    fn render_lilypond(&self) -> String {\n        if self.voices.len() == 1 {\n            self.voices[0].render_lilypond()\n        } else {\n            todo!()\n        }\n    }\n}\n\n#[derive(Debug)]\npub struct Part {\n    pub time_map: Arc<TimeMap>,\n    pub staves: Vec<Staff>,\n}\nimpl Part {\n    pub fn new(time_map: Arc<TimeMap>, staves: Vec<Staff>) -> Self {\n        Self { time_map, staves }\n    }\n}\nimpl RendersToLilypond for Part {\n    fn render_lilypond(&self) -> String {\n        if self.staves.len() == 1 {\n            return self.staves[0].render_lilypond();\n        }\n        format!(\n            \"<< {} >>\",\n            self.staves\n                .iter()\n                .map(|staff| staff.render_lilypond())\n                .join(\" \")\n        )\n    }\n}\n\npub fn parse_track_in_bounds(\n    track: Track<Immutable>,\n    start_pos: impl Into<Position>,\n    end_pos: impl Into<Position>,\n) -> Result<Part, Box<dyn Error>> {\n    let (start_pos, end_pos) = (start_pos.into(), end_pos.into());\n    let events = get_track_midi_in_bounds(track, start_pos, end_pos)?\n        .into_iter()\n        .map(|ev| ev.apply_single_notations());\n    // println!(\"events: {:?}\", events.clone().collect_vec());\n    let time_map = Arc::new(TimeMap::build_from_bounds(start_pos, end_pos));\n    let voices = voices_from_events(events, time_map.clone())?;\n    // println!(\"voices: {:?}\", voices);\n    let staves = staves_from_voices(voices, time_map.clone());\n    // println!(\"staves: {:?}\", staves);\n    Ok(Part::new(time_map.clone(), staves))\n}\nfn staves_from_voices(\n    voices: Vec<Voice>,\n    time_map: Arc<TimeMap>,\n) -> Vec<Staff> {\n    let st: HashMap<u8, Staff> =\n        voices.into_iter().fold(HashMap::new(), |mut map, voice| {\n            let st_idx = match voice.index {\n                1..=4 => 1,\n                5..=8 => 2,\n                9..=12 => 3,\n                13..=16 => 4,\n                _ => panic!(\"Can not place voice with index {}\", voice.index),\n            };\n            match map.get_mut(&st_idx) {\n                None => {\n                    map.insert(\n                        st_idx,\n                        Staff::new(time_map.clone(), st_idx, vec![voice]),\n                    );\n                }\n                Some(staff) => staff.voices.push(voice),\n            };\n            map\n        });\n    st.into_iter()\n        .sorted_by(|(a, _), (b, _)| Ord::cmp(&b, &a))\n        .map(|(_, v)| v)\n        .collect()\n}\n\nfn voices_from_events(\n    events: impl Iterator<Item = ParsedEvent>,\n    time_map: Arc<TimeMap>,\n) -> Result<Vec<Voice>, String> {\n    let voices: Result<HashMap<u8, Voice>, String> =\n        events.fold(Ok(HashMap::new()), |voices, ev| {\n            let idx = ev.channel;\n            let mut voices = voices?;\n            match voices.get_mut(&idx) {\n                None => {\n                    let mut v = Voice::from(time_map.clone());\n                    v.index = idx;\n                    voices.insert(idx, v);\n                    voices.get_mut(&idx).unwrap().insert_event(ev.event)?\n                }\n                Some(vc) => vc.insert_event(ev.event)?,\n            }\n            Ok(voices)\n        });\n    let voices = match voices {\n        Ok(v) => v,\n        Err(err) => return Err(err),\n    };\n    Ok(voices\n        .into_iter()\n        .sorted_by(|(a, _), (b, _)| Ord::cmp(&b, &a))\n        .map(|(_, v)| v)\n        .collect())\n}\nfn get_track_midi_in_bounds(\n    track: Track<Immutable>,\n    start_pos: impl Into<Position>,\n    end_pos: impl Into<Position>,\n) -> Result<Vec<ParsedEvent>, ReaperError> {\n    let start_pos = start_pos.into();\n    let end_pos = end_pos.into();\n    let n_items = track.n_items();\n    let mut events = Vec::new();\n    for idx in 0..n_items {\n        let item = track.get_item(idx).expect(\"Should be item here\");\n        if !(item.position() <= end_pos && item.end_position() >= start_pos) {\n            continue;\n        }\n        let take = item.active_take();\n        let evts = take.iter_midi(None)?.filter(|ev| {\n            let pos = Position::from_ppq(ev.ppq_position(), &take);\n            pos >= start_pos && pos <= end_pos\n        });\n\n        events.extend(parse_events(evts, &take)?);\n    }\n    Ok(events)\n}\npub fn get_edited_midi() -> impl Iterator<Item = MidiEvent<RawMidiMessage>> {\n    let rpr = Reaper::get();\n    let pr = rpr.current_project();\n    let editor = rpr.active_midi_editor();\n    let item = match editor{\n        Some(editor) => editor.item_mut(&pr),\n        None => pr.get_selected_item(0)\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use fraction::Fraction;\n    use musical_note::Accidental;\n    use once_cell::sync::OnceCell;\n    use rea_rs::TimeSignature;\n    use std::sync::Arc;\n\n    use crate::primitives::{\n        AbsolutePosition, EventInfo, EventType, Length, Measure, MeasureInfo,\n        Note, Pitch, RelativePosition, TimeMap, TimeMapMeasures,\n    };\n    static TIME_MAP: OnceCell<Arc<TimeMap>> = OnceCell::new();\n\n    use super::Voice;\n    fn get_time_map() -> Arc<TimeMap> {\n        match TIME_MAP.get() {\n            None => {\n                let tm = Arc::new(TimeMap::new(\n                    TimeMapMeasures::from([\n                        (1, MeasureInfo::new(1, TimeSignature::new(4, 4))),\n                        (2, MeasureInfo::new(2, TimeSignature::new(4, 4))),\n                        (3, MeasureInfo::new(3, TimeSignature::new(4, 4))),\n                        (4, MeasureInfo::new(4, TimeSignature::new(7, 8))),\n                        (5, MeasureInfo::new(5, TimeSignature::new(9, 8))),\n                    ]),\n                    AbsolutePosition::from(0.0),\n                ));\n                TIME_MAP.set(tm.clone()).unwrap();\n                tm\n            }\n            Some(time_map) => time_map.clone(),\n        }\n    }\n\n    #[test]\n    fn test_voice() -> Result<(), String> {\n        env_logger::init();\n        let mut voice_1 = Voice::from(get_time_map());\n        // println!(\"voice:contents before: {:#?}\", voice_1);\n\n        assert_eq!(\n            voice_1.measures.get(&2).unwrap(),\n            &Measure::new(2, TimeSignature::new(4, 4))\n        );\n        assert_eq!(\n            voice_1.measures.get(&4).unwrap(),\n            &Measure::new(4, TimeSignature::new(7, 8))\n        );\n        let c = EventInfo::new(\n            RelativePosition::new(3, Fraction::new(6_u64, 8_u64)),\n            Length::from(Fraction::new(5_u64, 8_u64)),\n            EventType::Note(Note::new(Pitch::from_midi(60, None, None))),\n        );\n        let es = EventInfo::new(\n            RelativePosition::new(3, Fraction::new(6_u64, 8_u64)),\n            Length::from(Fraction::new(5_u64, 8_u64)),\n            EventType::Note(Note::new(Pitch::from_midi(\n                63,\n                Accidental::Flat.into(),\n                None,\n            ))),\n        );\n        let g = EventInfo::new(\n            RelativePosition::new(4, Fraction::new(0_u64, 8_u64)),\n            Length::from(Fraction::new(3_u64, 8_u64)),\n            EventType::Note(Note::new(Pitch::from_midi(67, None, None))),\n        );\n        voice_1.insert_event(c)?;\n        voice_1.insert_event(g)?;\n        voice_1.insert_event(es)?;\n\n        Ok(())\n    }\n}\n",
			"file": "rea-score/src/dom/mod.rs",
			"file_size": 10010,
			"file_write_time": 133175332552125644,
			"settings":
			{
				"buffer_size": 10072,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ4bAAAAAAAAnxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeGwAAAAAAAJ4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAJ8bAAAAAAAAoBsAAAAAAAAAAAAAoBsAAAAAAAChGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfGwAAAAAAAJ8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKEbAAAAAAAAohsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChGwAAAAAAAKEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAJ8bAAAAAAAAoBsAAAAAAAAAAAAAoBsAAAAAAAChGwAAAAAAAAAAAAChGwAAAAAAAKIbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfGwAAAAAAAJ8bAAAAAAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIbAAAAAAAAoxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiGwAAAAAAAKIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "get_edited"
					},
					"CgAAAKYbAAAAAAAApxsAAAAAAAAAAAAApxsAAAAAAACoGwAAAAAAAAAAAACoGwAAAAAAAKkbAAAAAAAAAAAAAKkbAAAAAAAAqhsAAAAAAAAAAAAAqhsAAAAAAACrGwAAAAAAAAAAAACrGwAAAAAAAKwbAAAAAAAAAAAAAKwbAAAAAAAArRsAAAAAAAAAAAAArRsAAAAAAACuGwAAAAAAAAAAAACuGwAAAAAAAK8bAAAAAAAAAAAAAK8bAAAAAAAAsBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmGwAAAAAAAKYbAAAAAAAA////////738"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "_midi"
					},
					"BQAAALAbAAAAAAAAsRsAAAAAAAAAAAAAsRsAAAAAAACyGwAAAAAAAAAAAACyGwAAAAAAALMbAAAAAAAAAAAAALMbAAAAAAAAtBsAAAAAAAAAAAAAtBsAAAAAAAC1GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwGwAAAAAAALAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALUbAAAAAAAAtxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1GwAAAAAAALUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALcbAAAAAAAAuRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3GwAAAAAAALcbAAAAAAAA////////738"
				],
				[
					19,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAALgbAAAAAAAAuRsAAAAAAAAAAAAAuRsAAAAAAAC6GwAAAAAAAAAAAAC5GwAAAAAAAL0bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4GwAAAAAAALgbAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"BAAAALcbAAAAAAAAuBsAAAAAAAAAAAAAuhsAAAAAAAC6GwAAAAAAAAQAAAAgICAguBsAAAAAAAC5GwAAAAAAAAAAAAC5GwAAAAAAALobAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3GwAAAAAAALcbAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALobAAAAAAAAuxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6GwAAAAAAALobAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "Itera"
					},
					"BQAAALsbAAAAAAAAvBsAAAAAAAAAAAAAvBsAAAAAAAC9GwAAAAAAAAAAAAC9GwAAAAAAAL4bAAAAAAAAAAAAAL4bAAAAAAAAvxsAAAAAAAAAAAAAvxsAAAAAAADAGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7GwAAAAAAALsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Iterator\",\"sortText\":\"ffffffef\",\"label\":\"Iterator\",\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":229,\"character\":28},\"end\":{\"line\":229,\"character\":33}},\"newText\":\"Iterator\",\"insert\":{\"start\":{\"line\":229,\"character\":28},\"end\":{\"line\":229,\"character\":33}}},\"kind\":8,\"documentation\":{\"kind\":\"markdown\",\"value\":\"A trait for dealing with iterators.\\n\\nThis is the main iterator trait. For more about the concept of iterators\\ngenerally, please see the [module-level documentation]. In particular, you\\nmay want to know how to [implement `Iterator`][impl].\\n\\n[module-level documentation]: crate::iter\\n[impl]: crate::iter#implementing-iterator\"},\"deprecated\":false,\"additionalTextEdits\":[]}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							21,
							25,
							5
						],
						"trigger": "Iterator"
					},
					"AgAAALsbAAAAAAAAuxsAAAAAAAAFAAAASXRlcmG7GwAAAAAAAMMbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAGwAAAAAAAMAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "<>"
					},
					"AgAAAMMbAAAAAAAAxBsAAAAAAAAAAAAAxBsAAAAAAADFGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDGwAAAAAAAMMbAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "Item="
					},
					"BQAAAMQbAAAAAAAAxRsAAAAAAAAAAAAAxRsAAAAAAADGGwAAAAAAAAAAAADGGwAAAAAAAMcbAAAAAAAAAAAAAMcbAAAAAAAAyBsAAAAAAAAAAAAAyBsAAAAAAADJGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEGwAAAAAAAMQbAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "MidiE"
					},
					"BQAAAMkbAAAAAAAAyhsAAAAAAAAAAAAAyhsAAAAAAADLGwAAAAAAAAAAAADLGwAAAAAAAMwbAAAAAAAAAAAAAMwbAAAAAAAAzRsAAAAAAAAAAAAAzRsAAAAAAADOGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJGwAAAAAAAMkbAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"MidiEvent\",\"label\":\"MidiEvent<…> (use rea_rs::MidiEvent)\",\"labelDetails\":{},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"data\":{\"imports\":[{\"full_import_path\":\"rea_rs::MidiEvent\",\"imported_name\":\"MidiEvent\"}],\"position\":{\"textDocument\":{\"uri\":\"file:///home/levitanus/gits/rea-score/rea-score/src/dom/mod.rs\"},\"position\":{\"line\":229,\"character\":47}}},\"deprecated\":false,\"textEdit\":{\"replace\":{\"start\":{\"line\":229,\"character\":42},\"end\":{\"line\":229,\"character\":47}},\"newText\":\"MidiEvent<$0>\",\"insert\":{\"start\":{\"line\":229,\"character\":42},\"end\":{\"line\":229,\"character\":47}}},\"kind\":22,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Generic Midi event, that easily converted to the binary format.\"},\"sortText\":\"fffffff0\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							26,
							30,
							5
						],
						"trigger": "MidiEvent<…> (use rea_rs::MidiEvent)"
					},
					"AgAAAMkbAAAAAAAAyRsAAAAAAAAFAAAATWlkaUXJGwAAAAAAANQbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOGwAAAAAAAM4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									5,
									60
								],
								[
									5,
									60
								],
								",",
								null
							],
							[
								[
									5,
									60
								],
								[
									5,
									60
								],
								" ",
								null
							],
							[
								[
									5,
									60
								],
								[
									5,
									60
								],
								"MidiEvent",
								null
							]
						]
					},
					"AwAAAL0AAAAAAAAAxgAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTGwAAAAAAANMbAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "Ra"
					},
					"AgAAAN4bAAAAAAAA3xsAAAAAAAAAAAAA3xsAAAAAAADgGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeGwAAAAAAAN4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "wMi"
					},
					"AwAAAOAbAAAAAAAA4RsAAAAAAAAAAAAA4RsAAAAAAADiGwAAAAAAAAAAAADiGwAAAAAAAOMbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgGwAAAAAAAOAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "di"
					},
					"AgAAAOMbAAAAAAAA5BsAAAAAAAAAAAAA5BsAAAAAAADlGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjGwAAAAAAAOMbAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"data\":{\"imports\":[{\"full_import_path\":\"rea_rs::RawMidiMessage\",\"imported_name\":\"RawMidiMessage\"}],\"position\":{\"textDocument\":{\"uri\":\"file:///home/levitanus/gits/rea-score/rea-score/src/dom/mod.rs\"},\"position\":{\"line\":229,\"character\":59}}},\"deprecated\":false,\"label\":\"RawMidiMessage (use rea_rs::RawMidiMessage)\",\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":229,\"character\":52},\"end\":{\"line\":229,\"character\":59}},\"newText\":\"RawMidiMessage\",\"insert\":{\"start\":{\"line\":229,\"character\":52},\"end\":{\"line\":229,\"character\":59}}},\"kind\":22,\"filterText\":\"RawMidiMessage\",\"sortText\":\"fffffff0\",\"additionalTextEdits\":[]}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							31,
							36,
							2
						],
						"trigger": "RawMidiMessage (use rea_rs::RawMidiMessage)"
					},
					"AgAAAN4bAAAAAAAA3hsAAAAAAAAHAAAAUmF3TWlkad4bAAAAAAAA7BsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlGwAAAAAAAOUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									5,
									71
								],
								[
									5,
									71
								],
								",",
								null
							],
							[
								[
									5,
									71
								],
								[
									5,
									71
								],
								" ",
								null
							],
							[
								[
									5,
									71
								],
								[
									5,
									71
								],
								"RawMidiMessage",
								null
							]
						]
					},
					"AwAAAMgAAAAAAAAA1gAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsGwAAAAAAAOwbAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "too"
					},
					"AwAAAAAcAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAMcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAHAAAAAAAAAAcAAAAAAAAAAAAAADgfEA"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAAAIcAAAAAAAAAhwAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADHAAAAAAAAAMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "do1"
					},
					"AwAAAAIcAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAAEHAAAAAAAAAAAAAAEHAAAAAAAAAUcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACHAAAAAAAAAIcAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUcAAAAAAAABxwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFHAAAAAAAAAUcAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									5,
									13
								],
								[
									5,
									13
								],
								"\n    ",
								null
							],
							[
								[
									5,
									44
								],
								[
									5,
									61
								],
								"",
								null
							],
							[
								[
									5,
									72
								],
								[
									5,
									72
								],
								" Position,",
								null
							],
							[
								[
									5,
									87
								],
								[
									5,
									87
								],
								", Track,\n",
								null
							],
							[
								[
									229,
									41
								],
								[
									229,
									42
								],
								" = ",
								null
							],
							[
								[
									229,
									68
								],
								[
									229,
									68
								],
								" ",
								null
							],
							[
								[
									230,
									0
								],
								[
									230,
									0
								],
								"    ",
								null
							]
						]
					},
					"BwAAAAAcAAAAAAAABBwAAAAAAAAAAAAA/hsAAAAAAAD/GwAAAAAAAAAAAADjGwAAAAAAAOYbAAAAAAAAAQAAAD3YAAAAAAAAAOEAAAAAAAAAAAAAAMkAAAAAAAAA0wAAAAAAAAAAAAAArQAAAAAAAACtAAAAAAAAABEAAAAgUG9zaXRpb24sIFRyYWNrLI4AAAAAAAAAkwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGHAAAAAAAAAYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAAN0bAAAAAAAA3hsAAAAAAAAAAAAA3hsAAAAAAADfGwAAAAAAAAAAAADfGwAAAAAAAOAbAAAAAAAAAAAAAOAbAAAAAAAA4RsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdGwAAAAAAAN0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEbAAAAAAAA4hsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhGwAAAAAAAOEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAABMcAAAAAAAAExwAAAAAAAAHAAAAdG9kbzEoKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaHAAAAAAAABMcAAAAAAAAAAAAAAAAPEA"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "todo!"
					},
					"BQAAABMcAAAAAAAAFBwAAAAAAAAAAAAAFBwAAAAAAAAVHAAAAAAAAAAAAAAVHAAAAAAAABYcAAAAAAAAAAAAABYcAAAAAAAAFxwAAAAAAAAAAAAAFxwAAAAAAAAYHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATHAAAAAAAABMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABgcAAAAAAAAGhwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYHAAAAAAAABgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAABMcAAAAAAAAExwAAAAAAAAHAAAAdG9kbyEoKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaHAAAAAAAABMcAAAAAAAAAAAAAAAAPEA"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "rpr"
					},
					"AwAAABMcAAAAAAAAFBwAAAAAAAAAAAAAFBwAAAAAAAAVHAAAAAAAAAAAAAAVHAAAAAAAABYcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATHAAAAAAAABMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAABMcAAAAAAAAFBwAAAAAAAAAAAAAFBwAAAAAAAAVHAAAAAAAAAAAAAAVHAAAAAAAABYcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATHAAAAAAAABMcAAAAAAAAAAAAAAAAPEA"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYcAAAAAAAAFxwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWHAAAAAAAABYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABocAAAAAAAAGxwAAAAAAAAAAAAAGxwAAAAAAAAcHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaHAAAAAAAABocAAAAAAAA////////738"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " Reaper"
					},
					"BwAAABwcAAAAAAAAHRwAAAAAAAAAAAAAHRwAAAAAAAAeHAAAAAAAAAAAAAAeHAAAAAAAAB8cAAAAAAAAAAAAAB8cAAAAAAAAIBwAAAAAAAAAAAAAIBwAAAAAAAAhHAAAAAAAAAAAAAAhHAAAAAAAACIcAAAAAAAAAAAAACIcAAAAAAAAIxwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcHAAAAAAAABwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"data\":{\"imports\":[{\"full_import_path\":\"rea_rs::Reaper\",\"imported_name\":\"Reaper\"}],\"position\":{\"textDocument\":{\"uri\":\"file:///home/levitanus/gits/rea-score/rea-score/src/dom/mod.rs\"},\"position\":{\"line\":232,\"character\":20}}},\"deprecated\":false,\"label\":\"Reaper (use rea_rs::Reaper)\",\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":232,\"character\":14},\"end\":{\"line\":232,\"character\":20}},\"newText\":\"Reaper\",\"insert\":{\"start\":{\"line\":232,\"character\":14},\"end\":{\"line\":232,\"character\":20}}},\"kind\":22,\"filterText\":\"Reaper\",\"sortText\":\"fffffff0\",\"additionalTextEdits\":[]}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							60,
							73,
							7
						],
						"trigger": "Reaper (use rea_rs::Reaper)"
					},
					"AgAAAB0cAAAAAAAAHRwAAAAAAAAGAAAAUmVhcGVyHRwAAAAAAAAjHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjHAAAAAAAACMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									6,
									79
								],
								[
									6,
									79
								],
								" ",
								null
							],
							[
								[
									6,
									79
								],
								[
									6,
									79
								],
								"Reaper",
								null
							],
							[
								[
									6,
									79
								],
								[
									6,
									79
								],
								",",
								null
							]
						]
					},
					"AwAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3gAAAAAAAADkAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjHAAAAAAAACMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "::get"
					},
					"BQAAACscAAAAAAAALBwAAAAAAAAAAAAALBwAAAAAAAAtHAAAAAAAAAAAAAAtHAAAAAAAAC4cAAAAAAAAAAAAAC4cAAAAAAAALxwAAAAAAAAAAAAALxwAAAAAAAAwHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArHAAAAAAAACscAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADAcAAAAAAAAMhwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwHAAAAAAAADAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADIcAAAAAAAAMxwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyHAAAAAAAADIcAAAAAAAA////////738"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADMcAAAAAAAANBwAAAAAAAAAAAAANBwAAAAAAAA4HAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzHAAAAAAAADMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "rpr."
					},
					"BAAAADgcAAAAAAAAORwAAAAAAAAAAAAAORwAAAAAAAA6HAAAAAAAAAAAAAA6HAAAAAAAADscAAAAAAAAAAAAADscAAAAAAAAPBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4HAAAAAAAADgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAADwcAAAAAAAAPRwAAAAAAAAAAAAAPRwAAAAAAAA+HAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					2,
					"left_delete",
					null,
					"AgAAAD0cAAAAAAAAPRwAAAAAAAABAAAAZDwcAAAAAAAAPBwAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+HAAAAAAAAD4cAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAADwcAAAAAAAAPRwAAAAAAAAAAAAAPRwAAAAAAAA+HAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					2,
					"left_delete",
					null,
					"AgAAAD0cAAAAAAAAPRwAAAAAAAABAAAAZDwcAAAAAAAAPBwAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+HAAAAAAAAD4cAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "win"
					},
					"AwAAADwcAAAAAAAAPRwAAAAAAAAAAAAAPRwAAAAAAAA+HAAAAAAAAAAAAAA+HAAAAAAAAD8cAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					3,
					"left_delete",
					null,
					"AwAAAD4cAAAAAAAAPhwAAAAAAAABAAAAbj0cAAAAAAAAPRwAAAAAAAABAAAAaTwcAAAAAAAAPBwAAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/HAAAAAAAAD8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAADwcAAAAAAAAPRwAAAAAAAAAAAAAPRwAAAAAAAA+HAAAAAAAAAAAAAA+HAAAAAAAAD8cAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "_ac"
					},
					"AwAAAD8cAAAAAAAAQBwAAAAAAAAAAAAAQBwAAAAAAABBHAAAAAAAAAAAAABBHAAAAAAAAEIcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/HAAAAAAAAD8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					6,
					"left_delete",
					null,
					"BgAAAEEcAAAAAAAAQRwAAAAAAAABAAAAY0AcAAAAAAAAQBwAAAAAAAABAAAAYT8cAAAAAAAAPxwAAAAAAAABAAAAXz4cAAAAAAAAPhwAAAAAAAABAAAAdD0cAAAAAAAAPRwAAAAAAAABAAAAZTwcAAAAAAAAPBwAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCHAAAAAAAAEIcAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAADgcAAAAAAAAOxwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									6,
									72
								],
								[
									6,
									86
								],
								"\n    Reaper, Track",
								null
							]
						]
					},
					"AQAAANcAAAAAAAAA6QAAAAAAAAAOAAAAIFRyYWNrLCBSZWFwZXI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/HAAAAAAAAD8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAADwcAAAAAAAAPBwAAAAAAAAHAAAALy8gcnByLg",
					"AQAAAAAAAAABAAAAQxwAAAAAAAA8HAAAAAAAAAAAAAAAADxA"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "rpr."
					},
					"BAAAADwcAAAAAAAAPRwAAAAAAAAAAAAAPRwAAAAAAAA+HAAAAAAAAAAAAAA+HAAAAAAAAD8cAAAAAAAAAAAAAD8cAAAAAAAAQBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBwAAAAAAAA8HAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAEAcAAAAAAAAQRwAAAAAAAAAAAAAQRwAAAAAAABCHAAAAAAAAAAAAABCHAAAAAAAAEMcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBwAAAAAAABAHAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAADccAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA8HAAAAAAAAD0cAAAAAAAAAAAAAD0cAAAAAAAAPhwAAAAAAAAAAAAAPhwAAAAAAAA/HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxwAAAAAAAA3HAAAAAAAAP///////+9/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " pr"
					},
					"AwAAAD8cAAAAAAAAQBwAAAAAAAAAAAAAQBwAAAAAAABBHAAAAAAAAAAAAABBHAAAAAAAAEIcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxwAAAAAAAA/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEIcAAAAAAAAQxwAAAAAAAAAAAAAQxwAAAAAAABEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhwAAAAAAABCHAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " rpr.cu"
					},
					"BwAAAEQcAAAAAAAARRwAAAAAAAAAAAAARRwAAAAAAABGHAAAAAAAAAAAAABGHAAAAAAAAEccAAAAAAAAAAAAAEccAAAAAAAASBwAAAAAAAAAAAAASBwAAAAAAABJHAAAAAAAAAAAAABJHAAAAAAAAEocAAAAAAAAAAAAAEocAAAAAAAASxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBwAAAAAAABEHAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "rrent_project"
					},
					"DQAAAEscAAAAAAAATBwAAAAAAAAAAAAATBwAAAAAAABNHAAAAAAAAAAAAABNHAAAAAAAAE4cAAAAAAAAAAAAAE4cAAAAAAAATxwAAAAAAAAAAAAATxwAAAAAAABQHAAAAAAAAAAAAABQHAAAAAAAAFEcAAAAAAAAAAAAAFEcAAAAAAAAUhwAAAAAAAAAAAAAUhwAAAAAAABTHAAAAAAAAAAAAABTHAAAAAAAAFQcAAAAAAAAAAAAAFQcAAAAAAAAVRwAAAAAAAAAAAAAVRwAAAAAAABWHAAAAAAAAAAAAABWHAAAAAAAAFccAAAAAAAAAAAAAFccAAAAAAAAWBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxwAAAAAAABLHAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgcAAAAAAAAWhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBwAAAAAAABYHAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFocAAAAAAAAWxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhwAAAAAAABaHAAAAAAAAP///////+9/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAGQcAAAAAAAAZBwAAAAAAAADAAAAZ2V0",
					"AQAAAAAAAAABAAAAZxwAAAAAAABkHAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "midi"
					},
					"BAAAAGQcAAAAAAAAZRwAAAAAAAAAAAAAZRwAAAAAAABmHAAAAAAAAAAAAABmHAAAAAAAAGccAAAAAAAAAAAAAGccAAAAAAAAaBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBwAAAAAAABkHAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAGQcAAAAAAAAZBwAAAAAAAAEAAAAbWlkaQ",
					"AQAAAAAAAAABAAAAaBwAAAAAAABkHAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "active_midi_e"
					},
					"DQAAAGQcAAAAAAAAZRwAAAAAAAAAAAAAZRwAAAAAAABmHAAAAAAAAAAAAABmHAAAAAAAAGccAAAAAAAAAAAAAGccAAAAAAAAaBwAAAAAAAAAAAAAaBwAAAAAAABpHAAAAAAAAAAAAABpHAAAAAAAAGocAAAAAAAAAAAAAGocAAAAAAAAaxwAAAAAAAAAAAAAaxwAAAAAAABsHAAAAAAAAAAAAABsHAAAAAAAAG0cAAAAAAAAAAAAAG0cAAAAAAAAbhwAAAAAAAAAAAAAbhwAAAAAAABvHAAAAAAAAAAAAABvHAAAAAAAAHAcAAAAAAAAAAAAAHAcAAAAAAAAcRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBwAAAAAAABkHAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "ditor"
					},
					"BQAAAHEcAAAAAAAAchwAAAAAAAAAAAAAchwAAAAAAABzHAAAAAAAAAAAAABzHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAdRwAAAAAAAAAAAAAdRwAAAAAAAB2HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRwAAAAAAABxHAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHYcAAAAAAAAeBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhwAAAAAAAB2HAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "editor"
					},
					"BgAAAGAcAAAAAAAAYRwAAAAAAAAAAAAAYRwAAAAAAABiHAAAAAAAAAAAAABiHAAAAAAAAGMcAAAAAAAAAAAAAGMcAAAAAAAAZBwAAAAAAAAAAAAAZBwAAAAAAABlHAAAAAAAAAAAAABlHAAAAAAAAGYcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBwAAAAAAABgHAAAAAAAAAAAAAAAADxA"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGYcAAAAAAAAZxwAAAAAAAAAAAAAZxwAAAAAAABoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhwAAAAAAABmHAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGgcAAAAAAAAaRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBwAAAAAAABoHAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAGAcAAAAAAAAYRwAAAAAAAAAAAAAYRwAAAAAAABiHAAAAAAAAAAAAABiHAAAAAAAAGMcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBwAAAAAAABgHAAAAAAAAAAAAAAAADxA"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGMcAAAAAAAAZBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxwAAAAAAABjHAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIUcAAAAAAAAhhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRwAAAAAAACFHAAAAAAAAP///////+9/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAIYcAAAAAAAAhxwAAAAAAAAAAAAAhxwAAAAAAACLHAAAAAAAAAAAAACLHAAAAAAAAIwcAAAAAAAAAAAAAIwcAAAAAAAAjRwAAAAAAAAAAAAAjRwAAAAAAACOHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhwAAAAAAACGHAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " item"
					},
					"BQAAAI4cAAAAAAAAjxwAAAAAAAAAAAAAjxwAAAAAAACQHAAAAAAAAAAAAACQHAAAAAAAAJEcAAAAAAAAAAAAAJEcAAAAAAAAkhwAAAAAAAAAAAAAkhwAAAAAAACTHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhwAAAAAAACOHAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJMcAAAAAAAAlBwAAAAAAAAAAAAAlBwAAAAAAACVHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxwAAAAAAACTHAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " edi"
					},
					"BAAAAJUcAAAAAAAAlhwAAAAAAAAAAAAAlhwAAAAAAACXHAAAAAAAAAAAAACXHAAAAAAAAJgcAAAAAAAAAAAAAJgcAAAAAAAAmRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRwAAAAAAACVHAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "tor.ge"
					},
					"BgAAAJkcAAAAAAAAmhwAAAAAAAAAAAAAmhwAAAAAAACbHAAAAAAAAAAAAACbHAAAAAAAAJwcAAAAAAAAAAAAAJwcAAAAAAAAnRwAAAAAAAAAAAAAnRwAAAAAAACeHAAAAAAAAAAAAACeHAAAAAAAAJ8cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRwAAAAAAACZHAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAJ8cAAAAAAAAoBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxwAAAAAAACfHAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					3,
					"left_delete",
					null,
					"AwAAAJ8cAAAAAAAAnxwAAAAAAAABAAAAdJ4cAAAAAAAAnhwAAAAAAAABAAAAZZ0cAAAAAAAAnRwAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAoBwAAAAAAACgHAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "item_m"
					},
					"BgAAAJ0cAAAAAAAAnhwAAAAAAAAAAAAAnhwAAAAAAACfHAAAAAAAAAAAAACfHAAAAAAAAKAcAAAAAAAAAAAAAKAcAAAAAAAAoRwAAAAAAAAAAAAAoRwAAAAAAACiHAAAAAAAAAAAAACiHAAAAAAAAKMcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRwAAAAAAACdHAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "ut"
					},
					"AgAAAKMcAAAAAAAApBwAAAAAAAAAAAAApBwAAAAAAAClHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxwAAAAAAACjHAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUcAAAAAAAApxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRwAAAAAAAClHAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "pr"
					},
					"AgAAAKYcAAAAAAAApxwAAAAAAAAAAAAApxwAAAAAAACoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphwAAAAAAACmHAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKkcAAAAAAAAqhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRwAAAAAAACpHAAAAAAAAP///////+9/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAKocAAAAAAAAqxwAAAAAAAAAAAAAqxwAAAAAAACvHAAAAAAAAAAAAACvHAAAAAAAALAcAAAAAAAAAAAAALAcAAAAAAAAsRwAAAAAAAAAAAAAsRwAAAAAAACyHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhwAAAAAAACqHAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " take"
					},
					"BQAAALIcAAAAAAAAsxwAAAAAAAAAAAAAsxwAAAAAAAC0HAAAAAAAAAAAAAC0HAAAAAAAALUcAAAAAAAAAAAAALUcAAAAAAAAthwAAAAAAAAAAAAAthwAAAAAAAC3HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshwAAAAAAACyHAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALccAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC5HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxwAAAAAAAC3HAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " item"
					},
					"BQAAALkcAAAAAAAAuhwAAAAAAAAAAAAAuhwAAAAAAAC7HAAAAAAAAAAAAAC7HAAAAAAAALwcAAAAAAAAAAAAALwcAAAAAAAAvRwAAAAAAAAAAAAAvRwAAAAAAAC+HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRwAAAAAAAC5HAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": ".t"
					},
					"AgAAAL4cAAAAAAAAvxwAAAAAAAAAAAAAvxwAAAAAAADAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"left_delete",
					null,
					"AQAAAL8cAAAAAAAAvxwAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAAL4cAAAAAAAAvhwAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAvxwAAAAAAAC/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL4cAAAAAAAAvxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAL4cAAAAAAAAvhwAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAvxwAAAAAAAC/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ".ta"
					},
					"AwAAAL4cAAAAAAAAvxwAAAAAAAAAAAAAvxwAAAAAAADAHAAAAAAAAAAAAADAHAAAAAAAAMEcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					2,
					"left_delete",
					null,
					"AgAAAMAcAAAAAAAAwBwAAAAAAAABAAAAYb8cAAAAAAAAvxwAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAwRwAAAAAAADBHAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAL8cAAAAAAAAwBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxwAAAAAAAC/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					2,
					"left_delete",
					null,
					"AgAAAL8cAAAAAAAAvxwAAAAAAAABAAAALr4cAAAAAAAAvhwAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": ".t"
					},
					"AgAAAL4cAAAAAAAAvxwAAAAAAAAAAAAAvxwAAAAAAADAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAMAcAAAAAAAAwRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					3,
					"left_delete",
					null,
					"AwAAAMAcAAAAAAAAwBwAAAAAAAABAAAAYb8cAAAAAAAAvxwAAAAAAAABAAAAdL4cAAAAAAAAvhwAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAwRwAAAAAAADBHAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAK8cAAAAAAAAshwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "\nmatc"
					},
					"BgAAAIYcAAAAAAAAhxwAAAAAAAAAAAAAhxwAAAAAAACLHAAAAAAAAAAAAACLHAAAAAAAAIwcAAAAAAAAAAAAAIwcAAAAAAAAjRwAAAAAAAAAAAAAjRwAAAAAAACOHAAAAAAAAAAAAACOHAAAAAAAAI8cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhwAAAAAAACGHAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAI8cAAAAAAAAkBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxwAAAAAAACPHAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAcAAAAAAAAkRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBwAAAAAAACQHAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "editor"
					},
					"BgAAAJEcAAAAAAAAkhwAAAAAAAAAAAAAkhwAAAAAAACTHAAAAAAAAAAAAACTHAAAAAAAAJQcAAAAAAAAAAAAAJQcAAAAAAAAlRwAAAAAAAAAAAAAlRwAAAAAAACWHAAAAAAAAAAAAACWHAAAAAAAAJccAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRwAAAAAAACRHAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJccAAAAAAAAmRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxwAAAAAAACXHAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJgcAAAAAAAAmRwAAAAAAAAAAAAAmRwAAAAAAACdHAAAAAAAAAAAAACdHAAAAAAAAJ4cAAAAAAAAAAAAAJ4cAAAAAAAAohwAAAAAAAAAAAAAmRwAAAAAAACZHAAAAAAAAAQAAAAgICAgmRwAAAAAAAChHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBwAAAAAAACYHAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "Some"
					},
					"BAAAAKEcAAAAAAAAohwAAAAAAAAAAAAAohwAAAAAAACjHAAAAAAAAAAAAACjHAAAAAAAAKQcAAAAAAAAAAAAAKQcAAAAAAAApRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRwAAAAAAAChHAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUcAAAAAAAApxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRwAAAAAAAClHAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "editor"
					},
					"BgAAAKYcAAAAAAAApxwAAAAAAAAAAAAApxwAAAAAAACoHAAAAAAAAAAAAACoHAAAAAAAAKkcAAAAAAAAAAAAAKkcAAAAAAAAqhwAAAAAAAAAAAAAqhwAAAAAAACrHAAAAAAAAAAAAACrHAAAAAAAAKwcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphwAAAAAAACmHAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAK0cAAAAAAAArhwAAAAAAAAAAAAArhwAAAAAAACvHAAAAAAAAAAAAACvHAAAAAAAALAcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArRwAAAAAAACtHAAAAAAAAP///////+9/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALAcAAAAAAAAsRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBwAAAAAAACwHAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "item"
					},
					"BAAAAIscAAAAAAAAjBwAAAAAAAAAAAAAjBwAAAAAAACNHAAAAAAAAAAAAACNHAAAAAAAAI4cAAAAAAAAAAAAAI4cAAAAAAAAjxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixwAAAAAAACLHAAAAAAAAAAAAAAAADxA"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAI8cAAAAAAAAkBwAAAAAAAAAAAAAkBwAAAAAAACRHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxwAAAAAAACPHAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEcAAAAAAAAkhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRwAAAAAAACRHAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIscAAAAAAAAjBwAAAAAAAAAAAAAjBwAAAAAAACNHAAAAAAAAAAAAACNHAAAAAAAAI4cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixwAAAAAAACLHAAAAAAAAAAAAAAAADxA"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4cAAAAAAAAjxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhwAAAAAAACOHAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "editor.i"
					},
					"CAAAALwcAAAAAAAAvRwAAAAAAAAAAAAAvRwAAAAAAAC+HAAAAAAAAAAAAAC+HAAAAAAAAL8cAAAAAAAAAAAAAL8cAAAAAAAAwBwAAAAAAAAAAAAAwBwAAAAAAADBHAAAAAAAAAAAAADBHAAAAAAAAMIcAAAAAAAAAAAAAMIcAAAAAAAAwxwAAAAAAAAAAAAAwxwAAAAAAADEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBwAAAAAAAC8HAAAAAAAAP///////+9/"
				],
				[
					114,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"item_mut\",\"label\":\"item_mut(…)\",\"labelDetails\":{\"description\":\"fn(&mut self, &Project) -> Item<Mutable>\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"fn(&mut self, &Project) -> Item<Mutable>\",\"kind\":2,\"deprecated\":false,\"textEdit\":{\"replace\":{\"start\":{\"line\":237,\"character\":31},\"end\":{\"line\":237,\"character\":31}},\"newText\":\"item_mut(${1:project})$0\",\"insert\":{\"start\":{\"line\":237,\"character\":31},\"end\":{\"line\":237,\"character\":31}}},\"preselect\":true,\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							155,
							111,
							7
						],
						"trigger": "item_mut(…)"
					},
					"AgAAAMMcAAAAAAAAwxwAAAAAAAABAAAAacMcAAAAAAAA1BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBwAAAAAAADEHAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "&pr"
					},
					"BAAAAMwcAAAAAAAAzRwAAAAAAAAAAAAAzRwAAAAAAADNHAAAAAAAAAcAAABwcm9qZWN0zRwAAAAAAADOHAAAAAAAAAAAAADOHAAAAAAAAM8cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBwAAAAAAADTHAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANAcAAAAAAAA0RwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BwAAAAAAADQHAAAAAAAAP///////+9/"
				],
				[
					122,
					2,
					"left_delete",
					null,
					"AgAAANgcAAAAAAAA2BwAAAAAAAA6AAAAICAgIGxldCBpdGVtID0gZWRpdG9yLml0ZW1fbXV0KHByKTsKICAgIC8vIGxldCB0YWtlID0gaXRlbdccAAAAAAAA1xwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAEh0AAAAAAADYHAAAAAAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"left_delete",
					null,
					"AQAAANAcAAAAAAAA0BwAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA0RwAAAAAAADRHAAAAAAAAP///////+9/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANAcAAAAAAAA0RwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BwAAAAAAADQHAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\nNon"
					},
					"BQAAANEcAAAAAAAA0hwAAAAAAAAAAAAA0hwAAAAAAADaHAAAAAAAAAAAAADaHAAAAAAAANscAAAAAAAAAAAAANscAAAAAAAA3BwAAAAAAAAAAAAA3BwAAAAAAADdHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RwAAAAAAADRHAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAN0cAAAAAAAA3hwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RwAAAAAAADdHAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAN4cAAAAAAAA3xwAAAAAAAAAAAAA3xwAAAAAAADgHAAAAAAAAAAAAADgHAAAAAAAAOEcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hwAAAAAAADeHAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEcAAAAAAAA4hwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RwAAAAAAADhHAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "pr"
					},
					"AgAAAOIcAAAAAAAA4xwAAAAAAAAAAAAA4xwAAAAAAADkHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hwAAAAAAADiHAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": ".la"
					},
					"AwAAAOQcAAAAAAAA5RwAAAAAAAAAAAAA5RwAAAAAAADmHAAAAAAAAAAAAADmHAAAAAAAAOccAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BwAAAAAAADkHAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAOccAAAAAAAA6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xwAAAAAAADnHAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					3,
					"left_delete",
					null,
					"AwAAAOccAAAAAAAA5xwAAAAAAAABAAAAc+YcAAAAAAAA5hwAAAAAAAABAAAAYeUcAAAAAAAA5RwAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA6BwAAAAAAADoHAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "sel"
					},
					"AwAAAOUcAAAAAAAA5hwAAAAAAAAAAAAA5hwAAAAAAADnHAAAAAAAAAAAAADnHAAAAAAAAOgcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RwAAAAAAADlHAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "ecte"
					},
					"BAAAAOgcAAAAAAAA6RwAAAAAAAAAAAAA6RwAAAAAAADqHAAAAAAAAAAAAADqHAAAAAAAAOscAAAAAAAAAAAAAOscAAAAAAAA7BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BwAAAAAAADoHAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAOwcAAAAAAAA7RwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BwAAAAAAADsHAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"get_selected_item\",\"label\":\"get_selected_item(…)\",\"labelDetails\":{\"description\":\"fn(&self, usize) -> Option<Item<Immutable>>\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"fn(&self, usize) -> Option<Item<Immutable>>\",\"kind\":2,\"deprecated\":false,\"textEdit\":{\"replace\":{\"start\":{\"line\":238,\"character\":19},\"end\":{\"line\":238,\"character\":27}},\"newText\":\"get_selected_item(${1:index})$0\",\"insert\":{\"start\":{\"line\":238,\"character\":19},\"end\":{\"line\":238,\"character\":27}}},\"preselect\":true,\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							179,
							139,
							1
						],
						"trigger": "get_selected_item(…)"
					},
					"AgAAAOUcAAAAAAAA5RwAAAAAAAAIAAAAc2VsZWN0ZWTlHAAAAAAAAP0cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RwAAAAAAADtHAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAPccAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD4HAAAAAAAAAUAAABpbmRleA",
					"AQAAAAAAAAABAAAA9xwAAAAAAAD8HAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/levitanus/test inline/test inline.RPP",
			"settings":
			{
				"buffer_size": 4445,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "rea-score/src/notation/note_notations.rs",
			"settings":
			{
				"buffer_size": 3663,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAG0BAAAAAAAAbQEAAAAAAAABAAAAOm0BAAAAAAAAcAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "TOKENS"
					},
					"BwAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABvAQAAAAAAAAEAAAA6bwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"paste",
					null,
					"AgAAAG4BAAAAAAAAfgEAAAAAAAAAAAAAfgEAAAAAAAB+AQAAAAAAAAYAAABUT0tFTlM",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4BAAAAAAAAdAEAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"paste",
					null,
					"AgAAAMUBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADXAQAAAAAAAAEAAAA6",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG0AAAAAAAAAbgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0AAAAAAAAAbQAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " TOK"
					},
					"BAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4AAAAAAAAAbgAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{},\"preselect\":true,\"kind\":21,\"deprecated\":false,\"sortText\":\"ffffffef\",\"label\":\"TOKENS_DELIMITER\",\"additionalTextEdits\":[],\"filterText\":\"TOKENS_DELIMITER\",\"textEdit\":{\"insert\":{\"start\":{\"line\":2,\"character\":71},\"end\":{\"line\":2,\"character\":74}},\"newText\":\"TOKENS_DELIMITER\",\"replace\":{\"start\":{\"line\":2,\"character\":71},\"end\":{\"line\":2,\"character\":74}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							18,
							30,
							4
						],
						"trigger": "TOKENS_DELIMITER"
					},
					"AgAAAG8AAAAAAAAAbwAAAAAAAAADAAAAVE9LbwAAAAAAAAB/AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIAAAAAAAAAcgAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									2,
									12
								],
								[
									2,
									12
								],
								"\n    ",
								null
							],
							[
								[
									2,
									70
								],
								[
									2,
									70
								],
								"\n   ",
								null
							],
							[
								[
									2,
									87
								],
								[
									2,
									87
								],
								",\n",
								null
							],
							[
								[
									12,
									35
								],
								[
									12,
									35
								],
								" {\n               ",
								null
							],
							[
								[
									12,
									94
								],
								[
									12,
									95
								],
								"\n            }",
								null
							],
							[
								[
									13,
									31
								],
								[
									13,
									31
								],
								" {\n               ",
								null
							],
							[
								[
									13,
									85
								],
								[
									13,
									86
								],
								"\n            }",
								null
							]
						]
					},
					"BwAAAP4BAAAAAAAADAIAAAAAAAABAAAALMgBAAAAAAAA2gEAAAAAAAAAAAAApwEAAAAAAAC1AQAAAAAAAAEAAAAsbAEAAAAAAAB+AQAAAAAAAAAAAAB/AAAAAAAAAIEAAAAAAAAAAAAAAG4AAAAAAAAAcgAAAAAAAAAAAAAANAAAAAAAAAA5AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8AAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "rea-score/src/notation/chord_notations.rs",
			"settings":
			{
				"buffer_size": 1064,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAFEBAAAAAAAAUQEAAAAAAAABAAAAOlEBAAAAAAAAVAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"paste",
					null,
					"AgAAAFEBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABjAQAAAAAAAAMAAAB7On0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEBAAAAAAAAVAEAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ",TO"
					},
					"AwAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0AAAAAAAAAbQAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{},\"preselect\":true,\"kind\":21,\"deprecated\":false,\"sortText\":\"ffffffef\",\"label\":\"TOKENS_DELIMITER\",\"additionalTextEdits\":[],\"filterText\":\"TOKENS_DELIMITER\",\"textEdit\":{\"insert\":{\"start\":{\"line\":2,\"character\":70},\"end\":{\"line\":2,\"character\":72}},\"newText\":\"TOKENS_DELIMITER\",\"replace\":{\"start\":{\"line\":2,\"character\":70},\"end\":{\"line\":2,\"character\":72}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							9,
							11,
							3
						],
						"trigger": "TOKENS_DELIMITER"
					},
					"AgAAAG4AAAAAAAAAbgAAAAAAAAACAAAAVE9uAAAAAAAAAH4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									2,
									12
								],
								[
									2,
									12
								],
								"\n    ",
								null
							],
							[
								[
									2,
									70
								],
								[
									2,
									70
								],
								"\n    ",
								null
							],
							[
								[
									2,
									86
								],
								[
									2,
									86
								],
								",\n",
								null
							]
						]
					},
					"AwAAAH4AAAAAAAAAgAAAAAAAAAAAAAAAbgAAAAAAAABzAAAAAAAAAAAAAAA0AAAAAAAAADkAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4AAAAAAAAAfgAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "rea-score/src/notation/mod.rs",
			"settings":
			{
				"buffer_size": 3687,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1737,
					1,
					"insert",
					{
						"characters": "Replace"
					},
					"CAAAAI8RAAAAAAAAkBEAAAAAAAAAAAAAkBEAAAAAAACQEQAAAAAAABwAAABHZXQgcmVhc2NvcmUgdG9rZW5zLCBpZiBhbnkukBEAAAAAAACREQAAAAAAAAAAAACREQAAAAAAAJIRAAAAAAAAAAAAAJIRAAAAAAAAkxEAAAAAAAAAAAAAkxEAAAAAAACUEQAAAAAAAAAAAACUEQAAAAAAAJURAAAAAAAAAAAAAJURAAAAAAAAlhEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8RAAAAAAAAqxEAAAAAAAD////////vfw"
				],
				[
					1738,
					1,
					"insert",
					{
						"characters": " Reas"
					},
					"BQAAAJYRAAAAAAAAlxEAAAAAAAAAAAAAlxEAAAAAAACYEQAAAAAAAAAAAACYEQAAAAAAAJkRAAAAAAAAAAAAAJkRAAAAAAAAmhEAAAAAAAAAAAAAmhEAAAAAAACbEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYRAAAAAAAAlhEAAAAAAAAAAAAAAADwvw"
				],
				[
					1739,
					1,
					"insert",
					{
						"characters": "core"
					},
					"BAAAAJsRAAAAAAAAnBEAAAAAAAAAAAAAnBEAAAAAAACdEQAAAAAAAAAAAACdEQAAAAAAAJ4RAAAAAAAAAAAAAJ4RAAAAAAAAnxEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsRAAAAAAAAmxEAAAAAAAAAAAAAAADwvw"
				],
				[
					1740,
					1,
					"insert",
					{
						"characters": " token"
					},
					"BgAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAAoBEAAAAAAAChEQAAAAAAAAAAAAChEQAAAAAAAKIRAAAAAAAAAAAAAKIRAAAAAAAAoxEAAAAAAAAAAAAAoxEAAAAAAACkEQAAAAAAAAAAAACkEQAAAAAAAKURAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8RAAAAAAAAnxEAAAAAAAAAAAAAAADwvw"
				],
				[
					1741,
					1,
					"insert",
					{
						"characters": " string"
					},
					"BwAAAKURAAAAAAAAphEAAAAAAAAAAAAAphEAAAAAAACnEQAAAAAAAAAAAACnEQAAAAAAAKgRAAAAAAAAAAAAAKgRAAAAAAAAqREAAAAAAAAAAAAAqREAAAAAAACqEQAAAAAAAAAAAACqEQAAAAAAAKsRAAAAAAAAAAAAAKsRAAAAAAAArBEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKURAAAAAAAApREAAAAAAAAAAAAAAADwvw"
				],
				[
					1742,
					1,
					"insert",
					{
						"characters": " by"
					},
					"AwAAAKwRAAAAAAAArREAAAAAAAAAAAAArREAAAAAAACuEQAAAAAAAAAAAACuEQAAAAAAAK8RAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwRAAAAAAAArBEAAAAAAAAAAAAAAADwvw"
				],
				[
					1743,
					1,
					"insert",
					{
						"characters": " given,"
					},
					"BwAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAACxEQAAAAAAAAAAAACxEQAAAAAAALIRAAAAAAAAAAAAALIRAAAAAAAAsxEAAAAAAAAAAAAAsxEAAAAAAAC0EQAAAAAAAAAAAAC0EQAAAAAAALURAAAAAAAAAAAAALURAAAAAAAAthEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8RAAAAAAAArxEAAAAAAAAAAAAAAADwvw"
				],
				[
					1744,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAALYRAAAAAAAAtxEAAAAAAAAAAAAAtxEAAAAAAAC4EQAAAAAAAAAAAAC4EQAAAAAAALkRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYRAAAAAAAAthEAAAAAAAAAAAAAAADwvw"
				],
				[
					1745,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAALkRAAAAAAAAuhEAAAAAAAAAAAAAuhEAAAAAAAC7EQAAAAAAAAAAAAC7EQAAAAAAALwRAAAAAAAAAAAAALwRAAAAAAAAvREAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkRAAAAAAAAuREAAAAAAAAAAAAAAADwvw"
				],
				[
					1746,
					2,
					"left_delete",
					null,
					"AgAAALwRAAAAAAAAvBEAAAAAAAABAAAAcLsRAAAAAAAAuxEAAAAAAAABAAAAcA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0RAAAAAAAAvREAAAAAAAAAAAAAAADwvw"
				],
				[
					1747,
					1,
					"insert",
					{
						"characters": "ttach"
					},
					"BQAAALsRAAAAAAAAvBEAAAAAAAAAAAAAvBEAAAAAAAC9EQAAAAAAAAAAAAC9EQAAAAAAAL4RAAAAAAAAAAAAAL4RAAAAAAAAvxEAAAAAAAAAAAAAvxEAAAAAAADAEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsRAAAAAAAAuxEAAAAAAAAAAAAAAADwvw"
				],
				[
					1749,
					1,
					"left_delete",
					null,
					"AQAAALoRAAAAAAAAuhEAAAAAAAAGAAAAYXR0YWNo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMARAAAAAAAAuhEAAAAAAAAAAAAAAADwvw"
				],
				[
					1750,
					1,
					"insert",
					{
						"characters": "push"
					},
					"BAAAALoRAAAAAAAAuxEAAAAAAAAAAAAAuxEAAAAAAAC8EQAAAAAAAAAAAAC8EQAAAAAAAL0RAAAAAAAAAAAAAL0RAAAAAAAAvhEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoRAAAAAAAAuhEAAAAAAAAAAAAAAADwvw"
				],
				[
					1751,
					1,
					"insert",
					{
						"characters": " one"
					},
					"BAAAAL4RAAAAAAAAvxEAAAAAAAAAAAAAvxEAAAAAAADAEQAAAAAAAAAAAADAEQAAAAAAAMERAAAAAAAAAAAAAMERAAAAAAAAwhEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4RAAAAAAAAvhEAAAAAAAAAAAAAAADwvw"
				],
				[
					1752,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAMIRAAAAAAAAwxEAAAAAAAAAAAAAwxEAAAAAAADEEQAAAAAAAAAAAADEEQAAAAAAAMURAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIRAAAAAAAAwhEAAAAAAAAAAAAAAADwvw"
				],
				[
					1753,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAMURAAAAAAAAxhEAAAAAAAAAAAAAxhEAAAAAAADHEQAAAAAAAAAAAADHEQAAAAAAAMgRAAAAAAAAAAAAAMgRAAAAAAAAyREAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMURAAAAAAAAxREAAAAAAAAAAAAAAADwvw"
				],
				[
					1754,
					1,
					"insert",
					{
						"characters": " exists"
					},
					"BwAAAMkRAAAAAAAAyhEAAAAAAAAAAAAAyhEAAAAAAADLEQAAAAAAAAAAAADLEQAAAAAAAMwRAAAAAAAAAAAAAMwRAAAAAAAAzREAAAAAAAAAAAAAzREAAAAAAADOEQAAAAAAAAAAAADOEQAAAAAAAM8RAAAAAAAAAAAAAM8RAAAAAAAA0BEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkRAAAAAAAAyREAAAAAAAAAAAAAAADwvw"
				],
				[
					1755,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAANARAAAAAAAA0REAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANARAAAAAAAA0BEAAAAAAAAAAAAAAADwvw"
				],
				[
					1763,
					1,
					"insert",
					{
						"characters": "\n\ndelete"
					},
					"CAAAAGYPAAAAAAAAZw8AAAAAAAAAAAAAZw8AAAAAAABoDwAAAAAAAAAAAABoDwAAAAAAAGkPAAAAAAAAAAAAAGkPAAAAAAAAag8AAAAAAAAAAAAAag8AAAAAAABrDwAAAAAAAAAAAABrDwAAAAAAAGwPAAAAAAAAAAAAAGwPAAAAAAAAbQ8AAAAAAAAAAAAAbQ8AAAAAAABuDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYPAAAAAAAAZg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1765,
					1,
					"left_delete",
					null,
					"AQAAAGgPAAAAAAAAaA8AAAAAAAAGAAAAZGVsZXRl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4PAAAAAAAAaA8AAAAAAAAAAAAAAAAAAA"
				],
				[
					1766,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAGgPAAAAAAAAaQ8AAAAAAAAAAAAAaQ8AAAAAAABqDwAAAAAAAAAAAABqDwAAAAAAAGsPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgPAAAAAAAAaA8AAAAAAAAAAAAAAADwvw"
				],
				[
					1767,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAGsPAAAAAAAAbA8AAAAAAAAAAAAAbA8AAAAAAABtDwAAAAAAAAAAAABtDwAAAAAAAG4PAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsPAAAAAAAAaw8AAAAAAAAAAAAAAADwvw"
				],
				[
					1768,
					1,
					"insert",
					{
						"characters": " delete_"
					},
					"CAAAAG4PAAAAAAAAbw8AAAAAAAAAAAAAbw8AAAAAAABwDwAAAAAAAAAAAABwDwAAAAAAAHEPAAAAAAAAAAAAAHEPAAAAAAAAcg8AAAAAAAAAAAAAcg8AAAAAAABzDwAAAAAAAAAAAABzDwAAAAAAAHQPAAAAAAAAAAAAAHQPAAAAAAAAdQ8AAAAAAAAAAAAAdQ8AAAAAAAB2DwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4PAAAAAAAAbg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1769,
					1,
					"insert",
					{
						"characters": "given_notations"
					},
					"DwAAAHYPAAAAAAAAdw8AAAAAAAAAAAAAdw8AAAAAAAB4DwAAAAAAAAAAAAB4DwAAAAAAAHkPAAAAAAAAAAAAAHkPAAAAAAAAeg8AAAAAAAAAAAAAeg8AAAAAAAB7DwAAAAAAAAAAAAB7DwAAAAAAAHwPAAAAAAAAAAAAAHwPAAAAAAAAfQ8AAAAAAAAAAAAAfQ8AAAAAAAB+DwAAAAAAAAAAAAB+DwAAAAAAAH8PAAAAAAAAAAAAAH8PAAAAAAAAgA8AAAAAAAAAAAAAgA8AAAAAAACBDwAAAAAAAAAAAACBDwAAAAAAAIIPAAAAAAAAAAAAAIIPAAAAAAAAgw8AAAAAAAAAAAAAgw8AAAAAAACEDwAAAAAAAAAAAACEDwAAAAAAAIUPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYPAAAAAAAAdg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1770,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIUPAAAAAAAAhw8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUPAAAAAAAAhQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					1771,
					1,
					"insert",
					{
						"characters": "mmut"
					},
					"BAAAAIYPAAAAAAAAhw8AAAAAAAAAAAAAhw8AAAAAAACIDwAAAAAAAAAAAACIDwAAAAAAAIkPAAAAAAAAAAAAAIkPAAAAAAAAig8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYPAAAAAAAAhg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1772,
					3,
					"left_delete",
					null,
					"AwAAAIkPAAAAAAAAiQ8AAAAAAAABAAAAdIgPAAAAAAAAiA8AAAAAAAABAAAAdYcPAAAAAAAAhw8AAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoPAAAAAAAAig8AAAAAAAAAAAAAAADwvw"
				],
				[
					1773,
					1,
					"insert",
					{
						"characters": "ut"
					},
					"AgAAAIcPAAAAAAAAiA8AAAAAAAAAAAAAiA8AAAAAAACJDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcPAAAAAAAAhw8AAAAAAAAAAAAAAADwvw"
				],
				[
					1774,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkPAAAAAAAAig8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkPAAAAAAAAiQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					1775,
					1,
					"insert",
					{
						"characters": "msg:"
					},
					"BAAAAIoPAAAAAAAAiw8AAAAAAAAAAAAAiw8AAAAAAACMDwAAAAAAAAAAAACMDwAAAAAAAI0PAAAAAAAAAAAAAI0PAAAAAAAAjg8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoPAAAAAAAAig8AAAAAAAAAAAAAAADwvw"
				],
				[
					1776,
					1,
					"insert",
					{
						"characters": " Nota"
					},
					"BQAAAI4PAAAAAAAAjw8AAAAAAAAAAAAAjw8AAAAAAACQDwAAAAAAAAAAAACQDwAAAAAAAJEPAAAAAAAAAAAAAJEPAAAAAAAAkg8AAAAAAAAAAAAAkg8AAAAAAACTDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4PAAAAAAAAjg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1778,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{},\"deprecated\":false,\"kind\":22,\"preselect\":true,\"documentation\":{\"value\":\"Represents Notation messages `0xf0, 0x0f`\",\"kind\":\"markdown\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"NotationMessage\",\"filterText\":\"NotationMessage\",\"textEdit\":{\"insert\":{\"start\":{\"line\":119,\"character\":39},\"end\":{\"line\":119,\"character\":43}},\"newText\":\"NotationMessage\",\"replace\":{\"start\":{\"line\":119,\"character\":39},\"end\":{\"line\":119,\"character\":43}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1310,
							1776,
							5
						],
						"trigger": "NotationMessage"
					},
					"AgAAAI8PAAAAAAAAjw8AAAAAAAAEAAAATm90YY8PAAAAAAAAng8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMPAAAAAAAAkw8AAAAAAAAAAAAAAADwvw"
				],
				[
					1779,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ4PAAAAAAAAnw8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4PAAAAAAAAng8AAAAAAAAAAAAAAADwvw"
				],
				[
					1780,
					1,
					"insert",
					{
						"characters": " notations:"
					},
					"CwAAAJ8PAAAAAAAAoA8AAAAAAAAAAAAAoA8AAAAAAAChDwAAAAAAAAAAAAChDwAAAAAAAKIPAAAAAAAAAAAAAKIPAAAAAAAAow8AAAAAAAAAAAAAow8AAAAAAACkDwAAAAAAAAAAAACkDwAAAAAAAKUPAAAAAAAAAAAAAKUPAAAAAAAApg8AAAAAAAAAAAAApg8AAAAAAACnDwAAAAAAAAAAAACnDwAAAAAAAKgPAAAAAAAAAAAAAKgPAAAAAAAAqQ8AAAAAAAAAAAAAqQ8AAAAAAACqDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8PAAAAAAAAnw8AAAAAAAAAAAAAAADwvw"
				],
				[
					1781,
					1,
					"insert",
					{
						"characters": " Vec<>"
					},
					"BgAAAKoPAAAAAAAAqw8AAAAAAAAAAAAAqw8AAAAAAACsDwAAAAAAAAAAAACsDwAAAAAAAK0PAAAAAAAAAAAAAK0PAAAAAAAArg8AAAAAAAAAAAAArg8AAAAAAACvDwAAAAAAAAAAAACvDwAAAAAAALAPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoPAAAAAAAAqg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1783,
					1,
					"insert",
					{
						"characters": "Nota"
					},
					"BAAAAK8PAAAAAAAAsA8AAAAAAAAAAAAAsA8AAAAAAACxDwAAAAAAAAAAAACxDwAAAAAAALIPAAAAAAAAAAAAALIPAAAAAAAAsw8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8PAAAAAAAArw8AAAAAAAAAAAAAAADwvw"
				],
				[
					1785,
					1,
					"insert",
					{
						"characters": "ti"
					},
					"AgAAALMPAAAAAAAAtA8AAAAAAAAAAAAAtA8AAAAAAAC1DwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMPAAAAAAAAsw8AAAAAAAAAAAAAAADwvw"
				],
				[
					1790,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{},\"deprecated\":false,\"kind\":13,\"preselect\":true,\"documentation\":{\"value\":\"Handles parsing and representation of raw notation\",\"kind\":\"markdown\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"NotationType\",\"filterText\":\"NotationType\",\"textEdit\":{\"insert\":{\"start\":{\"line\":119,\"character\":71},\"end\":{\"line\":119,\"character\":77}},\"newText\":\"NotationType\",\"replace\":{\"start\":{\"line\":119,\"character\":71},\"end\":{\"line\":119,\"character\":77}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1317,
							1785,
							2
						],
						"trigger": "NotationType"
					},
					"AgAAAK8PAAAAAAAArw8AAAAAAAAGAAAATm90YXRprw8AAAAAAAC7DwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUPAAAAAAAAtQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					1792,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAL0PAAAAAAAAvg8AAAAAAAAAAAAAvg8AAAAAAAC/DwAAAAAAAAAAAAC/DwAAAAAAAMAPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0PAAAAAAAAvQ8AAAAAAAD////////vfw"
				],
				[
					1793,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMAPAAAAAAAAwQ8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAPAAAAAAAAwA8AAAAAAAAAAAAAAADwvw"
				],
				[
					1794,
					1,
					"insert",
					{
						"characters": "NotationM"
					},
					"CQAAAMEPAAAAAAAAwg8AAAAAAAAAAAAAwg8AAAAAAADDDwAAAAAAAAAAAADDDwAAAAAAAMQPAAAAAAAAAAAAAMQPAAAAAAAAxQ8AAAAAAAAAAAAAxQ8AAAAAAADGDwAAAAAAAAAAAADGDwAAAAAAAMcPAAAAAAAAAAAAAMcPAAAAAAAAyA8AAAAAAAAAAAAAyA8AAAAAAADJDwAAAAAAAAAAAADJDwAAAAAAAMoPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEPAAAAAAAAwQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					1795,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{},\"deprecated\":false,\"kind\":22,\"preselect\":true,\"documentation\":{\"value\":\"Represents Notation messages `0xf0, 0x0f`\",\"kind\":\"markdown\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"NotationMessage\",\"filterText\":\"NotationMessage\",\"textEdit\":{\"insert\":{\"start\":{\"line\":119,\"character\":89},\"end\":{\"line\":119,\"character\":98}},\"newText\":\"NotationMessage\",\"replace\":{\"start\":{\"line\":119,\"character\":89},\"end\":{\"line\":119,\"character\":98}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1322,
							1794,
							9
						],
						"trigger": "NotationMessage"
					},
					"AgAAAMEPAAAAAAAAwQ8AAAAAAAAJAAAATm90YXRpb25NwQ8AAAAAAADQDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoPAAAAAAAAyg8AAAAAAAAAAAAAAADwvw"
				],
				[
					1796,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANAPAAAAAAAA0g8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAPAAAAAAAA0A8AAAAAAAAAAAAAAADwvw"
				],
				[
					1797,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAANEPAAAAAAAA0g8AAAAAAAAAAAAA0g8AAAAAAADTDwAAAAAAAAAAAADSDwAAAAAAANYPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEPAAAAAAAA0Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					1798,
					1,
					"insert",
					{
						"characters": "match"
					},
					"BQAAANYPAAAAAAAA1w8AAAAAAAAAAAAA1w8AAAAAAADYDwAAAAAAAAAAAADYDwAAAAAAANkPAAAAAAAAAAAAANkPAAAAAAAA2g8AAAAAAAAAAAAA2g8AAAAAAADbDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYPAAAAAAAA1g8AAAAAAAAAAAAAAADwvw"
				],
				[
					1799,
					1,
					"insert",
					{
						"characters": " msg."
					},
					"BQAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAADdDwAAAAAAAN4PAAAAAAAAAAAAAN4PAAAAAAAA3w8AAAAAAAAAAAAA3w8AAAAAAADgDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsPAAAAAAAA2w8AAAAAAAAAAAAAAADwvw"
				],
				[
					1800,
					1,
					"insert",
					{
						"characters": "not"
					},
					"AwAAAOAPAAAAAAAA4Q8AAAAAAAAAAAAA4Q8AAAAAAADiDwAAAAAAAAAAAADiDwAAAAAAAOMPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAPAAAAAAAA4A8AAAAAAAAAAAAAAADwvw"
				],
				[
					1801,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(&self) -> Notation\"},\"deprecated\":false,\"kind\":2,\"preselect\":true,\"detail\":\"fn(&self) -> Notation\",\"sortText\":\"ffffffec\",\"additionalTextEdits\":[],\"label\":\"notation()\",\"insertTextFormat\":2,\"filterText\":\"notation\",\"textEdit\":{\"insert\":{\"start\":{\"line\":120,\"character\":14},\"end\":{\"line\":120,\"character\":17}},\"newText\":\"notation()$0\",\"replace\":{\"start\":{\"line\":120,\"character\":14},\"end\":{\"line\":120,\"character\":17}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1328,
							1800,
							3
						],
						"trigger": "notation()"
					},
					"AgAAAOAPAAAAAAAA4A8AAAAAAAADAAAAbm904A8AAAAAAADqDwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMPAAAAAAAA4w8AAAAAAAAAAAAAAADwvw"
				],
				[
					1802,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOoPAAAAAAAA7A8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoPAAAAAAAA6g8AAAAAAAAAAAAAAADwvw"
				],
				[
					1803,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOsPAAAAAAAA7A8AAAAAAAAAAAAA7A8AAAAAAADwDwAAAAAAAAAAAADwDwAAAAAAAPEPAAAAAAAAAAAAAPEPAAAAAAAA9Q8AAAAAAAAAAAAA7A8AAAAAAADsDwAAAAAAAAQAAAAgICAg7A8AAAAAAAD0DwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsPAAAAAAAA6w8AAAAAAAAAAAAAAADwvw"
				],
				[
					1804,
					1,
					"insert",
					{
						"characters": "MN"
					},
					"AgAAAPQPAAAAAAAA9Q8AAAAAAAAAAAAA9Q8AAAAAAAD2DwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQPAAAAAAAA9A8AAAAAAAAAAAAAAADwvw"
				],
				[
					1805,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{},\"deprecated\":false,\"kind\":13,\"preselect\":true,\"documentation\":{\"value\":\"Partially parsed notation.\",\"kind\":\"markdown\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"MNotation\",\"filterText\":\"MNotation\",\"textEdit\":{\"insert\":{\"start\":{\"line\":121,\"character\":8},\"end\":{\"line\":121,\"character\":9}},\"newText\":\"MNotation\",\"replace\":{\"start\":{\"line\":121,\"character\":8},\"end\":{\"line\":121,\"character\":9}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1332,
							1804,
							1
						],
						"trigger": "MNotation"
					},
					"AwAAAPUPAAAAAAAA9Q8AAAAAAAABAAAATvQPAAAAAAAA9A8AAAAAAAABAAAATfQPAAAAAAAA/Q8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYPAAAAAAAA9g8AAAAAAAAAAAAAAADwvw"
				],
				[
					1806,
					1,
					"insert",
					{
						"characters": "::N"
					},
					"AwAAAP0PAAAAAAAA/g8AAAAAAAAAAAAA/g8AAAAAAAD/DwAAAAAAAAAAAAD/DwAAAAAAAAAQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0PAAAAAAAA/Q8AAAAAAAAAAAAAAADwvw"
				],
				[
					1807,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"Note { channel$1, note$2, tokens$3 }$0\"},\"preselect\":true,\"kind\":6,\"documentation\":{\"value\":\"Note notation: channel(1-based), note, tokens\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":121,\"character\":19},\"end\":{\"line\":121,\"character\":20}},\"newText\":\"Note { channel$1, note$2, tokens$3 }$0\",\"replace\":{\"start\":{\"line\":121,\"character\":19},\"end\":{\"line\":121,\"character\":20}}},\"filterText\":\"Note{}\",\"deprecated\":false,\"detail\":\"Note { channel$1, note$2, tokens$3 }$0\",\"label\":\"Note {…}\",\"sortText\":\"ffffffef\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1334,
							1806,
							3
						],
						"trigger": "Note{}"
					},
					"AgAAAP8PAAAAAAAA/w8AAAAAAAABAAAATv8PAAAAAAAAHRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAADwvw"
				],
				[
					1809,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAB0QAAAAAAAAHhAAAAAAAAAAAAAAHhAAAAAAAAAfEAAAAAAAAAAAAAAfEAAAAAAAACAQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0QAAAAAAAAHRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1810,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAQAAAAAAAAIRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1811,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACEQAAAAAAAAIxAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEQAAAAAAAAIRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1812,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACIQAAAAAAAAIxAAAAAAAAAAAAAAIxAAAAAAAAArEAAAAAAAAAAAAAArEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAANBAAAAAAAAAAAAAAIxAAAAAAAAAjEAAAAAAAAAgAAAAgICAgICAgICMQAAAAAAAALxAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIQAAAAAAAAIhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1816,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"BAAAABUQAAAAAAAAFhAAAAAAAAAAAAAAJBAAAAAAAAAkEAAAAAAAAAwAAAAgICAgICAgICAgICAWEAAAAAAAABcQAAAAAAAAAAAAABcQAAAAAAAAGBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUQAAAAAAAAFRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1817,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgQAAAAAAAAGRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1820,
					1,
					"reindent",
					null,
					"AQAAACcQAAAAAAAAMxAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcQAAAAAAAAJxAAAAAAAAD////////vfw"
				],
				[
					1821,
					1,
					"insert",
					{
						"characters": "tokens."
					},
					"BwAAADMQAAAAAAAANBAAAAAAAAAAAAAANBAAAAAAAAA1EAAAAAAAAAAAAAA1EAAAAAAAADYQAAAAAAAAAAAAADYQAAAAAAAANxAAAAAAAAAAAAAANxAAAAAAAAA4EAAAAAAAAAAAAAA4EAAAAAAAADkQAAAAAAAAAAAAADkQAAAAAAAAOhAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMQAAAAAAAAMxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1822,
					1,
					"insert",
					{
						"characters": "iter"
					},
					"BAAAADoQAAAAAAAAOxAAAAAAAAAAAAAAOxAAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAAD0QAAAAAAAAAAAAAD0QAAAAAAAAPhAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoQAAAAAAAAOhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1824,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(&self) -> Iter<T>\"},\"deprecated\":false,\"kind\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":122,\"character\":19},\"end\":{\"line\":122,\"character\":23}},\"newText\":\"iter()$0\",\"replace\":{\"start\":{\"line\":122,\"character\":19},\"end\":{\"line\":122,\"character\":23}}},\"detail\":\"fn(&self) -> Iter<T>\",\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"iter()\",\"insertTextFormat\":2,\"filterText\":\"iter\",\"documentation\":{\"value\":\"Returns an iterator over the slice.\\n\\nThe iterator yields all items from start to end.\\n\\n# Examples\\n\\n```rust\\nlet x = &[1, 2, 4];\\nlet mut iterator = x.iter();\\n\\nassert_eq!(iterator.next(), Some(&1));\\nassert_eq!(iterator.next(), Some(&2));\\nassert_eq!(iterator.next(), Some(&4));\\nassert_eq!(iterator.next(), None);\\n```\",\"kind\":\"markdown\"}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1350,
							1822,
							4
						],
						"trigger": "iter()"
					},
					"AgAAADoQAAAAAAAAOhAAAAAAAAAEAAAAaXRlcjoQAAAAAAAAQBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4QAAAAAAAAPhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1825,
					1,
					"insert",
					{
						"characters": ".map"
					},
					"BAAAAEAQAAAAAAAAQRAAAAAAAAAAAAAAQRAAAAAAAABCEAAAAAAAAAAAAABCEAAAAAAAAEMQAAAAAAAAAAAAAEMQAAAAAAAARBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1826,
					4,
					"left_delete",
					null,
					"BAAAAEMQAAAAAAAAQxAAAAAAAAABAAAAcEIQAAAAAAAAQhAAAAAAAAABAAAAYUEQAAAAAAAAQRAAAAAAAAABAAAAbUAQAAAAAAAAQBAAAAAAAAABAAAALg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQQAAAAAAAARBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1827,
					1,
					"insert",
					{
						"characters": ".re"
					},
					"AwAAAEAQAAAAAAAAQRAAAAAAAAAAAAAAQRAAAAAAAABCEAAAAAAAAAAAAABCEAAAAAAAAEMQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1828,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAEMQAAAAAAAARBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMQAAAAAAAAQxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1829,
					3,
					"left_delete",
					null,
					"AwAAAEMQAAAAAAAAQxAAAAAAAAABAAAAcEIQAAAAAAAAQhAAAAAAAAABAAAAZUEQAAAAAAAAQRAAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQQAAAAAAAARBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1830,
					1,
					"insert",
					{
						"characters": "map"
					},
					"AwAAAEEQAAAAAAAAQhAAAAAAAAAAAAAAQhAAAAAAAABDEAAAAAAAAAAAAABDEAAAAAAAAEQQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEQAAAAAAAAQRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1831,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(self, F) -> Map<Self, F>\"},\"kind\":2,\"documentation\":{\"value\":\"Takes a closure and creates an iterator which calls that closure on each\\nelement.\\n\\n`map()` transforms one iterator into another, by means of its argument:\\nsomething that implements [`FnMut`]. It produces a new iterator which\\ncalls this closure on each element of the original iterator.\\n\\nIf you are good at thinking in types, you can think of `map()` like this:\\nIf you have an iterator that gives you elements of some type `A`, and\\nyou want an iterator of some other type `B`, you can use `map()`,\\npassing a closure that takes an `A` and returns a `B`.\\n\\n`map()` is conceptually similar to a [`for`] loop. However, as `map()` is\\nlazy, it is best used when you're already working with other iterators.\\nIf you're doing some sort of looping for a side effect, it's considered\\nmore idiomatic to use [`for`] than `map()`.\\n\\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\\n[`FnMut`]: crate::ops::FnMut\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet mut iter = a.iter().map(|x| 2 * x);\\n\\nassert_eq!(iter.next(), Some(2));\\nassert_eq!(iter.next(), Some(4));\\nassert_eq!(iter.next(), Some(6));\\nassert_eq!(iter.next(), None);\\n```\\n\\nIf you're doing some sort of side effect, prefer [`for`] to `map()`:\\n\\n```rust\\n// don't do this:\\n(0..5).map(|x| println!(\\\"{x}\\\"));\\n\\n// it won't even execute, as it is lazy. Rust will warn you about this.\\n\\n// Instead, use for:\\nfor x in 0..5 {\\n    println!(\\\"{x}\\\");\\n}\\n```\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":122,\"character\":26},\"end\":{\"line\":122,\"character\":27}},\"newText\":\"map(${1:f})$0\",\"replace\":{\"start\":{\"line\":122,\"character\":26},\"end\":{\"line\":122,\"character\":27}}},\"filterText\":\"map\",\"deprecated\":false,\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"fn(self, F) -> Map<Self, F>\",\"label\":\"map(…) (as Iterator)\",\"sortText\":\"ffffffef\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1357,
							1830,
							1
						],
						"trigger": "map(…) (as Iterator)"
					},
					"BAAAAEMQAAAAAAAAQxAAAAAAAAABAAAAcEIQAAAAAAAAQhAAAAAAAAABAAAAYUEQAAAAAAAAQRAAAAAAAAABAAAAbUEQAAAAAAAARxAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQQAAAAAAAARBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1836,
					1,
					"insert",
					{
						"characters": "into_"
					},
					"BQAAADoQAAAAAAAAOxAAAAAAAAAAAAAAOxAAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAAD0QAAAAAAAAAAAAAD0QAAAAAAAAPhAAAAAAAAAAAAAAPhAAAAAAAAA/EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoQAAAAAAAAOhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1838,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAADMQAAAAAAAANBAAAAAAAAAAAAAANBAAAAAAAAA1EAAAAAAAAAAAAAA1EAAAAAAAADYQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMQAAAAAAAAMxAAAAAAAAAAAAAAAABVQA"
				],
				[
					1839,
					1,
					"insert",
					{
						"characters": " tokens"
					},
					"BwAAADYQAAAAAAAANxAAAAAAAAAAAAAANxAAAAAAAAA4EAAAAAAAAAAAAAA4EAAAAAAAADkQAAAAAAAAAAAAADkQAAAAAAAAOhAAAAAAAAAAAAAAOhAAAAAAAAA7EAAAAAAAAAAAAAA7EAAAAAAAADwQAAAAAAAAAAAAADwQAAAAAAAAPRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYQAAAAAAAANhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1840,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAD0QAAAAAAAAPhAAAAAAAAAAAAAAPhAAAAAAAAA/EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0QAAAAAAAAPRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1841,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8QAAAAAAAAQBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8QAAAAAAAAPxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1843,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFkQAAAAAAAAWhAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkQAAAAAAAAWRAAAAAAAAD////////vfw"
				],
				[
					1845,
					1,
					"left_delete",
					null,
					"AQAAAFcQAAAAAAAAVxAAAAAAAAABAAAAZg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1846,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAAFcQAAAAAAAAWBAAAAAAAAAAAAAAWBAAAAAAAABZEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcQAAAAAAAAVxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1848,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAFgQAAAAAAAAWRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1849,
					1,
					"left_delete",
					null,
					"AQAAAFgQAAAAAAAAWBAAAAAAAAABAAAAZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkQAAAAAAAAWRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1850,
					1,
					"insert",
					{
						"characters": "tk"
					},
					"AgAAAFgQAAAAAAAAWRAAAAAAAAAAAAAAWRAAAAAAAABaEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1852,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFsQAAAAAAAAXRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsQAAAAAAAAWxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1853,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFwQAAAAAAAAXRAAAAAAAAAAAAAAXRAAAAAAAABpEAAAAAAAAAAAAABpEAAAAAAAAGoQAAAAAAAAAAAAAGoQAAAAAAAAdhAAAAAAAAAAAAAAXRAAAAAAAABdEAAAAAAAAAwAAAAgICAgICAgICAgICBdEAAAAAAAAG0QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1854,
					1,
					"insert",
					{
						"characters": "notations"
					},
					"CQAAAG0QAAAAAAAAbhAAAAAAAAAAAAAAbhAAAAAAAABvEAAAAAAAAAAAAABvEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAcRAAAAAAAAAAAAAAcRAAAAAAAAByEAAAAAAAAAAAAAByEAAAAAAAAHMQAAAAAAAAAAAAAHMQAAAAAAAAdBAAAAAAAAAAAAAAdBAAAAAAAAB1EAAAAAAAAAAAAAB1EAAAAAAAAHYQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0QAAAAAAAAbRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1855,
					1,
					"insert",
					{
						"characters": ".ma"
					},
					"AwAAAHYQAAAAAAAAdxAAAAAAAAAAAAAAdxAAAAAAAAB4EAAAAAAAAAAAAAB4EAAAAAAAAHkQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYQAAAAAAAAdhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1856,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAHkQAAAAAAAAehAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkQAAAAAAAAeRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1857,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHoQAAAAAAAAfBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoQAAAAAAAAehAAAAAAAAAAAAAAAADwvw"
				],
				[
					1860,
					1,
					"insert",
					{
						"characters": ".in"
					},
					"AwAAAHYQAAAAAAAAdxAAAAAAAAAAAAAAdxAAAAAAAAB4EAAAAAAAAAAAAAB4EAAAAAAAAHkQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYQAAAAAAAAdhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1861,
					1,
					"left_delete",
					null,
					"AQAAAHgQAAAAAAAAeBAAAAAAAAABAAAAbg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkQAAAAAAAAeRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1862,
					1,
					"insert",
					{
						"characters": "te"
					},
					"AgAAAHgQAAAAAAAAeRAAAAAAAAAAAAAAeRAAAAAAAAB6EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1863,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(&self) -> Iter<T>\"},\"preselect\":true,\"kind\":2,\"documentation\":{\"value\":\"Returns an iterator over the slice.\\n\\nThe iterator yields all items from start to end.\\n\\n# Examples\\n\\n```rust\\nlet x = &[1, 2, 4];\\nlet mut iterator = x.iter();\\n\\nassert_eq!(iterator.next(), Some(&1));\\nassert_eq!(iterator.next(), Some(&2));\\nassert_eq!(iterator.next(), Some(&4));\\nassert_eq!(iterator.next(), None);\\n```\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":123,\"character\":26},\"end\":{\"line\":123,\"character\":29}},\"newText\":\"iter()$0\",\"replace\":{\"start\":{\"line\":123,\"character\":26},\"end\":{\"line\":123,\"character\":29}}},\"filterText\":\"iter\",\"deprecated\":false,\"detail\":\"fn(&self) -> Iter<T>\",\"label\":\"iter()\",\"sortText\":\"ffffffec\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1388,
							1862,
							2
						],
						"trigger": "iter()"
					},
					"AgAAAHcQAAAAAAAAdxAAAAAAAAADAAAAaXRldxAAAAAAAAB9EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoQAAAAAAAAehAAAAAAAAAAAAAAAADwvw"
				],
				[
					1866,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAAIIQAAAAAAAAgxAAAAAAAAAAAAAAgxAAAAAAAACEEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIQAAAAAAAAghAAAAAAAAAAAAAAAADwvw"
				],
				[
					1868,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAIMQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACFEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMQAAAAAAAAgxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1871,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIcQAAAAAAAAiBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcQAAAAAAAAhxAAAAAAAAD////////vfw"
				],
				[
					1879,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAFgQAAAAAAAAWRAAAAAAAAAAAAAAWRAAAAAAAABaEAAAAAAAAAAAAABaEAAAAAAAAFsQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1880,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFsQAAAAAAAAXBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsQAAAAAAAAWxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1884,
					1,
					"insert",
					{
						"characters": "tk.r"
					},
					"BAAAAIoQAAAAAAAAixAAAAAAAAAAAAAAixAAAAAAAACMEAAAAAAAAAAAAACMEAAAAAAAAI0QAAAAAAAAAAAAAI0QAAAAAAAAjhAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoQAAAAAAAAihAAAAAAAAAAAAAAAADwvw"
				],
				[
					1885,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAI4QAAAAAAAAjxAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4QAAAAAAAAjhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1886,
					2,
					"left_delete",
					null,
					"AgAAAI4QAAAAAAAAjhAAAAAAAAABAAAAZY0QAAAAAAAAjRAAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8QAAAAAAAAjxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1887,
					1,
					"insert",
					{
						"characters": "su"
					},
					"AgAAAI0QAAAAAAAAjhAAAAAAAAAAAAAAjhAAAAAAAACPEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0QAAAAAAAAjRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1888,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAI8QAAAAAAAAkBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8QAAAAAAAAjxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1890,
					1,
					"left_delete",
					null,
					"AQAAAI0QAAAAAAAAjRAAAAAAAAADAAAAc3Vi",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAQAAAAAAAAjRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1891,
					1,
					"insert",
					{
						"characters": "rep"
					},
					"AwAAAI0QAAAAAAAAjhAAAAAAAAAAAAAAjhAAAAAAAACPEAAAAAAAAAAAAACPEAAAAAAAAJAQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0QAAAAAAAAjRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1894,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(&self, P, &str) -> String\"},\"preselect\":true,\"kind\":2,\"documentation\":{\"value\":\"Replaces all matches of a pattern with another string.\\n\\n`replace` creates a new [`String`], and copies the data from this string slice into it.\\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\\nreplaces them with the replacement string slice.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet s = \\\"this is old\\\";\\n\\nassert_eq!(\\\"this is new\\\", s.replace(\\\"old\\\", \\\"new\\\"));\\nassert_eq!(\\\"than an old\\\", s.replace(\\\"is\\\", \\\"an\\\"));\\n```\\n\\nWhen the pattern doesn't match:\\n\\n```rust\\nlet s = \\\"this is old\\\";\\nassert_eq!(s, s.replace(\\\"cookie monster\\\", \\\"little lamb\\\"));\\n```\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":123,\"character\":44},\"end\":{\"line\":123,\"character\":47}},\"newText\":\"replace(${1:from}, ${2:to})$0\",\"replace\":{\"start\":{\"line\":123,\"character\":44},\"end\":{\"line\":123,\"character\":47}}},\"filterText\":\"replace\",\"deprecated\":false,\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"fn(&self, P, &str) -> String\",\"label\":\"replace(…)\",\"sortText\":\"ffffffec\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1417,
							1891,
							3
						],
						"trigger": "replace(…)"
					},
					"AgAAAI0QAAAAAAAAjRAAAAAAAAADAAAAcmVwjRAAAAAAAACeEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1896,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AwAAAJUQAAAAAAAAlhAAAAAAAAAAAAAAlhAAAAAAAACWEAAAAAAAAAQAAABmcm9tlhAAAAAAAACXEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUQAAAAAAAAmRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1897,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"&NotationType\"},\"deprecated\":false,\"kind\":6,\"preselect\":true,\"detail\":\"&NotationType\",\"sortText\":\"ffffffe6\",\"additionalTextEdits\":[],\"label\":\"nt\",\"filterText\":\"nt\",\"textEdit\":{\"insert\":{\"start\":{\"line\":123,\"character\":52},\"end\":{\"line\":123,\"character\":54}},\"newText\":\"nt\",\"replace\":{\"start\":{\"line\":123,\"character\":52},\"end\":{\"line\":123,\"character\":54}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1419,
							1896,
							3
						],
						"trigger": "nt"
					},
					"AgAAAJUQAAAAAAAAlRAAAAAAAAACAAAAbnSVEAAAAAAAAJcQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcQAAAAAAAAlxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1899,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAJkQAAAAAAAAmRAAAAAAAAACAAAAdG+ZEAAAAAAAAJ0QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkQAAAAAAAAmxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1900,
					1,
					"left_delete",
					null,
					"AQAAAJoQAAAAAAAAmhAAAAAAAAACAAAAdG8",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoQAAAAAAAAnBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1903,
					1,
					"insert",
					{
						"characters": ".couy"
					},
					"BQAAAJ0QAAAAAAAAnhAAAAAAAAAAAAAAnhAAAAAAAACfEAAAAAAAAAAAAACfEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAAoRAAAAAAAAAAAAAAoRAAAAAAAACiEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0QAAAAAAAAnRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1904,
					1,
					"left_delete",
					null,
					"AQAAAKEQAAAAAAAAoRAAAAAAAAABAAAAeQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIQAAAAAAAAohAAAAAAAAAAAAAAAADwvw"
				],
				[
					1905,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAKEQAAAAAAAAohAAAAAAAAAAAAAAohAAAAAAAACjEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEQAAAAAAAAoRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1906,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMQAAAAAAAApRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMQAAAAAAAAoxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1910,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALUQAAAAAAAAthAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUQAAAAAAAAtRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1911,
					1,
					"insert",
					{
						"characters": "coll"
					},
					"BAAAALYQAAAAAAAAtxAAAAAAAAAAAAAAtxAAAAAAAAC4EAAAAAAAAAAAAAC4EAAAAAAAALkQAAAAAAAAAAAAALkQAAAAAAAAuhAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYQAAAAAAAAthAAAAAAAAAAAAAAAADwvw"
				],
				[
					1912,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(self) -> B\"},\"preselect\":true,\"kind\":2,\"documentation\":{\"value\":\"Transforms an iterator into a collection.\\n\\n`collect()` can take anything iterable, and turn it into a relevant\\ncollection. This is one of the more powerful methods in the standard\\nlibrary, used in a variety of contexts.\\n\\nThe most basic pattern in which `collect()` is used is to turn one\\ncollection into another. You take a collection, call [`iter`] on it,\\ndo a bunch of transformations, and then `collect()` at the end.\\n\\n`collect()` can also create instances of types that are not typical\\ncollections. For example, a [`String`] can be built from [`char`]s,\\nand an iterator of [`Result<T, E>`][`Result`] items can be collected\\ninto `Result<Collection<T>, E>`. See the examples below for more.\\n\\nBecause `collect()` is so general, it can cause problems with type\\ninference. As such, `collect()` is one of the few times you'll see\\nthe syntax affectionately known as the 'turbofish': `::<>`. This\\nhelps the inference algorithm understand specifically which collection\\nyou're trying to collect into.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled: Vec<i32> = a.iter()\\n                         .map(|&x| x * 2)\\n                         .collect();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nNote that we needed the `: Vec<i32>` on the left-hand side. This is because\\nwe could collect into, for example, a [`VecDeque<T>`] instead:\\n\\n[`VecDeque<T>`]: ../../std/collections/struct.VecDeque.html\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet a = [1, 2, 3];\\n\\nlet doubled: VecDeque<i32> = a.iter().map(|&x| x * 2).collect();\\n\\nassert_eq!(2, doubled[0]);\\nassert_eq!(4, doubled[1]);\\nassert_eq!(6, doubled[2]);\\n```\\n\\nUsing the 'turbofish' instead of annotating `doubled`:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<i32>>();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nBecause `collect()` only cares about what you're collecting into, you can\\nstill use a partial type hint, `_`, with the turbofish:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<_>>();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nUsing `collect()` to make a [`String`]:\\n\\n```rust\\nlet chars = ['g', 'd', 'k', 'k', 'n'];\\n\\nlet hello: String = chars.iter()\\n    .map(|&x| x as u8)\\n    .map(|x| (x + 1) as char)\\n    .collect();\\n\\nassert_eq!(\\\"hello\\\", hello);\\n```\\n\\nIf you have a list of [`Result<T, E>`][`Result`]s, you can use `collect()` to\\nsee if any of them failed:\\n\\n```rust\\nlet results = [Ok(1), Err(\\\"nope\\\"), Ok(3), Err(\\\"bad\\\")];\\n\\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\\n\\n// gives us the first error\\nassert_eq!(Err(\\\"nope\\\"), result);\\n\\nlet results = [Ok(1), Ok(3)];\\n\\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\\n\\n// gives us the list of answers\\nassert_eq!(Ok(vec![1, 3]), result);\\n```\\n\\n[`iter`]: Iterator::next\\n[`String`]: ../../std/string/struct.String.html\\n[`char`]: type@char\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":124,\"character\":15},\"end\":{\"line\":124,\"character\":19}},\"newText\":\"collect()$0\",\"replace\":{\"start\":{\"line\":124,\"character\":15},\"end\":{\"line\":124,\"character\":19}}},\"filterText\":\"collect\",\"deprecated\":false,\"detail\":\"fn(self) -> B\",\"label\":\"collect() (as Iterator)\",\"sortText\":\"ffffffec\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1434,
							1911,
							4
						],
						"trigger": "collect() (as Iterator)"
					},
					"AgAAALYQAAAAAAAAthAAAAAAAAAEAAAAY29sbLYQAAAAAAAAvxAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoQAAAAAAAAuhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1917,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALUQAAAAAAAAthAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUQAAAAAAAAtRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1918,
					1,
					"left_delete",
					null,
					"AQAAALUQAAAAAAAAtRAAAAAAAAABAAAAOg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYQAAAAAAAAthAAAAAAAAAAAAAAAADwvw"
				],
				[
					1920,
					1,
					"insert",
					{
						"characters": "::Vec<_>"
					},
					"CAAAAL0QAAAAAAAAvhAAAAAAAAAAAAAAvhAAAAAAAAC/EAAAAAAAAAAAAAC/EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAwRAAAAAAAAAAAAAAwRAAAAAAAADCEAAAAAAAAAAAAADCEAAAAAAAAMMQAAAAAAAAAAAAAMMQAAAAAAAAxBAAAAAAAAAAAAAAxBAAAAAAAADFEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0QAAAAAAAAvRAAAAAAAAAAAAAAAADwvw"
				],
				[
					1927,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMgQAAAAAAAAyRAAAAAAAAAAAAAAyRAAAAAAAADVEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAADwvw"
				],
				[
					1928,
					1,
					"insert",
					{
						"characters": "msg.sase"
					},
					"CAAAANUQAAAAAAAA1hAAAAAAAAAAAAAA1hAAAAAAAADXEAAAAAAAAAAAAADXEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA2RAAAAAAAAAAAAAA2RAAAAAAAADaEAAAAAAAAAAAAADaEAAAAAAAANsQAAAAAAAAAAAAANsQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADdEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUQAAAAAAAA1RAAAAAAAAAAAAAAAADwvw"
				],
				[
					1929,
					3,
					"left_delete",
					null,
					"AwAAANwQAAAAAAAA3BAAAAAAAAABAAAAZdsQAAAAAAAA2xAAAAAAAAABAAAAc9oQAAAAAAAA2hAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0QAAAAAAAA3RAAAAAAAAAAAAAAAADwvw"
				],
				[
					1930,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAANoQAAAAAAAA2xAAAAAAAAAAAAAA2xAAAAAAAADcEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoQAAAAAAAA2hAAAAAAAAAAAAAAAADwvw"
				],
				[
					1931,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(&mut self, Notation)\"},\"deprecated\":false,\"kind\":2,\"detail\":\"fn(&mut self, Notation)\",\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"set_notation(…)\",\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"insertTextFormat\":2,\"filterText\":\"set_notation\",\"textEdit\":{\"insert\":{\"start\":{\"line\":125,\"character\":16},\"end\":{\"line\":125,\"character\":19}},\"newText\":\"set_notation(${1:notation})$0\",\"replace\":{\"start\":{\"line\":125,\"character\":16},\"end\":{\"line\":125,\"character\":19}}}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1450,
							1930,
							2
						],
						"trigger": "set_notation(…)"
					},
					"AgAAANkQAAAAAAAA2RAAAAAAAAADAAAAc2V02RAAAAAAAADvEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAADwvw"
				],
				[
					1933,
					1,
					"insert",
					{
						"characters": "MNo"
					},
					"BAAAAOYQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADnEAAAAAAAAAgAAABub3RhdGlvbucQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADpEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYQAAAAAAAA7hAAAAAAAAAAAAAAAADwvw"
				],
				[
					1936,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"MNotation::Note { channel: u8, note: u8, tokens: Vec<String, Global> }\"},\"deprecated\":false,\"kind\":20,\"textEdit\":{\"insert\":{\"start\":{\"line\":125,\"character\":29},\"end\":{\"line\":125,\"character\":32}},\"newText\":\"MNotation::Note { channel: ${1:()}, note: ${2:()}, tokens: ${3:()} }$0\",\"replace\":{\"start\":{\"line\":125,\"character\":29},\"end\":{\"line\":125,\"character\":32}}},\"detail\":\"MNotation::Note { channel: u8, note: u8, tokens: Vec<String, Global> }\",\"sortText\":\"ffffffec\",\"additionalTextEdits\":[],\"label\":\"MNotation::Note {…}\",\"insertTextFormat\":2,\"filterText\":\"MNotation::Note{}\",\"documentation\":{\"value\":\"Note notation: channel(1-based), note, tokens\",\"kind\":\"markdown\"}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1452,
							1933,
							4
						],
						"trigger": "MNotation::Note{}"
					},
					"AgAAAOYQAAAAAAAA5hAAAAAAAAADAAAATU5v5hAAAAAAAAAbEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkQAAAAAAAA6RAAAAAAAAAAAAAAAADwvw"
				],
				[
					1939,
					3,
					"left_delete",
					null,
					"AwAAAAERAAAAAAAAAREAAAAAAAACAAAAKCkAEQAAAAAAAAARAAAAAAAAAQAAACD/EAAAAAAAAP8QAAAAAAAAAQAAADo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAERAAAAAAAAAxEAAAAAAAAAAAAAAADwvw"
				],
				[
					1941,
					3,
					"left_delete",
					null,
					"AwAAAAcRAAAAAAAABxEAAAAAAAACAAAAKCkGEQAAAAAAAAYRAAAAAAAAAQAAACAFEQAAAAAAAAURAAAAAAAAAQAAADo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcRAAAAAAAACREAAAAAAAAAAAAAAADwvw"
				],
				[
					1943,
					3,
					"left_delete",
					null,
					"AwAAAA8RAAAAAAAADxEAAAAAAAACAAAAKCkOEQAAAAAAAA4RAAAAAAAAAQAAACANEQAAAAAAAA0RAAAAAAAAAQAAADo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8RAAAAAAAAEREAAAAAAAAAAAAAAADwvw"
				],
				[
					1947,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABoRAAAAAAAAGxEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoRAAAAAAAAGhEAAAAAAAD////////vfw"
				],
				[
					1948,
					1,
					"insert",
					{
						"characters": "\nx"
					},
					"AwAAABsRAAAAAAAAHBEAAAAAAAAAAAAAHBEAAAAAAAAkEQAAAAAAAAAAAAAkEQAAAAAAACURAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsRAAAAAAAAGxEAAAAAAAAAAAAAAADwvw"
				],
				[
					1949,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACURAAAAAAAAJhEAAAAAAAAAAAAAJhEAAAAAAAAnEQAAAAAAAAAAAAAnEQAAAAAAACgRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACURAAAAAAAAJREAAAAAAAAAAAAAAADwvw"
				],
				[
					1950,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgRAAAAAAAAKREAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgRAAAAAAAAKBEAAAAAAAAAAAAAAADwvw"
				],
				[
					1955,
					1,
					"insert",
					{
						"characters": "uni"
					},
					"AwAAACkRAAAAAAAAKhEAAAAAAAAAAAAAKhEAAAAAAAArEQAAAAAAAAAAAAArEQAAAAAAACwRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkRAAAAAAAAKREAAAAAAAAAAAAAAADwvw"
				],
				[
					1956,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"macro_rules! unimplemented\"},\"deprecated\":false,\"kind\":3,\"textEdit\":{\"insert\":{\"start\":{\"line\":127,\"character\":13},\"end\":{\"line\":127,\"character\":16}},\"newText\":\"unimplemented!($0)\",\"replace\":{\"start\":{\"line\":127,\"character\":13},\"end\":{\"line\":127,\"character\":16}}},\"detail\":\"macro_rules! unimplemented\",\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"unimplemented!(…)\",\"insertTextFormat\":2,\"filterText\":\"unimplemented!\",\"documentation\":{\"value\":\"Indicates unimplemented code by panicking with a message of \\\"not implemented\\\".\\n\\nThis allows your code to type-check, which is useful if you are prototyping or\\nimplementing a trait that requires multiple methods which you don't plan to use all of.\\n\\nThe difference between `unimplemented!` and [`todo!`] is that while `todo!`\\nconveys an intent of implementing the functionality later and the message is \\\"not yet\\nimplemented\\\", `unimplemented!` makes no such claims. Its message is \\\"not implemented\\\".\\nAlso some IDEs will mark `todo!`s.\\n\\n# Panics\\n\\nThis will always [`panic!`] because `unimplemented!` is just a shorthand for `panic!` with a\\nfixed, specific message.\\n\\nLike `panic!`, this macro has a second form for displaying custom values.\\n\\n[`todo!`]: crate::todo\\n\\n# Examples\\n\\nSay we have a trait `Foo`:\\n\\n```rust\\ntrait Foo {\\n    fn bar(&self) -> u8;\\n    fn baz(&self);\\n    fn qux(&self) -> Result<u64, ()>;\\n}\\n```\\n\\nWe want to implement `Foo` for 'MyStruct', but for some reason it only makes sense\\nto implement the `bar()` function. `baz()` and `qux()` will still need to be defined\\nin our implementation of `Foo`, but we can use `unimplemented!` in their definitions\\nto allow our code to compile.\\n\\nWe still want to have our program stop running if the unimplemented methods are\\nreached.\\n\\n```rust\\nstruct MyStruct;\\n\\nimpl Foo for MyStruct {\\n    fn bar(&self) -> u8 {\\n        1 + 1\\n    }\\n\\n    fn baz(&self) {\\n        // It makes no sense to `baz` a `MyStruct`, so we have no logic here\\n        // at all.\\n        // This will display \\\"thread 'main' panicked at 'not implemented'\\\".\\n        unimplemented!();\\n    }\\n\\n    fn qux(&self) -> Result<u64, ()> {\\n        // We have some logic here,\\n        // We can add a message to unimplemented! to display our omission.\\n        // This will display:\\n        // \\\"thread 'main' panicked at 'not implemented: MyStruct isn't quxable'\\\".\\n        unimplemented!(\\\"MyStruct isn't quxable\\\");\\n    }\\n}\\n\\nfn main() {\\n    let s = MyStruct;\\n    s.bar();\\n}\\n```\",\"kind\":\"markdown\"}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1470,
							1955,
							3
						],
						"trigger": "unimplemented!(…)"
					},
					"AgAAACkRAAAAAAAAKREAAAAAAAADAAAAdW5pKREAAAAAAAA5EQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwRAAAAAAAALBEAAAAAAAAAAAAAAADwvw"
				],
				[
					1959,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8RAAAAAAAAQBEAAAAAAAAAAAAAQBEAAAAAAABEEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8RAAAAAAAAPxEAAAAAAAD////////vfw"
				],
				[
					1960,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAAEQRAAAAAAAARREAAAAAAAAAAAAARREAAAAAAABGEQAAAAAAAAAAAABGEQAAAAAAAEcRAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQRAAAAAAAARBEAAAAAAAAAAAAAAADwvw"
				],
				[
					1973,
					1,
					"insert",
					{
						"characters": ".to"
					},
					"AwAAAJcQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACZEAAAAAAAAAAAAACZEAAAAAAAAJoQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcQAAAAAAAAlxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1974,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(&self) -> String\"},\"preselect\":true,\"kind\":2,\"documentation\":{\"value\":\"Converts the given value to a `String`.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet i = 5;\\nlet five = String::from(\\\"5\\\");\\n\\nassert_eq!(five, i.to_string());\\n```\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":123,\"character\":55},\"end\":{\"line\":123,\"character\":57}},\"newText\":\"to_string()$0\",\"replace\":{\"start\":{\"line\":123,\"character\":55},\"end\":{\"line\":123,\"character\":57}}},\"filterText\":\"to_string\",\"deprecated\":false,\"detail\":\"fn(&self) -> String\",\"label\":\"to_string() (as ToString)\",\"sortText\":\"ffffffec\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1480,
							1973,
							3
						],
						"trigger": "to_string() (as ToString)"
					},
					"AgAAAJgQAAAAAAAAmBAAAAAAAAACAAAAdG+YEAAAAAAAAKMQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoQAAAAAAAAmhAAAAAAAAAAAAAAAADwvw"
				],
				[
					1981,
					1,
					"insert",
					{
						"characters": ".as_str("
					},
					"CAAAAKMQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAAClEAAAAAAAAAAAAAClEAAAAAAAAKYQAAAAAAAAAAAAAKYQAAAAAAAApxAAAAAAAAAAAAAApxAAAAAAAACoEAAAAAAAAAAAAACoEAAAAAAAAKkQAAAAAAAAAAAAAKkQAAAAAAAAqhAAAAAAAAAAAAAAqhAAAAAAAACrEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMQAAAAAAAAoxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1983,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKsQAAAAAAAArBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsQAAAAAAAAqxAAAAAAAAAAAAAAAADwvw"
				],
				[
					1994,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAANQQAAAAAAAA1RAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQQAAAAAAAA1BAAAAAAAAAAAAAAAADwvw"
				],
				[
					1997,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAANsQAAAAAAAA3BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsQAAAAAAAA2xAAAAAAAAAAAAAAAADwvw"
				],
				[
					1999,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									119,
									30
								],
								[
									119,
									30
								],
								"\n    ",
								null
							],
							[
								[
									119,
									55
								],
								[
									119,
									55
								],
								"\n   ",
								null
							],
							[
								[
									119,
									84
								],
								[
									119,
									84
								],
								",\n",
								null
							],
							[
								[
									119,
									104
								],
								[
									119,
									104
								],
								" ",
								null
							],
							[
								[
									120,
									24
								],
								[
									120,
									24
								],
								" ",
								null
							],
							[
								[
									121,
									25
								],
								[
									121,
									40
								],
								"\n            channel,\n            note,\n           ",
								null
							],
							[
								[
									121,
									51
								],
								[
									121,
									51
								],
								",\n       ",
								null
							],
							[
								[
									122,
									31
								],
								[
									122,
									43
								],
								"\n                .into_iter()\n                ",
								null
							],
							[
								[
									122,
									56
								],
								[
									122,
									56
								],
								" ",
								null
							],
							[
								[
									123,
									0
								],
								[
									123,
									0
								],
								"    ",
								null
							],
							[
								[
									123,
									25
								],
								[
									123,
									32
								],
								"\n                        .iter()\n                        ",
								null
							],
							[
								[
									123,
									41
								],
								[
									123,
									41
								],
								" ",
								null
							],
							[
								[
									123,
									81
								],
								[
									123,
									81
								],
								"\n                        ",
								null
							],
							[
								[
									124,
									0
								],
								[
									124,
									0
								],
								"    ",
								null
							],
							[
								[
									124,
									14
								],
								[
									124,
									14
								],
								"\n                ",
								null
							],
							[
								[
									125,
									46
								],
								[
									125,
									68
								],
								"\n                channel,\n                note,\n                tokens,\n           ",
								null
							],
							[
								[
									126,
									9
								],
								[
									126,
									10
								],
								"",
								null
							],
							[
								[
									127,
									29
								],
								[
									127,
									29
								],
								",",
								null
							]
						]
					},
					"EgAAAFARAAAAAAAAUREAAAAAAAAAAAAAMREAAAAAAAAxEQAAAAAAAAEAAAAsDhEAAAAAAABhEQAAAAAAABYAAAAgY2hhbm5lbCwgbm90ZSwgdG9rZW5zyhAAAAAAAADbEAAAAAAAAAAAAAC8EAAAAAAAAMAQAAAAAAAAAAAAALIQAAAAAAAAyxAAAAAAAAAAAAAAihAAAAAAAACLEAAAAAAAAAAAAAB6EAAAAAAAALMQAAAAAAAABwAAAC5pdGVyKClhEAAAAAAAAGUQAAAAAAAAAAAAAF8QAAAAAAAAYBAAAAAAAAAAAAAARhAAAAAAAAB0EAAAAAAAAAwAAAAuaW50b19pdGVyKCkfEAAAAAAAACgQAAAAAAAAAAAAAAUQAAAAAAAAOBAAAAAAAAAPAAAAIGNoYW5uZWwsIG5vdGUs6g8AAAAAAADrDwAAAAAAAAAAAADQDwAAAAAAANEPAAAAAAAAAAAAALwPAAAAAAAAvg8AAAAAAAAAAAAAnw8AAAAAAACjDwAAAAAAAAAAAACGDwAAAAAAAIsPAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAADwvw"
				],
				[
					2006,
					1,
					"insert",
					{
						"characters": "tk"
					},
					"AgAAAGgRAAAAAAAAaREAAAAAAAAAAAAAaREAAAAAAABqEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgRAAAAAAAAaBEAAAAAAAAAAAAAAADwvw"
				],
				[
					2008,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									135,
									33
								],
								[
									135,
									33
								],
								"\n                    ",
								null
							]
						]
					},
					"AQAAAGgRAAAAAAAAfREAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoRAAAAAAAAahEAAAAAAAAAAAAAAADwvw"
				],
				[
					2019,
					1,
					"left_delete",
					null,
					"AQAAAFASAAAAAAAAUBIAAAAAAAABAAAAeA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFESAAAAAAAAURIAAAAAAAAAAAAAAADwvw"
				],
				[
					2020,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAFASAAAAAAAAURIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFASAAAAAAAAUBIAAAAAAAAAAAAAAADwvw"
				],
				[
					2024,
					1,
					"right_delete",
					null,
					"AQAAAEYQAAAAAAAARhAAAAAAAAADAAAAbXV0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYQAAAAAAAASRAAAAAAAAAAAAAAAADwvw"
				],
				[
					2026,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									127,
									12
								],
								[
									127,
									13
								],
								"",
								null
							]
						]
					},
					"AQAAAEYQAAAAAAAARhAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYQAAAAAAAARhAAAAAAAAAAAAAAAADwvw"
				],
				[
					2047,
					1,
					"insert",
					{
						"characters": "tk"
					},
					"AgAAABoRAAAAAAAAGxEAAAAAAAAAAAAAGxEAAAAAAAAcEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoRAAAAAAAAGhEAAAAAAAAAAAAAAADwvw"
				],
				[
					2048,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABwRAAAAAAAAHREAAAAAAAAAAAAAHREAAAAAAAAeEQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwRAAAAAAAAHBEAAAAAAAAAAAAAAADwvw"
				],
				[
					2049,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB4RAAAAAAAAHxEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4RAAAAAAAAHhEAAAAAAAAAAAAAAADwvw"
				],
				[
					2064,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAPEmAAAAAAAA8iYAAAAAAAAAAAAA8iYAAAAAAAD2JgAAAAAAAAAAAAD2JgAAAAAAAPcmAAAAAAAAAAAAAPcmAAAAAAAA+CYAAAAAAAAAAAAA+CYAAAAAAAD5JgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEmAAAAAAAA8SYAAAAAAAAAAAAAAABsQA"
				],
				[
					2065,
					1,
					"insert",
					{
						"characters": " msg1"
					},
					"BQAAAPkmAAAAAAAA+iYAAAAAAAAAAAAA+iYAAAAAAAD7JgAAAAAAAAAAAAD7JgAAAAAAAPwmAAAAAAAAAAAAAPwmAAAAAAAA/SYAAAAAAAAAAAAA/SYAAAAAAAD+JgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkmAAAAAAAA+SYAAAAAAAAAAAAAAADwvw"
				],
				[
					2066,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAP4mAAAAAAAA/yYAAAAAAAAAAAAA/yYAAAAAAAAAJwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4mAAAAAAAA/iYAAAAAAAAAAAAAAADwvw"
				],
				[
					2067,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAAnAAAAAAAAAScAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAnAAAAAAAAACcAAAAAAAAAAAAAAADwvw"
				],
				[
					2068,
					1,
					"insert",
					{
						"characters": "repla"
					},
					"BQAAAAEnAAAAAAAAAicAAAAAAAAAAAAAAicAAAAAAAADJwAAAAAAAAAAAAADJwAAAAAAAAQnAAAAAAAAAAAAAAQnAAAAAAAABScAAAAAAAAAAAAABScAAAAAAAAGJwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEnAAAAAAAAAScAAAAAAAAAAAAAAADwvw"
				],
				[
					2069,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"fn(NotationMessage, Vec<NotationType, Global>) -> Result<NotationMessage, NotationError>\"},\"kind\":3,\"documentation\":{\"value\":\"Update message notations to hold the given.\\n\\nIf no single rescore notation present, or even no reascore section in\\nmessage tokens — they will be added. Otherwise, particular token will be\\nreplaced by actual. Nothing will be removed.\",\"kind\":\"markdown\"},\"additionalTextEdits\":[],\"insertTextFormat\":2,\"textEdit\":{\"insert\":{\"start\":{\"line\":337,\"character\":15},\"end\":{\"line\":337,\"character\":20}},\"newText\":\"replace_given_notations(${1:msg}, ${2:notations})$0\",\"replace\":{\"start\":{\"line\":337,\"character\":15},\"end\":{\"line\":337,\"character\":20}}},\"filterText\":\"replace_given_notations\",\"deprecated\":false,\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"detail\":\"fn(NotationMessage, Vec<NotationType, Global>) -> Result<NotationMessage, NotationError>\",\"label\":\"replace_given_notations(…)\",\"sortText\":\"ffffffec\"},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1539,
							2068,
							5
						],
						"trigger": "replace_given_notations(…)"
					},
					"AgAAAAEnAAAAAAAAAScAAAAAAAAFAAAAcmVwbGEBJwAAAAAAACgnAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYnAAAAAAAABicAAAAAAAAAAAAAAADwvw"
				],
				[
					2079,
					1,
					"paste",
					null,
					"AgAAAB4nAAAAAAAAnCcAAAAAAAAAAAAAnCcAAAAAAACcJwAAAAAAAAkAAABub3RhdGlvbnM",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4nAAAAAAAAJycAAAAAAAAAAAAAAADwvw"
				],
				[
					2080,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAJwnAAAAAAAAnScAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwnAAAAAAAAnCcAAAAAAAAAAAAAAADwvw"
				],
				[
					2083,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ4nAAAAAAAAnycAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4nAAAAAAAAnicAAAAAAAD////////vfw"
				],
				[
					2085,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									337,
									39
								],
								[
									337,
									49
								],
								"\n        msg,",
								null
							],
							[
								[
									338,
									8
								],
								[
									338,
									12
								],
								"vec![",
								null
							],
							[
								[
									339,
									0
								],
								[
									339,
									4
								],
								"",
								null
							],
							[
								[
									339,
									49
								],
								[
									339,
									49
								],
								",",
								null
							],
							[
								[
									340,
									8
								],
								[
									340,
									8
								],
								"))],\n",
								null
							],
							[
								[
									340,
									12
								],
								[
									340,
									15
								],
								"",
								null
							]
						]
					},
					"BgAAAJonAAAAAAAAmicAAAAAAAADAAAAKSldlicAAAAAAACbJwAAAAAAAAAAAACNJwAAAAAAAI4nAAAAAAAAAAAAAFwnAAAAAAAAXCcAAAAAAAAEAAAAICAgICwnAAAAAAAAMScAAAAAAAAEAAAAICAgIBknAAAAAAAAJicAAAAAAAAKAAAAbXNnLCB2ZWMhWw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8nAAAAAAAAnycAAAAAAAAAAAAAAADwvw"
				],
				[
					2086,
					1,
					"insert",
					{
						"characters": "\nasse"
					},
					"BgAAAKInAAAAAAAAoycAAAAAAAAAAAAAoycAAAAAAACnJwAAAAAAAAAAAACnJwAAAAAAAKgnAAAAAAAAAAAAAKgnAAAAAAAAqScAAAAAAAAAAAAAqScAAAAAAACqJwAAAAAAAAAAAACqJwAAAAAAAKsnAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKInAAAAAAAAoicAAAAAAAAAAAAAAADwvw"
				],
				[
					2090,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"item\":{\"labelDetails\":{\"description\":\"macro_rules! assert_eq\"},\"deprecated\":false,\"kind\":3,\"textEdit\":{\"insert\":{\"start\":{\"line\":343,\"character\":4},\"end\":{\"line\":343,\"character\":8}},\"newText\":\"assert_eq!($0)\",\"replace\":{\"start\":{\"line\":343,\"character\":4},\"end\":{\"line\":343,\"character\":8}}},\"detail\":\"macro_rules! assert_eq\",\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"label\":\"assert_eq!(…)\",\"insertTextFormat\":2,\"filterText\":\"assert_eq!\",\"documentation\":{\"value\":\"Asserts that two expressions are equal to each other (using [`PartialEq`]).\\n\\nOn panic, this macro will print the values of the expressions with their\\ndebug representations.\\n\\nLike [`assert!`], this macro has a second form, where a custom\\npanic message can be provided.\\n\\n# Examples\\n\\n```rust\\nlet a = 3;\\nlet b = 1 + 2;\\nassert_eq!(a, b);\\n\\nassert_eq!(a, b, \\\"we are testing addition with {} and {}\\\", a, b);\\n```\",\"kind\":\"markdown\"}},\"session_name\":\"rust-analyzer\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1552,
							2086,
							6
						],
						"trigger": "assert_eq!(…)"
					},
					"AgAAAKcnAAAAAAAApycAAAAAAAAEAAAAYXNzZacnAAAAAAAAsycAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsnAAAAAAAAqycAAAAAAAAAAAAAAADwvw"
				],
				[
					2091,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAALInAAAAAAAAsycAAAAAAAAAAAAAsycAAAAAAAC0JwAAAAAAAAAAAAC0JwAAAAAAALUnAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALInAAAAAAAAsicAAAAAAAAAAAAAAADwvw"
				],
				[
					2092,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUnAAAAAAAAticAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUnAAAAAAAAtScAAAAAAAAAAAAAAADwvw"
				],
				[
					2093,
					1,
					"left_delete",
					null,
					"AQAAALUnAAAAAAAAtScAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYnAAAAAAAAticAAAAAAAAAAAAAAADwvw"
				],
				[
					2094,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAALUnAAAAAAAAticAAAAAAAAAAAAAticAAAAAAAC3JwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUnAAAAAAAAtScAAAAAAAAAAAAAAADwvw"
				],
				[
					2095,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcnAAAAAAAAuCcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcnAAAAAAAAtycAAAAAAAAAAAAAAADwvw"
				],
				[
					2112,
					1,
					"paste",
					null,
					"AgAAALInAAAAAAAA1ScAAAAAAAAAAAAA1ScAAAAAAADVJwAAAAAAAAQAAABtc2cx",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALInAAAAAAAAticAAAAAAAAAAAAAAADwvw"
				],
				[
					2113,
					1,
					"left_delete",
					null,
					"AQAAANQnAAAAAAAA1CcAAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUnAAAAAAAA1ScAAAAAAAAAAAAAAADwvw"
				],
				[
					2124,
					1,
					"insert",
					{
						"characters": "vec!"
					},
					"BAAAANYnAAAAAAAA1ycAAAAAAAAAAAAA1ycAAAAAAADYJwAAAAAAAAAAAADYJwAAAAAAANknAAAAAAAAAAAAANknAAAAAAAA2icAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYnAAAAAAAA1icAAAAAAAAAAAAAAADwvw"
				],
				[
					2125,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAANonAAAAAAAA3CcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANonAAAAAAAA2icAAAAAAAAAAAAAAADwvw"
				],
				[
					2126,
					1,
					"paste",
					null,
					"AQAAANsnAAAAAAAAHCgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsnAAAAAAAA2ycAAAAAAAAAAAAAAADwvw"
				],
				[
					2129,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB4oAAAAAAAAHygAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4oAAAAAAAAHigAAAAAAAD////////vfw"
				],
				[
					2131,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									343,
									15
								],
								[
									343,
									15
								],
								"\n        ",
								null
							],
							[
								[
									343,
									50
								],
								[
									343,
									50
								],
								"\n       ",
								null
							],
							[
								[
									343,
									101
								],
								[
									343,
									101
								],
								"\n            ",
								null
							],
							[
								[
									343,
									119
								],
								[
									343,
									122
								],
								"\n        ))]\n    ",
								null
							]
						]
					},
					"BAAAABooAAAAAAAAKygAAAAAAAADAAAAKSldCCgAAAAAAAAVKAAAAAAAAAAAAADVJwAAAAAAAN0nAAAAAAAAAAAAALInAAAAAAAAuycAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8oAAAAAAAAHygAAAAAAAAAAAAAAADwvw"
				],
				[
					2136,
					1,
					"insert",
					{
						"characters": "remove"
					},
					"BwAAAAEnAAAAAAAAAicAAAAAAAAAAAAAAicAAAAAAAACJwAAAAAAAAcAAAByZXBsYWNlAicAAAAAAAADJwAAAAAAAAAAAAADJwAAAAAAAAQnAAAAAAAAAAAAAAQnAAAAAAAABScAAAAAAAAAAAAABScAAAAAAAAGJwAAAAAAAAAAAAAGJwAAAAAAAAcnAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgnAAAAAAAAAScAAAAAAAAAAAAAAADwvw"
				],
				[
					2153,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									119,
									7
								],
								[
									119,
									29
								],
								"rename_given_notations",
								2528
							]
						]
					},
					"AQAAAG8PAAAAAAAAhQ8AAAAAAAAWAAAAZGVsZXRlX2dpdmVuX25vdGF0aW9ucw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8PAAAAAAAAbw8AAAAAAAAAAAAAAADwvw"
				],
				[
					2164,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									119,
									7
								],
								[
									119,
									29
								],
								"remove_given_notations",
								2529
							]
						]
					},
					"AQAAAG8PAAAAAAAAhQ8AAAAAAAAWAAAAcmVuYW1lX2dpdmVuX25vdGF0aW9ucw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEPAAAAAAAAcQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					2176,
					1,
					"insert",
					{
						"characters": "Cross"
					},
					"BgAAAIUnAAAAAAAAhicAAAAAAAAAAAAAhicAAAAAAACGJwAAAAAAAAcAAABCYXJvcXVlhicAAAAAAACHJwAAAAAAAAAAAACHJwAAAAAAAIgnAAAAAAAAAAAAAIgnAAAAAAAAiScAAAAAAAAAAAAAiScAAAAAAACKJwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUnAAAAAAAAjCcAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcEAAAAAAAASAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHBAAAAAAAAEcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADRBAAAAAAAAAAAAADRBAAAAAAAANIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBAAAAAAAAM8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "stru"
					},
					"BAAAANEEAAAAAAAA0gQAAAAAAAAAAAAA0gQAAAAAAADTBAAAAAAAAAAAAADTBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA1QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRBAAAAAAAANEEAAAAAAAAAAAAAAAAAAA"
				],
				[
					8,
					4,
					"left_delete",
					null,
					"BAAAANQEAAAAAAAA1AQAAAAAAAABAAAAddMEAAAAAAAA0wQAAAAAAAABAAAActIEAAAAAAAA0gQAAAAAAAABAAAAdNEEAAAAAAAA0QQAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVBAAAAAAAANUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAANEEAAAAAAAA0gQAAAAAAAAAAAAA0gQAAAAAAADTBAAAAAAAAAAAAADTBAAAAAAAANQEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRBAAAAAAAANEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " struv"
					},
					"BgAAANQEAAAAAAAA1QQAAAAAAAAAAAAA1QQAAAAAAADWBAAAAAAAAAAAAADWBAAAAAAAANcEAAAAAAAAAAAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAADZBAAAAAAAANoEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUBAAAAAAAANQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAANkEAAAAAAAA2QQAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaBAAAAAAAANoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAANkEAAAAAAAA2gQAAAAAAAAAAAAA2gQAAAAAAADbBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZBAAAAAAAANkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsEAAAAAAAA3AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBAAAAAAAANsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "Midi"
					},
					"BAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAADeBAAAAAAAAN8EAAAAAAAAAAAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBAAAAAAAANwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					4,
					"left_delete",
					null,
					"BAAAAN8EAAAAAAAA3wQAAAAAAAABAAAAad4EAAAAAAAA3gQAAAAAAAABAAAAZN0EAAAAAAAA3QQAAAAAAAABAAAAadwEAAAAAAAA3AQAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgBAAAAAAAAOAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "Notation"
					},
					"CAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAADeBAAAAAAAAN8EAAAAAAAAAAAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADhBAAAAAAAAAAAAADhBAAAAAAAAOIEAAAAAAAAAAAAAOIEAAAAAAAA4wQAAAAAAAAAAAAA4wQAAAAAAADkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBAAAAAAAANwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAOQEAAAAAAAA5QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkBAAAAAAAAOQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAOQEAAAAAAAA5AQAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlBAAAAAAAAOUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAANwEAAAAAAAA3AQAAAAAAAAIAAAATm90YXRpb24",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkBAAAAAAAANwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "MIDI"
					},
					"BAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAADeBAAAAAAAAN8EAAAAAAAAAAAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBAAAAAAAANwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					3,
					"left_delete",
					null,
					"AwAAAN8EAAAAAAAA3wQAAAAAAAABAAAASd4EAAAAAAAA3gQAAAAAAAABAAAARN0EAAAAAAAA3QQAAAAAAAABAAAASQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgBAAAAAAAAOAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdBAAAAAAAAN0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					3,
					"left_delete",
					null,
					"AwAAAN4EAAAAAAAA3gQAAAAAAAABAAAAZN0EAAAAAAAA3QQAAAAAAAABAAAAadwEAAAAAAAA3AQAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfBAAAAAAAAN8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					3,
					"left_delete",
					null,
					"AwAAANEEAAAAAAAA0QQAAAAAAAALAAAAcHViIHN0cnVjdCDQBAAAAAAAANAEAAAAAAAAAQAAAArPBAAAAAAAAM8EAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBAAAAAAAANEEAAAAAAAAAAAAAAAAAAA"
				],
				[
					30,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									40,
									0
								],
								[
									41,
									0
								],
								"",
								null
							]
						]
					},
					"AQAAANAEAAAAAAAA0AQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBAAAAAAAAM8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAA////////738"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAN0AAAAAAAAA9AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAN0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "message"
					},
					"CAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADmAAAAAAAAAA4AAABub3RlX25vdGF0aW9uc+YAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAAAAAAAAAOUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					2,
					"swap_line_up",
					null,
					"BAAAAN0AAAAAAAAA3QAAAAAAAAARAAAAcHViIG1vZCBtZXNzYWdlOwrFAAAAAAAAANYAAAAAAAAAAAAAAMUAAAAAAAAAxQAAAAAAAAARAAAAcHViIG1vZCBtZXNzYWdlOwqsAAAAAAAAAL0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAA////////738"
				],
				[
					50,
					1,
					"cut",
					null,
					"AQAAAOEEAAAAAAAA4QQAAAAAAABMFQAALy8vIEdldCByZWFzY29yZSBub3RhdGlvbnMsIGlmIGFueS4KcHViIGZuIG5vdGF0aW9uc19mcm9tX21pZGkobXNnOiBOb3RhdGlvbk1lc3NhZ2UpIC0+IE9wdGlvbjxWZWM8Tm90YXRpb25UeXBlPj4gewogICAgbWF0Y2ggbXNnLm5vdGF0aW9uKCkgewogICAgICAgIE1Ob3RhdGlvbjo6Tm90ZSB7CiAgICAgICAgICAgIGNoYW5uZWw6IF8sCiAgICAgICAgICAgIG5vdGU6IF8sCiAgICAgICAgICAgIHRva2VucywKICAgICAgICB9ID0+IHsKICAgICAgICAgICAgbGV0IHRva2VucyA9IHJlYXNjb3JlX25vdGF0aW9uX3N0cmluZygmdG9rZW5zKT87CiAgICAgICAgICAgIGxldCBub3RlcyA9IHRva2VucwogICAgICAgICAgICAgICAgLml0ZXIoKQogICAgICAgICAgICAgICAgLmZpbHRlcl9tYXAofHRrfCBTb21lKE5vdGF0aW9uVHlwZTo6Tm90ZSh0ay5wYXJzZSgpLm9rKCk/KSkpOwogICAgICAgICAgICBsZXQgY2hvcmRzID0gdG9rZW5zCiAgICAgICAgICAgICAgICAuaXRlcigpCiAgICAgICAgICAgICAgICAuZmlsdGVyX21hcCh8dGt8IFNvbWUoTm90YXRpb25UeXBlOjpDaG9yZCh0ay5wYXJzZSgpLm9rKCk/KSkpOwogICAgICAgICAgICBTb21lKG5vdGVzLmNoYWluKGNob3JkcykuY29sbGVjdCgpKQogICAgICAgIH0KICAgICAgICBNTm90YXRpb246OlRyYWNrKF8pID0+IHRvZG8hKCksCiAgICAgICAgTU5vdGF0aW9uOjpVbmtub3duKF8pID0+IHRvZG8hKCksCiAgICB9Cn0KCi8vLyBVcGRhdGUgbWVzc2FnZSBub3RhdGlvbnMgdG8gaG9sZCB0aGUgZ2l2ZW4uCi8vLwovLy8gSWYgbm8gc2luZ2xlIHJlc2NvcmUgbm90YXRpb24gcHJlc2VudCwgb3IgZXZlbiBubyByZWFzY29yZSBzZWN0aW9uIGluCi8vLyBtZXNzYWdlIHRva2VucyDigJQgdGhleSB3aWxsIGJlIGFkZGVkLiBPdGhlcndpc2UsIHBhcnRpY3VsYXIgdG9rZW4gd2lsbCBiZQovLy8gcmVwbGFjZWQgYnkgYWN0dWFsLiBOb3RoaW5nIHdpbGwgYmUgcmVtb3ZlZC4KcHViIGZuIHJlcGxhY2VfZ2l2ZW5fbm90YXRpb25zKAogICAgbXV0IG1zZzogTm90YXRpb25NZXNzYWdlLAogICAgbm90YXRpb25zOiBWZWM8Tm90YXRpb25UeXBlPiwKKSAtPiBSZXN1bHQ8Tm90YXRpb25NZXNzYWdlLCBOb3RhdGlvbkVycm9yPiB7CiAgICBtYXRjaCBtc2cubm90YXRpb24oKSB7CiAgICAgICAgTU5vdGF0aW9uOjpOb3RlIHsKICAgICAgICAgICAgY2hhbm5lbCwKICAgICAgICAgICAgbm90ZSwKICAgICAgICAgICAgdG9rZW5zLAogICAgICAgIH0gPT4gewogICAgICAgICAgICBsZXQgbXV0IHN0cmluZ3MgPSBub3RhdGlvbnMKICAgICAgICAgICAgICAgIC5pdGVyKCkKICAgICAgICAgICAgICAgIC5tYXAofG50fCBudC50b19zdHJpbmcoKSkKICAgICAgICAgICAgICAgIC5jb2xsZWN0Ojo8VmVjPF8+PigpOwogICAgICAgICAgICBsZXQgbXV0IHJzX3Rva2VucyA9IG1hdGNoIHJlYXNjb3JlX25vdGF0aW9uX3N0cmluZygmdG9rZW5zKSB7CiAgICAgICAgICAgICAgICBOb25lID0+IFZlYzo6bmV3KCksCiAgICAgICAgICAgICAgICBTb21lKHYpID0+IHYsCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGxldCBtdXQgcnNfdG9rZW5zID0gcnNfdG9rZW5zCiAgICAgICAgICAgICAgICAuaXRlcl9tdXQoKQogICAgICAgICAgICAgICAgLm1hcCh8dGt8IC0+IFJlc3VsdDxTdHJpbmcsIE5vdGF0aW9uRXJyb3I+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgdGtfc3RhcnQgPSByZWFzY29yZV90b2tlbnModGssIE5vbmUpP1swXTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGlkeCwgc3QpIGluIHN0cmluZ3MuaXRlcigpLmVudW1lcmF0ZSgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgc3Quc3RhcnRzX3dpdGgodGtfc3RhcnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBPayhzdHJpbmdzLnN3YXBfcmVtb3ZlKGlkeCkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIE9rKHRrLmNsb25lKCkpCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNvbGxlY3Q6OjxSZXN1bHQ8VmVjPFN0cmluZz4sIE5vdGF0aW9uRXJyb3I+PigpPzsKICAgICAgICAgICAgcnNfdG9rZW5zLmV4dGVuZChzdHJpbmdzKTsKICAgICAgICAgICAgbGV0IHRva2VucyA9IHJlcGxhY2VfcmVhc2NvcmVfbm90YXRpb25fc3RyaW5nKAogICAgICAgICAgICAgICAgdG9rZW5zLAogICAgICAgICAgICAgICAgZm9ybWF0ISgKICAgICAgICAgICAgICAgICAgICAie1NFQ1RJT059e05PVEFUSU9OX0RFTElNSVRFUn17fSIsCiAgICAgICAgICAgICAgICAgICAgcnNfdG9rZW5zLmpvaW4oTk9UQVRJT05fREVMSU1JVEVSKQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgKTsKICAgICAgICAgICAgbXNnLnNldF9ub3RhdGlvbihNTm90YXRpb246Ok5vdGUgewogICAgICAgICAgICAgICAgY2hhbm5lbCwKICAgICAgICAgICAgICAgIG5vdGUsCiAgICAgICAgICAgICAgICB0b2tlbnMsCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBPayhtc2cpCiAgICAgICAgfQogICAgICAgIHggPT4gRXJyKE5vdGF0aW9uRXJyb3I6OlVuZXhwZWN0ZWROb3RhdGlvbiB7CiAgICAgICAgICAgIG5vdGF0aW9uOiBmb3JtYXQhKCJ7Oj99Iiwgbm90YXRpb25zKSwKICAgICAgICAgICAgb2JqZWN0OiBmb3JtYXQhKCJ7eH0iKSwKICAgICAgICB9KSwKICAgIH0KfQoKcHViIGZuIHJlbW92ZV9naXZlbl9ub3RhdGlvbnMoCiAgICBtdXQgbXNnOiBOb3RhdGlvbk1lc3NhZ2UsCiAgICBub3RhdGlvbnM6IFZlYzxOb3RhdGlvblR5cGU+LAopIC0+IE5vdGF0aW9uTWVzc2FnZSB7CiAgICBtYXRjaCBtc2cubm90YXRpb24oKSB7CiAgICAgICAgTU5vdGF0aW9uOjpOb3RlIHsKICAgICAgICAgICAgY2hhbm5lbCwKICAgICAgICAgICAgbm90ZSwKICAgICAgICAgICAgdG9rZW5zLAogICAgICAgIH0gPT4gewogICAgICAgICAgICBsZXQgdG9rZW5zID0gdG9rZW5zCiAgICAgICAgICAgICAgICAuaW50b19pdGVyKCkKICAgICAgICAgICAgICAgIC5tYXAofG11dCB0a3wgewogICAgICAgICAgICAgICAgICAgIG5vdGF0aW9ucwogICAgICAgICAgICAgICAgICAgICAgICAuaXRlcigpCiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAofG50fCB0ayA9IHRrLnJlcGxhY2UobnQudG9fc3RyaW5nKCkuYXNfc3RyKCksICIiKSkKICAgICAgICAgICAgICAgICAgICAgICAgLmNvdW50KCk7CiAgICAgICAgICAgICAgICAgICAgdGsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY29sbGVjdDo6PFZlYzxfPj4oKTsKICAgICAgICAgICAgbXNnLnNldF9ub3RhdGlvbihNTm90YXRpb246Ok5vdGUgewogICAgICAgICAgICAgICAgY2hhbm5lbCwKICAgICAgICAgICAgICAgIG5vdGUsCiAgICAgICAgICAgICAgICB0b2tlbnMsCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICAgIF8gPT4gdW5pbXBsZW1lbnRlZCEoKSwKICAgIH0KICAgIG1zZwp9CgovLy8gR2V0IHJlYXNjb3JlIHRva2VucywgaWYgYW55LgpmbiByZWFzY29yZV9ub3RhdGlvbl9zdHJpbmcodG9rZW5zOiAmVmVjPFN0cmluZz4pIC0+IE9wdGlvbjxWZWM8U3RyaW5nPj4gewogICAgbGV0IHY6IFZlYzxTdHJpbmc+ID0gdG9rZW5zCiAgICAgICAgLml0ZXIoKQogICAgICAgIC5maWx0ZXIofHRrfCB0ay5zdGFydHNfd2l0aChTRUNUSU9OKSkKICAgICAgICAubWFwKHx0a3wgdGsuY2xvbmUoKSkKICAgICAgICAuY29sbGVjdCgpOwogICAgbWF0Y2ggdi5sZW4oKSB7CiAgICAgICAgMCA9PiBOb25lLAogICAgICAgIDEgPT4gU29tZSgKICAgICAgICAgICAgdlswXS5zcGxpdChOT1RBVElPTl9ERUxJTUlURVIpCiAgICAgICAgICAgICAgICAubWFwKHxzfCBzLnRvX3N0cmluZygpKQogICAgICAgICAgICAgICAgLmNvbGxlY3QoKSwKICAgICAgICApLAogICAgICAgIF8gPT4gewogICAgICAgICAgICBlcHJpbnRsbiEoIk1vcmUgdGhhbiBvbmUgUmVhU2NvcmUgdG9rZW46IHs6P30iLCB2KTsKICAgICAgICAgICAgTm9uZQogICAgICAgIH0KICAgIH0KfQoKLy8vIFJlcGxhY2UgUmVhc2NvcmUgdG9rZW4gc3RyaW5nIGJ5IGdpdmVuLCBvciBwdXNoIG9uZSBpZiBub3QgZXhpc3RzLgpmbiByZXBsYWNlX3JlYXNjb3JlX25vdGF0aW9uX3N0cmluZygKICAgIG11dCB0b2tlbnM6IFZlYzxTdHJpbmc+LAogICAgcmVhc2NvcmVfc3RyaW5nOiBTdHJpbmcsCikgLT4gVmVjPFN0cmluZz4gewogICAgbGV0IG11dCByZXBsYWNlZCA9IGZhbHNlOwogICAgZm9yIHRrIGluIHRva2Vucy5pdGVyX211dCgpIHsKICAgICAgICBpZiB0ay5zdGFydHNfd2l0aChTRUNUSU9OKSB7CiAgICAgICAgICAgICp0ayA9IHJlYXNjb3JlX3N0cmluZy5jbG9uZSgpOwogICAgICAgICAgICByZXBsYWNlZCA9IHRydWU7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgIH0KICAgIG1hdGNoIHJlcGxhY2VkIHsKICAgICAgICB0cnVlID0+ICgpLAogICAgICAgIGZhbHNlID0+IHRva2Vucy5wdXNoKHJlYXNjb3JlX3N0cmluZyksCiAgICB9CiAgICB0b2tlbnMKfQoKZm4gcmVhc2NvcmVfdG9rZW5zKAogICAgcmVhc2NvcmVfbm90YXRpb25fc3RyaW5nOiAmc3RyLAogICAgZXhwZWN0ZWRfYW1vdW50OiBpbXBsIEludG88T3B0aW9uPHUxNj4+LAopIC0+IE5vdGF0aW9uUmVzdWx0PFZlYzwmc3RyPj4gewogICAgbGV0IG11dCBzcGxpdCA9IHJlYXNjb3JlX25vdGF0aW9uX3N0cmluZy5zcGxpdChUT0tFTlNfREVMSU1JVEVSKTsKICAgIGlmIHJlYXNjb3JlX25vdGF0aW9uX3N0cmluZy5pc19lbXB0eSgpIHsKICAgICAgICByZXR1cm4gRXJyKE5vdGF0aW9uRXJyb3I6Ok5vVG9rZW5zKAogICAgICAgICAgICByZWFzY29yZV9ub3RhdGlvbl9zdHJpbmcudG9fc3RyaW5nKCksCiAgICAgICAgKQogICAgICAgIC5pbnRvKCkpOwogICAgfQogICAgbWF0Y2ggZXhwZWN0ZWRfYW1vdW50LmludG8oKSB7CiAgICAgICAgTm9uZSA9PiBPayhzcGxpdC5jb2xsZWN0KCkpLAogICAgICAgIFNvbWUoYW0pID0+IHsKICAgICAgICAgICAgbGV0IG11dCB2ID0gVmVjOjpuZXcoKTsKICAgICAgICAgICAgZm9yIGlkeCBpbiAwLi5hbSB7CiAgICAgICAgICAgICAgICB2LnB1c2goCiAgICAgICAgICAgICAgICAgICAgc3BsaXQKICAgICAgICAgICAgICAgICAgICAgICAgLm5leHQoKQogICAgICAgICAgICAgICAgICAgICAgICAub2tfb3IoTm90YXRpb25FcnJvcjo6Tm90RW5vdWdoVG9rZW5zKGFtLCBpZHgpKT8sCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3BsaXQKICAgICAgICAgICAgICAgIC5uZXh0KCkKICAgICAgICAgICAgICAgIC5pc19ub25lKCkKICAgICAgICAgICAgICAgIC50aGVuKHx8IHYpCiAgICAgICAgICAgICAgICAub2tfb3IoTm90YXRpb25FcnJvcjo6VG9vTWFueVRva2VucyhhbSkuaW50bygpKQogICAgICAgIH0KICAgIH0KfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArGgAAAAAAAOEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									8,
									0
								],
								[
									9,
									0
								],
								"",
								null
							],
							[
								[
									10,
									0
								],
								[
									10,
									0
								],
								"pub mod message;\n",
								null
							],
							[
								[
									41,
									0
								],
								[
									43,
									0
								],
								"",
								null
							]
						]
					},
					"AwAAAOEEAAAAAAAA4QQAAAAAAAACAAAACgrWAAAAAAAAAOcAAAAAAAAAAAAAAKwAAAAAAAAArAAAAAAAAAARAAAAcHViIG1vZCBtZXNzYWdlOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAAAAAAAAAKsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"cut",
					null,
					"AQAAABAAAAAAAAAAEAAAAAAAAABFAAAAdXNlIHJlYV9yczo6bWlkaTo6Tm90YXRpb24gYXMgTU5vdGF0aW9uOwp1c2UgcmVhX3JzOjpOb3RhdGlvbk1lc3NhZ2U7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"cut",
					null,
					"AQAAAEcKAAAAAAAARwoAAAAAAADyAgAAI1tjZmcodGVzdCldCiNbdGVzdF0KZm4gdGVzdF9yZWFzY29yZV90b2tlbnMoKSB7CiAgICBhc3NlcnRfZXEhKAogICAgICAgIHJlYXNjb3JlX3Rva2VucygiYTpiOmM6ZCIsIE5vbmUpLm9rKCksCiAgICAgICAgU29tZSh2ZWMhWyJhIiwgImIiLCAiYyIsICJkIl0pCiAgICApOwogICAgYXNzZXJ0X2VxISgKICAgICAgICByZWFzY29yZV90b2tlbnMoImE6YjpjOmQiLCA0KS5vaygpLAogICAgICAgIFNvbWUodmVjIVsiYSIsICJiIiwgImMiLCAiZCJdKQogICAgKTsKICAgIGFzc2VydF9lcSEoCiAgICAgICAgcmVhc2NvcmVfdG9rZW5zKCJhOmI6YzpkIiwgMykudW53cmFwX2VycigpLnRvX3N0cmluZygpLAogICAgICAgIE5vdGF0aW9uRXJyb3I6OlRvb01hbnlUb2tlbnMoMykudG9fc3RyaW5nKCkKICAgICk7CiAgICBhc3NlcnRfZXEhKAogICAgICAgIHJlYXNjb3JlX3Rva2VucygiYTpiOmM6ZCIsIDUpLnVud3JhcF9lcnIoKS50b19zdHJpbmcoKSwKICAgICAgICBOb3RhdGlvbkVycm9yOjpOb3RFbm91Z2hUb2tlbnMoNSwgNCkudG9fc3RyaW5nKCkKICAgICk7CiAgICBhc3NlcnRfZXEhKAogICAgICAgIHJlYXNjb3JlX3Rva2VucygiIiwgMSkudW53cmFwX2VycigpLnRvX3N0cmluZygpLAogICAgICAgIE5vdGF0aW9uRXJyb3I6Ok5vVG9rZW5zKCIiLnRvX3N0cmluZygpKS50b19zdHJpbmcoKQogICAgKTsKICAgIGFzc2VydF9lcSEocmVhc2NvcmVfdG9rZW5zKCJhIiwgTm9uZSkub2soKSwgU29tZSh2ZWMhWyJhIl0pKTsKfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5DQAAAAAAAEcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									2,
									0
								],
								[
									4,
									0
								],
								"",
								null
							],
							[
								[
									93,
									0
								],
								[
									95,
									0
								],
								"",
								null
							]
						]
					},
					"AgAAAEcKAAAAAAAARwoAAAAAAAACAAAACgoQAAAAAAAAABAAAAAAAAAAAgAAAAoK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHCgAAAAAAAEcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"cut",
					null,
					"AQAAAEUKAAAAAAAARQoAAAAAAACpBwAAI1tjZmcodGVzdCldCiNbdGVzdF0KZm4gdGVzdF9wYXJzaW5nKCkgewogICAgbGV0IG1zZyA9IE5vdGF0aW9uTWVzc2FnZTo6ZnJvbShNTm90YXRpb246Ok5vdGUgewogICAgICAgIGNoYW5uZWw6IDEsCiAgICAgICAgbm90ZTogNjAsCiAgICAgICAgdG9rZW5zOiB2ZWMhWwogICAgICAgICAgICAidGV4dCIudG9fc3RyaW5nKCksCiAgICAgICAgICAgICJSZWFTY29yZXxub3RlLWhlYWQ6Y3Jvc3N8ZHluOlxcbWYiLnRvX3N0cmluZygpLAogICAgICAgIF0sCiAgICB9KTsKICAgIGFzc2VydF9lcSEoCiAgICAgICAgbm90YXRpb25zX2Zyb21fbWlkaShtc2cuY2xvbmUoKSkudW53cmFwKCksCiAgICAgICAgdmVjIVsKICAgICAgICAgICAgTm90YXRpb25UeXBlOjpOb3RlKE5vdGVOb3RhdGlvbnM6Ok5vdGVIZWFkKAogICAgICAgICAgICAgICAgbm90ZV9ub3RhdGlvbnM6Ok5vdGVIZWFkOjpDcm9zcwogICAgICAgICAgICApKSwKICAgICAgICAgICAgTm90YXRpb25UeXBlOjpDaG9yZChDaG9yZE5vdGF0aW9uczo6RHluYW1pY3MoIlxcbWYiLnRvX3N0cmluZygpKSkKICAgICAgICBdCiAgICApOwogICAgbGV0IG1zZzEgPSByZXBsYWNlX2dpdmVuX25vdGF0aW9ucygKICAgICAgICBtc2cuY2xvbmUoKSwKICAgICAgICB2ZWMhW05vdGF0aW9uVHlwZTo6Tm90ZShOb3RlTm90YXRpb25zOjpOb3RlSGVhZCgKICAgICAgICAgICAgbm90ZV9ub3RhdGlvbnM6Ok5vdGVIZWFkOjpCYXJvcXVlLAogICAgICAgICkpXSwKICAgICkKICAgIC5leHBlY3QoIkNhbiBub3QgcmVwbGFjZSBub3RhdGlvbnMiKTsKICAgIGFzc2VydF9lcSEoCiAgICAgICAgbm90YXRpb25zX2Zyb21fbWlkaShtc2cxKS51bndyYXAoKSwKICAgICAgICB2ZWMhWwogICAgICAgICAgICBOb3RhdGlvblR5cGU6Ok5vdGUoTm90ZU5vdGF0aW9uczo6Tm90ZUhlYWQoCiAgICAgICAgICAgICAgICBub3RlX25vdGF0aW9uczo6Tm90ZUhlYWQ6OkJhcm9xdWUKICAgICAgICAgICAgKSksCiAgICAgICAgICAgIE5vdGF0aW9uVHlwZTo6Q2hvcmQoQ2hvcmROb3RhdGlvbnM6OkR5bmFtaWNzKCJcXG1mIi50b19zdHJpbmcoKSkpCiAgICAgICAgXQogICAgKTsKICAgIGxldCBtc2cxID0gcmVtb3ZlX2dpdmVuX25vdGF0aW9ucygKICAgICAgICBtc2csCiAgICAgICAgdmVjIVtOb3RhdGlvblR5cGU6Ok5vdGUoTm90ZU5vdGF0aW9uczo6Tm90ZUhlYWQoCiAgICAgICAgICAgIG5vdGVfbm90YXRpb25zOjpOb3RlSGVhZDo6Q3Jvc3MsCiAgICAgICAgKSldLAogICAgKTsKICAgIGFzc2VydF9lcSEoCiAgICAgICAgbm90YXRpb25zX2Zyb21fbWlkaShtc2cxKS51bndyYXAoKSwKICAgICAgICB2ZWMhW05vdGF0aW9uVHlwZTo6Q2hvcmQoQ2hvcmROb3RhdGlvbnM6OkR5bmFtaWNzKAogICAgICAgICAgICAiXFxtZiIudG9fc3RyaW5nKCkKICAgICAgICApKV0KICAgICk7CiAgICBsZXQgbXNnID0gTm90YXRpb25NZXNzYWdlOjpmcm9tKE1Ob3RhdGlvbjo6Tm90ZSB7CiAgICAgICAgY2hhbm5lbDogMSwKICAgICAgICBub3RlOiA2MCwKICAgICAgICB0b2tlbnM6IFZlYzo6bmV3KCksCiAgICB9KTsKICAgIGxldCBtc2cxID0gcmVwbGFjZV9naXZlbl9ub3RhdGlvbnMoCiAgICAgICAgbXNnLmNsb25lKCksCiAgICAgICAgdmVjIVtOb3RhdGlvblR5cGU6Ok5vdGUoTm90ZU5vdGF0aW9uczo6Tm90ZUhlYWQoCiAgICAgICAgICAgIG5vdGVfbm90YXRpb25zOjpOb3RlSGVhZDo6QmFyb3F1ZSwKICAgICAgICApKV0sCiAgICApCiAgICAuZXhwZWN0KCJDYW4gbm90IHJlcGxhY2Ugbm90YXRpb25zIik7CiAgICBhc3NlcnRfZXEhKAogICAgICAgIG5vdGF0aW9uc19mcm9tX21pZGkobXNnMSkudW53cmFwKCksCiAgICAgICAgdmVjIVtOb3RhdGlvblR5cGU6Ok5vdGUoTm90ZU5vdGF0aW9uczo6Tm90ZUhlYWQoCiAgICAgICAgICAgIG5vdGVfbm90YXRpb25zOjpOb3RlSGVhZDo6QmFyb3F1ZQogICAgICAgICkpLF0KICAgICk7Cn0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuEQAAAAAAAEUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									90,
									0
								],
								[
									92,
									0
								],
								"",
								null
							]
						]
					},
					"AQAAAEQKAAAAAAAARAoAAAAAAAACAAAACgo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+CQAAAAAAAP4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEMKAAAAAAAARAoAAAAAAAAAAAAARAoAAAAAAABFCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDCgAAAAAAAEMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAAEUKAAAAAAAAzQ0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFCgAAAAAAAEUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAEUKAAAAAAAARgoAAAAAAAAAAAAARgoAAAAAAABHCgAAAAAAAAAAAABHCgAAAAAAAEgKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFCgAAAAAAAEUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgKAAAAAAAASQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICgAAAAAAAEgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\n///"
					},
					"BAAAAEQKAAAAAAAARQoAAAAAAAAAAAAARQoAAAAAAABGCgAAAAAAAAAAAABGCgAAAAAAAEcKAAAAAAAAAAAAAEcKAAAAAAAASAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABECgAAAAAAAEQKAAAAAAAAAAAAAAAAPEA"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgKAAAAAAAASQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICgAAAAAAAEgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "oarse"
					},
					"BQAAAEkKAAAAAAAASgoAAAAAAAAAAAAASgoAAAAAAABLCgAAAAAAAAAAAABLCgAAAAAAAEwKAAAAAAAAAAAAAEwKAAAAAAAATQoAAAAAAAAAAAAATQoAAAAAAABOCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJCgAAAAAAAEkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4KAAAAAAAATwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOCgAAAAAAAE4KAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"right_delete",
					null,
					"AQAAAEkKAAAAAAAASQoAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJCgAAAAAAAEkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAEkKAAAAAAAASgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJCgAAAAAAAEkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "reascore"
					},
					"CAAAAE8KAAAAAAAAUAoAAAAAAAAAAAAAUAoAAAAAAABRCgAAAAAAAAAAAABRCgAAAAAAAFIKAAAAAAAAAAAAAFIKAAAAAAAAUwoAAAAAAAAAAAAAUwoAAAAAAABUCgAAAAAAAAAAAABUCgAAAAAAAFUKAAAAAAAAAAAAAFUKAAAAAAAAVgoAAAAAAAAAAAAAVgoAAAAAAABXCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPCgAAAAAAAE8KAAAAAAAA////////738"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " notation"
					},
					"CQAAAFcKAAAAAAAAWAoAAAAAAAAAAAAAWAoAAAAAAABZCgAAAAAAAAAAAABZCgAAAAAAAFoKAAAAAAAAAAAAAFoKAAAAAAAAWwoAAAAAAAAAAAAAWwoAAAAAAABcCgAAAAAAAAAAAABcCgAAAAAAAF0KAAAAAAAAAAAAAF0KAAAAAAAAXgoAAAAAAAAAAAAAXgoAAAAAAABfCgAAAAAAAAAAAABfCgAAAAAAAGAKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXCgAAAAAAAFcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " string,"
					},
					"CAAAAGAKAAAAAAAAYQoAAAAAAAAAAAAAYQoAAAAAAABiCgAAAAAAAAAAAABiCgAAAAAAAGMKAAAAAAAAAAAAAGMKAAAAAAAAZAoAAAAAAAAAAAAAZAoAAAAAAABlCgAAAAAAAAAAAABlCgAAAAAAAGYKAAAAAAAAAAAAAGYKAAAAAAAAZwoAAAAAAAAAAAAAZwoAAAAAAABoCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgCgAAAAAAAGAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " extrac"
					},
					"BwAAAGgKAAAAAAAAaQoAAAAAAAAAAAAAaQoAAAAAAABqCgAAAAAAAAAAAABqCgAAAAAAAGsKAAAAAAAAAAAAAGsKAAAAAAAAbAoAAAAAAAAAAAAAbAoAAAAAAABtCgAAAAAAAAAAAABtCgAAAAAAAG4KAAAAAAAAAAAAAG4KAAAAAAAAbwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoCgAAAAAAAGgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "ted"
					},
					"AwAAAG8KAAAAAAAAcAoAAAAAAAAAAAAAcAoAAAAAAABxCgAAAAAAAAAAAABxCgAAAAAAAHIKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvCgAAAAAAAG8KAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAHIKAAAAAAAAcwoAAAAAAAAAAAAAcwoAAAAAAAB0CgAAAAAAAAAAAAB0CgAAAAAAAHUKAAAAAAAAAAAAAHUKAAAAAAAAdgoAAAAAAAAAAAAAdgoAAAAAAAB3CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByCgAAAAAAAHIKAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " notation"
					},
					"CQAAAHcKAAAAAAAAeAoAAAAAAAAAAAAAeAoAAAAAAAB5CgAAAAAAAAAAAAB5CgAAAAAAAHoKAAAAAAAAAAAAAHoKAAAAAAAAewoAAAAAAAAAAAAAewoAAAAAAAB8CgAAAAAAAAAAAAB8CgAAAAAAAH0KAAAAAAAAAAAAAH0KAAAAAAAAfgoAAAAAAAAAAAAAfgoAAAAAAAB/CgAAAAAAAAAAAAB/CgAAAAAAAIAKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3CgAAAAAAAHcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " message"
					},
					"CAAAAIAKAAAAAAAAgQoAAAAAAAAAAAAAgQoAAAAAAACCCgAAAAAAAAAAAACCCgAAAAAAAIMKAAAAAAAAAAAAAIMKAAAAAAAAhAoAAAAAAAAAAAAAhAoAAAAAAACFCgAAAAAAAAAAAACFCgAAAAAAAIYKAAAAAAAAAAAAAIYKAAAAAAAAhwoAAAAAAAAAAAAAhwoAAAAAAACICgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACACgAAAAAAAIAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n///"
					},
					"BAAAAIgKAAAAAAAAiQoAAAAAAAAAAAAAiQoAAAAAAACKCgAAAAAAAAAAAACKCgAAAAAAAIsKAAAAAAAAAAAAAIsKAAAAAAAAjAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACICgAAAAAAAIgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\n///"
					},
					"BAAAAIwKAAAAAAAAjQoAAAAAAAAAAAAAjQoAAAAAAACOCgAAAAAAAAAAAACOCgAAAAAAAI8KAAAAAAAAAAAAAI8KAAAAAAAAkAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMCgAAAAAAAIwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " If"
					},
					"AwAAAJAKAAAAAAAAkQoAAAAAAAAAAAAAkQoAAAAAAACSCgAAAAAAAAAAAACSCgAAAAAAAJMKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQCgAAAAAAAJAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAJMKAAAAAAAAlAoAAAAAAAAAAAAAlAoAAAAAAACVCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTCgAAAAAAAJMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "xact"
					},
					"BAAAAJUKAAAAAAAAlgoAAAAAAAAAAAAAlgoAAAAAAACXCgAAAAAAAAAAAACXCgAAAAAAAJgKAAAAAAAAAAAAAJgKAAAAAAAAmQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVCgAAAAAAAJUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " amount"
					},
					"BwAAAJkKAAAAAAAAmgoAAAAAAAAAAAAAmgoAAAAAAACbCgAAAAAAAAAAAACbCgAAAAAAAJwKAAAAAAAAAAAAAJwKAAAAAAAAnQoAAAAAAAAAAAAAnQoAAAAAAACeCgAAAAAAAAAAAACeCgAAAAAAAJ8KAAAAAAAAAAAAAJ8KAAAAAAAAoAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZCgAAAAAAAJkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAKAKAAAAAAAAoQoAAAAAAAAAAAAAoQoAAAAAAACiCgAAAAAAAAAAAACiCgAAAAAAAKMKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgCgAAAAAAAKAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " tokens"
					},
					"BwAAAKMKAAAAAAAApAoAAAAAAAAAAAAApAoAAAAAAAClCgAAAAAAAAAAAAClCgAAAAAAAKYKAAAAAAAAAAAAAKYKAAAAAAAApwoAAAAAAAAAAAAApwoAAAAAAACoCgAAAAAAAAAAAACoCgAAAAAAAKkKAAAAAAAAAAAAAKkKAAAAAAAAqgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjCgAAAAAAAKMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAKoKAAAAAAAAqwoAAAAAAAAAAAAAqwoAAAAAAACsCgAAAAAAAAAAAACsCgAAAAAAAK0KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqCgAAAAAAAKoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " specife"
					},
					"CAAAAK0KAAAAAAAArgoAAAAAAAAAAAAArgoAAAAAAACvCgAAAAAAAAAAAACvCgAAAAAAALAKAAAAAAAAAAAAALAKAAAAAAAAsQoAAAAAAAAAAAAAsQoAAAAAAACyCgAAAAAAAAAAAACyCgAAAAAAALMKAAAAAAAAAAAAALMKAAAAAAAAtAoAAAAAAAAAAAAAtAoAAAAAAAC1CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtCgAAAAAAAK0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAALUKAAAAAAAAtgoAAAAAAAAAAAAAtgoAAAAAAAC3CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1CgAAAAAAALUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " —"
					},
					"AgAAALcKAAAAAAAAuAoAAAAAAAAAAAAAuAoAAAAAAAC5CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3CgAAAAAAALcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkKAAAAAAAAugoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5CgAAAAAAALkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "err"
					},
					"AwAAALoKAAAAAAAAuwoAAAAAAAAAAAAAuwoAAAAAAAC8CgAAAAAAAAAAAAC8CgAAAAAAAL0KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6CgAAAAAAALoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					3,
					"left_delete",
					null,
					"AwAAALwKAAAAAAAAvAoAAAAAAAABAAAAcrsKAAAAAAAAuwoAAAAAAAABAAAAcroKAAAAAAAAugoAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9CgAAAAAAAL0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "NotationErr"
					},
					"CwAAALoKAAAAAAAAuwoAAAAAAAAAAAAAuwoAAAAAAAC8CgAAAAAAAAAAAAC8CgAAAAAAAL0KAAAAAAAAAAAAAL0KAAAAAAAAvgoAAAAAAAAAAAAAvgoAAAAAAAC/CgAAAAAAAAAAAAC/CgAAAAAAAMAKAAAAAAAAAAAAAMAKAAAAAAAAwQoAAAAAAAAAAAAAwQoAAAAAAADCCgAAAAAAAAAAAADCCgAAAAAAAMMKAAAAAAAAAAAAAMMKAAAAAAAAxAoAAAAAAAAAAAAAxAoAAAAAAADFCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6CgAAAAAAALoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAMUKAAAAAAAAxgoAAAAAAAAAAAAAxgoAAAAAAADHCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFCgAAAAAAAMUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " w"
					},
					"AgAAAMcKAAAAAAAAyAoAAAAAAAAAAAAAyAoAAAAAAADJCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHCgAAAAAAAMcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "ill"
					},
					"AwAAAMkKAAAAAAAAygoAAAAAAAAAAAAAygoAAAAAAADLCgAAAAAAAAAAAADLCgAAAAAAAMwKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJCgAAAAAAAMkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " be"
					},
					"AwAAAMwKAAAAAAAAzQoAAAAAAAAAAAAAzQoAAAAAAADOCgAAAAAAAAAAAADOCgAAAAAAAM8KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMCgAAAAAAAMwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " returned"
					},
					"CQAAAM8KAAAAAAAA0AoAAAAAAAAAAAAA0AoAAAAAAADRCgAAAAAAAAAAAADRCgAAAAAAANIKAAAAAAAAAAAAANIKAAAAAAAA0woAAAAAAAAAAAAA0woAAAAAAADUCgAAAAAAAAAAAADUCgAAAAAAANUKAAAAAAAAAAAAANUKAAAAAAAA1goAAAAAAAAAAAAA1goAAAAAAADXCgAAAAAAAAAAAADXCgAAAAAAANgKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPCgAAAAAAAM8KAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " on"
					},
					"AwAAANgKAAAAAAAA2QoAAAAAAAAAAAAA2QoAAAAAAADaCgAAAAAAAAAAAADaCgAAAAAAANsKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYCgAAAAAAANgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " mis"
					},
					"BAAAANsKAAAAAAAA3AoAAAAAAAAAAAAA3AoAAAAAAADdCgAAAAAAAAAAAADdCgAAAAAAAN4KAAAAAAAAAAAAAN4KAAAAAAAA3woAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbCgAAAAAAANsKAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"left_delete",
					null,
					"AQAAANwKAAAAAAAA3AoAAAAAAAADAAAAbWlz",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfCgAAAAAAANwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "wrond"
					},
					"BQAAANwKAAAAAAAA3QoAAAAAAAAAAAAA3QoAAAAAAADeCgAAAAAAAAAAAADeCgAAAAAAAN8KAAAAAAAAAAAAAN8KAAAAAAAA4AoAAAAAAAAAAAAA4AoAAAAAAADhCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcCgAAAAAAANwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " tokens"
					},
					"BwAAAOEKAAAAAAAA4goAAAAAAAAAAAAA4goAAAAAAADjCgAAAAAAAAAAAADjCgAAAAAAAOQKAAAAAAAAAAAAAOQKAAAAAAAA5QoAAAAAAAAAAAAA5QoAAAAAAADmCgAAAAAAAAAAAADmCgAAAAAAAOcKAAAAAAAAAAAAAOcKAAAAAAAA6AoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhCgAAAAAAAOEKAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " amount"
					},
					"BwAAAOgKAAAAAAAA6QoAAAAAAAAAAAAA6QoAAAAAAADqCgAAAAAAAAAAAADqCgAAAAAAAOsKAAAAAAAAAAAAAOsKAAAAAAAA7AoAAAAAAAAAAAAA7AoAAAAAAADtCgAAAAAAAAAAAADtCgAAAAAAAO4KAAAAAAAAAAAAAO4KAAAAAAAA7woAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoCgAAAAAAAOgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									93,
									78
								],
								[
									93,
									78
								],
								"\n///",
								null
							]
						]
					},
					"AQAAANsKAAAAAAAA3woAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvCgAAAAAAAO8KAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAAGcKAAAAAAAAZwoAAAAAAAAhAAAALCBleHRyYWN0ZWQgZnJvbSBub3RhdGlvbiBtZXNzYWdl",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnCgAAAAAAAIgKAAAAAAAA////////738"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGcKAAAAAAAAaAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnCgAAAAAAAGcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGgKAAAAAAAAagoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoCgAAAAAAAGgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "one"
					},
					"AwAAAGkKAAAAAAAAagoAAAAAAAAAAAAAagoAAAAAAABrCgAAAAAAAAAAAABrCgAAAAAAAGwKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpCgAAAAAAAGkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " notation"
					},
					"CQAAAGwKAAAAAAAAbQoAAAAAAAAAAAAAbQoAAAAAAABuCgAAAAAAAAAAAABuCgAAAAAAAG8KAAAAAAAAAAAAAG8KAAAAAAAAcAoAAAAAAAAAAAAAcAoAAAAAAABxCgAAAAAAAAAAAABxCgAAAAAAAHIKAAAAAAAAAAAAAHIKAAAAAAAAcwoAAAAAAAAAAAAAcwoAAAAAAAB0CgAAAAAAAAAAAAB0CgAAAAAAAHUKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsCgAAAAAAAGwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHUKAAAAAAAAdgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1CgAAAAAAAHUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					2,
					"right_delete",
					null,
					"AgAAAG0KAAAAAAAAbQoAAAAAAAAIAAAAbm90YXRpb25tCgAAAAAAAG0KAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtCgAAAAAAAHUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "notation"
					},
					"CAAAAG0KAAAAAAAAbgoAAAAAAAAAAAAAbgoAAAAAAABvCgAAAAAAAAAAAABvCgAAAAAAAHAKAAAAAAAAAAAAAHAKAAAAAAAAcQoAAAAAAAAAAAAAcQoAAAAAAAByCgAAAAAAAAAAAAByCgAAAAAAAHMKAAAAAAAAAAAAAHMKAAAAAAAAdAoAAAAAAAAAAAAAdAoAAAAAAAB1CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtCgAAAAAAAG0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " type"
					},
					"BQAAAHUKAAAAAAAAdgoAAAAAAAAAAAAAdgoAAAAAAAB3CgAAAAAAAAAAAAB3CgAAAAAAAHgKAAAAAAAAAAAAAHgKAAAAAAAAeQoAAAAAAAAAAAAAeQoAAAAAAAB6CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1CgAAAAAAAHUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHoKAAAAAAAAewoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6CgAAAAAAAHoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAHoKAAAAAAAAegoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7CgAAAAAAAHsKAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					2,
					"left_delete",
					null,
					"AgAAAGEKAAAAAAAAYQoAAAAAAAAaAAAAc3RyaW5nIChvbmUgbm90YXRpb24gdHlwZSlgCgAAAAAAAGAKAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7CgAAAAAAAGEKAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "single"
					},
					"BgAAAFgKAAAAAAAAWQoAAAAAAAAAAAAAWQoAAAAAAABaCgAAAAAAAAAAAABaCgAAAAAAAFsKAAAAAAAAAAAAAFsKAAAAAAAAXAoAAAAAAAAAAAAAXAoAAAAAAABdCgAAAAAAAAAAAABdCgAAAAAAAF4KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYCgAAAAAAAFgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF4KAAAAAAAAXwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeCgAAAAAAAF4KAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " string"
					},
					"BwAAAGcKAAAAAAAAaAoAAAAAAAAAAAAAaAoAAAAAAABpCgAAAAAAAAAAAABpCgAAAAAAAGoKAAAAAAAAAAAAAGoKAAAAAAAAawoAAAAAAAAAAAAAawoAAAAAAABsCgAAAAAAAAAAAABsCgAAAAAAAG0KAAAAAAAAAAAAAG0KAAAAAAAAbgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnCgAAAAAAAGcKAAAAAAAA////////738"
				]
			]
		},
		{
			"file": "rea-score/src/dom/midi_parse.rs",
			"settings":
			{
				"buffer_size": 4736,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADAJAAAAAAAAMQkAAAAAAAAAAAAAMQkAAAAAAAAyCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwCQAAAAAAADAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAADIJAAAAAAAAMwkAAAAAAAAAAAAAMwkAAAAAAAA0CQAAAAAAAAAAAAA0CQAAAAAAADUJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyCQAAAAAAADIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAADUJAAAAAAAANgkAAAAAAAAAAAAANgkAAAAAAAA3CQAAAAAAAAAAAAA3CQAAAAAAADgJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1CQAAAAAAADUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " set_"
					},
					"BQAAADgJAAAAAAAAOQkAAAAAAAAAAAAAOQkAAAAAAAA6CQAAAAAAAAAAAAA6CQAAAAAAADsJAAAAAAAAAAAAADsJAAAAAAAAPAkAAAAAAAAAAAAAPAkAAAAAAAA9CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4CQAAAAAAADgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "notations"
					},
					"CQAAAD0JAAAAAAAAPgkAAAAAAAAAAAAAPgkAAAAAAAA/CQAAAAAAAAAAAAA/CQAAAAAAAEAJAAAAAAAAAAAAAEAJAAAAAAAAQQkAAAAAAAAAAAAAQQkAAAAAAABCCQAAAAAAAAAAAABCCQAAAAAAAEMJAAAAAAAAAAAAAEMJAAAAAAAARAkAAAAAAAAAAAAARAkAAAAAAABFCQAAAAAAAAAAAABFCQAAAAAAAEYJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9CQAAAAAAAD0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "_to_"
					},
					"BAAAAEYJAAAAAAAARwkAAAAAAAAAAAAARwkAAAAAAABICQAAAAAAAAAAAABICQAAAAAAAEkJAAAAAAAAAAAAAEkJAAAAAAAASgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGCQAAAAAAAEYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					4,
					"right_delete",
					null,
					"BAAAADkJAAAAAAAAOQkAAAAAAAABAAAAczkJAAAAAAAAOQkAAAAAAAABAAAAZTkJAAAAAAAAOQkAAAAAAAABAAAAdDkJAAAAAAAAOQkAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5CQAAAAAAADkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "first_selecte"
					},
					"DQAAAEYJAAAAAAAARwkAAAAAAAAAAAAARwkAAAAAAABICQAAAAAAAAAAAABICQAAAAAAAEkJAAAAAAAAAAAAAEkJAAAAAAAASgkAAAAAAAAAAAAASgkAAAAAAABLCQAAAAAAAAAAAABLCQAAAAAAAEwJAAAAAAAAAAAAAEwJAAAAAAAATQkAAAAAAAAAAAAATQkAAAAAAABOCQAAAAAAAAAAAABOCQAAAAAAAE8JAAAAAAAAAAAAAE8JAAAAAAAAUAkAAAAAAAAAAAAAUAkAAAAAAABRCQAAAAAAAAAAAABRCQAAAAAAAFIJAAAAAAAAAAAAAFIJAAAAAAAAUwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGCQAAAAAAAEYJAAAAAAAA////////738"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAFMJAAAAAAAAVAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTCQAAAAAAAFMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFQJAAAAAAAAVgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUCQAAAAAAAFQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "notations:"
					},
					"CgAAAFUJAAAAAAAAVgkAAAAAAAAAAAAAVgkAAAAAAABXCQAAAAAAAAAAAABXCQAAAAAAAFgJAAAAAAAAAAAAAFgJAAAAAAAAWQkAAAAAAAAAAAAAWQkAAAAAAABaCQAAAAAAAAAAAABaCQAAAAAAAFsJAAAAAAAAAAAAAFsJAAAAAAAAXAkAAAAAAAAAAAAAXAkAAAAAAABdCQAAAAAAAAAAAABdCQAAAAAAAF4JAAAAAAAAAAAAAF4JAAAAAAAAXwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVCQAAAAAAAFUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF8JAAAAAAAAYAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfCQAAAAAAAF8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAAGAJAAAAAAAAYQkAAAAAAAAAAAAAYQkAAAAAAABiCQAAAAAAAAAAAABiCQAAAAAAAGMJAAAAAAAAAAAAAGMJAAAAAAAAZAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgCQAAAAAAAGAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " Into"
					},
					"BQAAAGQJAAAAAAAAZQkAAAAAAAAAAAAAZQkAAAAAAABmCQAAAAAAAAAAAABmCQAAAAAAAGcJAAAAAAAAAAAAAGcJAAAAAAAAaAkAAAAAAAAAAAAAaAkAAAAAAABpCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkCQAAAAAAAGQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAGkJAAAAAAAAagkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpCQAAAAAAAGkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"preselect\":true,\"sortText\":\"ffffffef\",\"label\":\"IntoIterator\",\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":71,\"character\":51},\"end\":{\"line\":71,\"character\":56}},\"newText\":\"IntoIterator\",\"insert\":{\"start\":{\"line\":71,\"character\":51},\"end\":{\"line\":71,\"character\":56}}},\"kind\":8,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Conversion into an [`Iterator`].\\n\\nBy implementing `IntoIterator` for a type, you define how it will be\\nconverted to an iterator. This is common for types which describe a\\ncollection of some kind.\\n\\nOne benefit of implementing `IntoIterator` is that your type will [work\\nwith Rust's `for` loop syntax](crate::iter#for-loops-and-intoiterator).\\n\\nSee also: [`FromIterator`].\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet v = [1, 2, 3];\\nlet mut iter = v.into_iter();\\n\\nassert_eq!(Some(1), iter.next());\\nassert_eq!(Some(2), iter.next());\\nassert_eq!(Some(3), iter.next());\\nassert_eq!(None, iter.next());\\n```\\nImplementing `IntoIterator` for your type:\\n\\n```rust\\n// A sample collection, that's just a wrapper over Vec<T>\\n#[derive(Debug)]\\nstruct MyCollection(Vec<i32>);\\n\\n// Let's give it some methods so we can create one and add things\\n// to it.\\nimpl MyCollection {\\n    fn new() -> MyCollection {\\n        MyCollection(Vec::new())\\n    }\\n\\n    fn add(&mut self, elem: i32) {\\n        self.0.push(elem);\\n    }\\n}\\n\\n// and we'll implement IntoIterator\\nimpl IntoIterator for MyCollection {\\n    type Item = i32;\\n    type IntoIter = std::vec::IntoIter<Self::Item>;\\n\\n    fn into_iter(self) -> Self::IntoIter {\\n        self.0.into_iter()\\n    }\\n}\\n\\n// Now we can make a new collection...\\nlet mut c = MyCollection::new();\\n\\n// ... add some stuff to it ...\\nc.add(0);\\nc.add(1);\\nc.add(2);\\n\\n// ... and then turn it into an Iterator:\\nfor (i, n) in c.into_iter().enumerate() {\\n    assert_eq!(i as i32, n);\\n}\\n```\\n\\nIt is common to use `IntoIterator` as a trait bound. This allows\\nthe input collection type to change, so long as it is still an\\niterator. Additional bounds can be specified by restricting on\\n`Item`:\\n\\n```rust\\nfn collect_as_strings<T>(collection: T) -> Vec<String>\\nwhere\\n    T: IntoIterator,\\n    T::Item: std::fmt::Debug,\\n{\\n    collection\\n        .into_iter()\\n        .map(|item| format!(\\\"{item:?}\\\"))\\n        .collect()\\n}\\n```\"},\"deprecated\":false,\"additionalTextEdits\":[],\"filterText\":\"IntoIterator\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							19,
							23,
							1
						],
						"trigger": "IntoIterator"
					},
					"AgAAAGUJAAAAAAAAZQkAAAAAAAAFAAAASW50b0llCQAAAAAAAHEJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqCQAAAAAAAGoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "<>"
					},
					"AgAAAHEJAAAAAAAAcgkAAAAAAAAAAAAAcgkAAAAAAABzCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxCQAAAAAAAHEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "Item="
					},
					"BQAAAHIJAAAAAAAAcwkAAAAAAAAAAAAAcwkAAAAAAAB0CQAAAAAAAAAAAAB0CQAAAAAAAHUJAAAAAAAAAAAAAHUJAAAAAAAAdgkAAAAAAAAAAAAAdgkAAAAAAAB3CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByCQAAAAAAAHIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "Notation"
					},
					"CAAAAHcJAAAAAAAAeAkAAAAAAAAAAAAAeAkAAAAAAAB5CQAAAAAAAAAAAAB5CQAAAAAAAHoJAAAAAAAAAAAAAHoJAAAAAAAAewkAAAAAAAAAAAAAewkAAAAAAAB8CQAAAAAAAAAAAAB8CQAAAAAAAH0JAAAAAAAAAAAAAH0JAAAAAAAAfgkAAAAAAAAAAAAAfgkAAAAAAAB/CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3CQAAAAAAAHcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"preselect\":true,\"sortText\":\"ffffffef\",\"label\":\"NotationType\",\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":71,\"character\":69},\"end\":{\"line\":71,\"character\":77}},\"newText\":\"NotationType\",\"insert\":{\"start\":{\"line\":71,\"character\":69},\"end\":{\"line\":71,\"character\":77}}},\"kind\":13,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Handles parsing and representation of raw notation\"},\"deprecated\":false,\"additionalTextEdits\":[],\"filterText\":\"NotationType\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							24,
							28,
							8
						],
						"trigger": "NotationType"
					},
					"AgAAAHcJAAAAAAAAdwkAAAAAAAAIAAAATm90YXRpb253CQAAAAAAAIMJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/CQAAAAAAAH8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAIUJAAAAAAAAhgkAAAAAAAAAAAAAhgkAAAAAAACHCQAAAAAAAAAAAACHCQAAAAAAAIgJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFCQAAAAAAAIUJAAAAAAAA////////738"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIgJAAAAAAAAiQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACICQAAAAAAAIgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "Result"
					},
					"BgAAAIkJAAAAAAAAigkAAAAAAAAAAAAAigkAAAAAAACLCQAAAAAAAAAAAACLCQAAAAAAAIwJAAAAAAAAAAAAAIwJAAAAAAAAjQkAAAAAAAAAAAAAjQkAAAAAAACOCQAAAAAAAAAAAACOCQAAAAAAAI8JAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJCQAAAAAAAIkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"deprecated\":false,\"label\":\"Result<…>\",\"labelDetails\":{},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"},\"kind\":13,\"filterText\":\"Result\",\"textEdit\":{\"replace\":{\"start\":{\"line\":71,\"character\":87},\"end\":{\"line\":71,\"character\":93}},\"newText\":\"Result<$0>\",\"insert\":{\"start\":{\"line\":71,\"character\":87},\"end\":{\"line\":71,\"character\":93}}},\"preselect\":true,\"documentation\":{\"kind\":\"markdown\",\"value\":\"`Result` is a type that represents either success ([`Ok`]) or failure ([`Err`]).\\n\\nSee the [module documentation](self) for details.\"},\"sortText\":\"ffffffef\",\"additionalTextEdits\":[],\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							30,
							34,
							6
						],
						"trigger": "Result<…>"
					},
					"AgAAAIkJAAAAAAAAiQkAAAAAAAAGAAAAUmVzdWx0iQkAAAAAAACRCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPCQAAAAAAAI8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "(),R"
					},
					"BAAAAJAJAAAAAAAAkQkAAAAAAAAAAAAAkQkAAAAAAACSCQAAAAAAAAAAAACSCQAAAAAAAJMJAAAAAAAAAAAAAJMJAAAAAAAAlAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQCQAAAAAAAJAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "ea"
					},
					"AgAAAJQJAAAAAAAAlQkAAAAAAAAAAAAAlQkAAAAAAACWCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUCQAAAAAAAJQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"preselect\":true,\"sortText\":\"ffffffef\",\"label\":\"ReaperError\",\"labelDetails\":{},\"textEdit\":{\"replace\":{\"start\":{\"line\":71,\"character\":97},\"end\":{\"line\":71,\"character\":100}},\"newText\":\"ReaperError\",\"insert\":{\"start\":{\"line\":71,\"character\":97},\"end\":{\"line\":71,\"character\":100}}},\"kind\":13,\"filterText\":\"ReaperError\",\"deprecated\":false,\"additionalTextEdits\":[]}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							33,
							38,
							2
						],
						"trigger": "ReaperError"
					},
					"AgAAAJMJAAAAAAAAkwkAAAAAAAADAAAAUmVhkwkAAAAAAACeCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWCQAAAAAAAJYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJ8JAAAAAAAAoQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfCQAAAAAAAJ8JAAAAAAAA////////738"
				],
				[
					42,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKAJAAAAAAAAoQkAAAAAAAAAAAAAoQkAAAAAAACiCQAAAAAAAAAAAAChCQAAAAAAAKUJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgCQAAAAAAAKAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "get_edit"
					},
					"CAAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACnCQAAAAAAAAAAAACnCQAAAAAAAKgJAAAAAAAAAAAAAKgJAAAAAAAAqQkAAAAAAAAAAAAAqQkAAAAAAACqCQAAAAAAAAAAAACqCQAAAAAAAKsJAAAAAAAAAAAAAKsJAAAAAAAArAkAAAAAAAAAAAAArAkAAAAAAACtCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClCQAAAAAAAKUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "ed_midi"
					},
					"BwAAAK0JAAAAAAAArgkAAAAAAAAAAAAArgkAAAAAAACvCQAAAAAAAAAAAACvCQAAAAAAALAJAAAAAAAAAAAAALAJAAAAAAAAsQkAAAAAAAAAAAAAsQkAAAAAAACyCQAAAAAAAAAAAACyCQAAAAAAALMJAAAAAAAAAAAAALMJAAAAAAAAtAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtCQAAAAAAAK0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALQJAAAAAAAAtgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0CQAAAAAAALQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "events"
					},
					"BgAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACnCQAAAAAAAAAAAACnCQAAAAAAAKgJAAAAAAAAAAAAAKgJAAAAAAAAqQkAAAAAAAAAAAAAqQkAAAAAAACqCQAAAAAAAAAAAACqCQAAAAAAAKsJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClCQAAAAAAAKUJAAAAAAAAAAAAAAAAPEA"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKsJAAAAAAAArAkAAAAAAAAAAAAArAkAAAAAAACtCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrCQAAAAAAAKsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0JAAAAAAAArgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtCQAAAAAAAK0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACnCQAAAAAAAAAAAACnCQAAAAAAAKgJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClCQAAAAAAAKUJAAAAAAAAAAAAAAAAPEA"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgJAAAAAAAAqQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoCQAAAAAAAKgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMMJAAAAAAAAxAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDCQAAAAAAAMMJAAAAAAAA////////738"
				],
				[
					59,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									71,
									35
								],
								[
									71,
									35
								],
								"\n    ",
								null
							],
							[
								[
									71,
									68
								],
								[
									71,
									69
								],
								" = ",
								null
							],
							[
								[
									71,
									82
								],
								[
									71,
									82
								],
								",\n",
								null
							],
							[
								[
									71,
									97
								],
								[
									71,
									97
								],
								" ",
								null
							],
							[
								[
									71,
									109
								],
								[
									71,
									109
								],
								" ",
								null
							]
						]
					},
					"BQAAAJ8JAAAAAAAAoAkAAAAAAAAAAAAAkwkAAAAAAACUCQAAAAAAAAAAAACECQAAAAAAAIYJAAAAAAAAAAAAAHYJAAAAAAAAeQkAAAAAAAABAAAAPVUJAAAAAAAAWgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADECQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\ndom::"
					},
					"BwAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAEABAAAAAAAAAAAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABCAQAAAAAAAAAAAABCAQAAAAAAAEMBAAAAAAAAAAAAAEMBAAAAAAAARAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAEQBAAAAAAAAUwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFMBAAAAAAAAVAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAQAAAAAAAFMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAFMBAAAAAAAAUwEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAQAAAAAAAFQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFMBAAAAAAAAVAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAQAAAAAAAFMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									6,
									0
								],
								[
									6,
									0
								],
								"    dom::get_edited_midi,\n",
								null
							],
							[
								[
									11,
									0
								],
								[
									12,
									0
								],
								"",
								null
							]
						]
					},
					"AgAAADsBAAAAAAAAOwEAAAAAAAAaAAAAICAgIGRvbTo6Z2V0X2VkaXRlZF9taWRpLAqFAAAAAAAAAJ8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAQAAAAAAAFQBAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/Rust/Cargo.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/python3_my.sublime-build",
					""
				]
			],
			[
				"Packages/MagicPython/settings/sublime/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					""
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Automatic"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Check"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Document"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clippy"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Script"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Rust Enhanced/RustEnhanced.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Rust/Cargo.sublime-build",
					""
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Test"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust/Rust.sublime-build",
					""
				],
				[
					"Packages/Rust/Rust.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Rust.sublime-build",
					"Build & Run"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Rust/Cargo.sublime-build",
				"Test"
			]
		]
	],
	"build_varint": "Test",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ren",
				"LSP: Rename"
			],
			[
				"re",
				"LSP: Rename"
			],
			[
				"ter",
				"Terminus: Toggle Panel"
			],
			[
				"rena",
				"LSP: Rename"
			],
			[
				"cheme",
				"UI: Select Color Scheme"
			],
			[
				"term",
				"Terminus: Toggle Panel"
			],
			[
				"lsp re",
				"LSP: Rename"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"sche",
				"UI: Select Color Scheme"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"forma",
				"LSP: Format File"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"lsp",
				"LSP: Code Action…"
			],
			[
				"lsp en",
				"LSP: Enable Language Server in Project"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"isor",
				"isort: sort imports"
			],
			[
				"prewi",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"previw",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"jed",
				"SublimeJedi: Show Signature"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 382.0,
		"history":
		[
			"d",
			"exit()",
			"isort_sort_imports",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/levitanus/gits/rea-score",
		"/home/levitanus/gits/rea-score/plugin",
		"/home/levitanus/gits/rea-score/plugin/src",
		"/home/levitanus/gits/rea-score/rea-score",
		"/home/levitanus/gits/rea-score/rea-score/src",
		"/home/levitanus/gits/rea-score/rea-score/src/dom",
		"/home/levitanus/gits/rea-score/rea-score/src/notation",
		"/home/levitanus/gits/rea-score/rea-score/src/primitives",
		"/home/levitanus/gits/rea-score/rea-score/tests"
	],
	"file_history":
	[
		"/home/levitanus/gits/rea-score/rea-score/src/notation/message.rs",
		"/home/levitanus/gits/rea-score/rea-score/src/dom/midi_parse.rs",
		"/home/levitanus/gits/rea-score/rea-score.sublime-project",
		"/home/levitanus/gits/reaper-imgui/reaper-imgui/src/keyboard.rs",
		"/home/levitanus/gits/reaper-imgui/reaper-imgui/src/context.rs",
		"/home/levitanus/gits/rea-score/rea-score/tests/measure.rs",
		"/home/levitanus/gits/rea-score/rea-score/src/primitives/measure.rs",
		"/home/levitanus/.config/sublime-text-3/Packages/User/LevitanusPythonic.sublime-color-scheme",
		"/home/levitanus/gits/rea-score/rea-score/src/notation/mod.rs",
		"/home/levitanus/gits/sample_editor/test_arts.py",
		"/home/levitanus/gits/sampler/Cargo.toml",
		"/run/media/levitanus/RaidNew/_temp/audio/Air 2.mp3",
		"/home/levitanus/gits/ReaScore/rea_score/keymap.py",
		"/home/levitanus/gits/reapy-boost/reapy_boost/core/reapy_object.py",
		"/home/levitanus/gits/reapy-boost/reapy_boost/core/map.py",
		"/home/levitanus/gits/sample_editor/test.py",
		"/home/levitanus/.config/REAPER/Data/Reaticulate.reabank",
		"/home/levitanus/gits/sample_editor/sample_editor/widgets.py",
		"/home/levitanus/gits/reapy-boost/setup.cfg",
		"/home/levitanus/gits/reapy-boost/requirements.txt",
		"/home/levitanus/gits/reapy-boost/reapy_boost/gui.py",
		"/home/levitanus/.local/lib/python3.10/site-packages/IPy.py",
		"/run/media/levitanus/RaidNew/fonogr/Владимир Булаев/Маскарад ноты/score/Маскарад.txt",
		"/run/media/levitanus/Samples2/SteamLibrary/steamapps/common/Transformice/natives_blob.bin",
		"/run/media/levitanus/Samples2/SteamLibrary/steamapps/common/Transformice/steam_appid.txt",
		"/home/levitanus/gits/sample_editor/sample_editor/gui.py",
		"/home/levitanus/gits/sample_editor/None",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/stem_render.py",
		"/home/levitanus/gits/ReaExtensions/test.py",
		"/home/levitanus/gits/imgui.ini",
		"/run/media/levitanus/Files/gits/reapy-boost/reapy_boost/core/fx/fx.py",
		"/run/media/levitanus/Files/gits/reapy-boost/reapy_boost/core/reapy_object.py",
		"/home/levitanus/gits/reaper-rs/target/reaper/reaper_linux_x86_64/REAPER/reaper.ini",
		"/home/levitanus/gits/reaper-rs/target/reaper/reaper_linux_x86_64/REAPER/reaper-vstplugins64.ini",
		"/run/media/levitanus/INTENSO/Все ссылки в одном месте.docx",
		"/run/media/levitanus/Files/gits/reapy-boost/reapy_boost/core/track/track.py",
		"/run/media/levitanus/Files/gits/reapy-boost/reapy_boost/core/project/project.py",
		"/run/media/levitanus/Files/gits/reapy-boost/reapy_boost/core/project/region.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/quickly/dom/lily.py",
		"/media/levitanus/RAID/gits/ReaExtensions/rea_extensions/lilypond.py",
		"/home/levitanus/.ssh/github.pub",
		"/home/levitanus/.ssh/id_ed25519.pub",
		"/home/levitanus/gits/ReaExtensions/.gitignore",
		"/home/levitanus/gits/ReaExtensions/reaextensions.sublime-project",
		"/media/levitanus/RAID/gits/reapy/reapy/core/item/midi_event.py",
		"/home/levitanus/gits/reapy/reapy/core/reaper/__init__.pyi",
		"/home/levitanus/gits/reapy/reapy/core/item/take.pyi",
		"/home/levitanus/gits/reapy/reapy/core/item/take.py",
		"/home/levitanus/gits/ReaExtensions/.ropeproject/config.py",
		"/usr/lib/python3.9/contextlib.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/quickly/node.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond.py",
		"/media/levitanus/RAID/gits/reapy/reapy/reascript_api.py",
		"/media/levitanus/RAID/gits/reapy/reapy/__init__.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/reaper/__init__.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/__init__.py",
		"/home/levitanus/gits/reapy/reapy/additional_api.py",
		"/home/levitanus/.config/sublime-text-3/Packages/User/python_fiximports.sublime-settings",
		"/home/levitanus/.config/sublime-text-3/Packages/Python Fix Imports/python_fiximports.sublime-settings",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/musicexp.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/test.py",
		"/home/levitanus/gits/lilypond/python/musicexp.py",
		"/home/levitanus/gits/reapy/reapy/core/item/midi_event.pyi",
		"/media/levitanus/RAID/gits/ReaExtensions/rea_extensions/ly_lib/musicexp.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lt_Notation_spread_notes_across_bounds_quantize.py",
		"/usr/lib/python3/dist-packages/ly/music/items.py",
		"/usr/lib/python3/dist-packages/ly/music/event.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/py.typed",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/py.typed",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_html.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_latex.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_snippets.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_texinfo.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/convertrules.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/musicxml.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/musicxml2ly_conversion.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_docbook.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_base_test.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/ly_lib/book_base.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond/musicexp.py",
		"/home/levitanus/gits/lilypond/python/book_base.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond/auxiliar/buildlib.py",
		"/home/levitanus/gits/lilypond-export/export-base.ly",
		"/home/levitanus/.config/REAPER/Scripts/ReaTeam Extensions/API/imgui_python.py",
		"/home/levitanus/.config/REAPER/reaper-score/KeyMaps/DK keymap.ReaperKeyMap",
		"/home/levitanus/.config/REAPER/reaper-score/KeyMaps/score keymap.ReaperKeyMap",
		"/home/levitanus/.config/REAPER/reaper-score/KeyMaps/German Keymap.ReaperKeyMap",
		"/home/levitanus/.config/REAPER/reaper-score/reaper-kb.ini",
		"/media/levitanus/RAID/gits/reapy/reapy/core/item/take.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/item/item.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/window/midi_editor.py",
		"/home/levitanus/gits/reapy/reapy/core/item/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/item/item.pyi",
		"/media/levitanus/RAID/gits/reapy/reapy/core/window/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/window/midi_editor.pyi",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/core/__init__.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/core/window/__init__.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/core/window/midi_editor.py",
		"/home/levitanus/gits/reapy/reapy/core/window/window.pyi",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/core/window/window.py",
		"/home/levitanus/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/levitanus/gits/reapy/reapy/core/reaper/__init__.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/__init__.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/core/reaper/__init__.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/reapy/core/reaper/reaper.py",
		"/home/levitanus/gits/reapy/reapy/core/reaper/reaper.pyi",
		"/home/levitanus/gits/reapy/reapy/core/project/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/project/project.pyi",
		"/home/levitanus/gits/reapy/reapy/core/project/project.py",
		"/home/levitanus/gits/reapy/reapy/core/reaper/audio.pyi",
		"/home/levitanus/gits/reapy/reapy/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/window/__init__.pyi",
		"/home/levitanus/gits/reapy/reapy/core/window/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/track/__init__.pyi",
		"/home/levitanus/gits/reapy/reapy/core/track/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/item/__init__.pyi",
		"/home/levitanus/gits/reapy/reapy/core/fx/__init__.py",
		"/home/levitanus/gits/reapy/reapy/core/fx/__init__.pyi",
		"/home/levitanus/gits/reapy/reapy/core/project/__init__.pyi",
		"/media/levitanus/RAID/gits/reapy/reapy/core/fx/fx.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/fx/fx_param.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/fx/__init__.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/track/track.py",
		"/home/levitanus/gits/reapy/reapy/core/fx/fx.pyi",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/make_fx_online_only_in_bounds_selected_items.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/test blender.py",
		"/media/levitanus/RaidNew/сведение/Солодова А знаешь 02-21/Солодова А знаешь 02-21.RPP"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 136.0,
		"where_history":
		[
			"D:\\gits\\reapy\\reapy"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"fn ",
			"fn",
			"self",
			"pub",
			"self",
			" ",
			"map",
			"fade",
			"region_states[region.index]",
			"id",
			"...",
			"get_info_value",
			"    state['vol'] = track.get_info_value('D_VOL')\n",
			"get_info_value",
			"stem",
			"staff",
			"Take",
			"take",
			"(Length\\(.*), ?take",
			"(Length\\(.*)take",
			"note",
			"ident =",
			"ident",
			"music[-1]",
			"print",
			"append",
			"duration",
			"Duration",
			"for_ly",
			"msuic",
			"out",
			"voice",
			"[voice]",
			"lily.",
			"lily.Duration",
			"Group",
			"Staff",
			"Grand",
			"Staff",
			"return",
			"'Fractured'",
			"Fractured",
			"bool",
			"position",
			"Position",
			"position_bar",
			"reapy.Take",
			"\\sreapy.Take",
			"ppq_position",
			"limit_denominator",
			"position",
			"_length",
			"ppq_position",
			"ty.Tuple[EventsDictType, ...]",
			"EvetsDictType",
			"ty.Dict[float, ty.List[Note]]",
			"_midi_pitch",
			"pitch",
			"s Note(",
			"Note()",
			"Pitch()",
			"pitch",
			"Pitch",
			"pitch",
			"Pitch",
			"TimeScaledMusic",
			"SequentialMusic",
			"NoteEvent",
			"ChordEvent",
			"import",
			"lilypond_py",
			"self.elements",
			"elements",
			"print_bef",
			"print_before",
			"print_before_note",
			"\\.parent ",
			"\\.parent",
			"parent",
			"32nd",
			"Dura",
			"musical",
			"note",
			"end",
			"note_end",
			"note_info.",
			"note",
			"msg",
			"x",
			"print",
			"sort_",
			"float",
			"MidiEventDict",
			"midi",
			"start",
			"Item",
			"-> reapy.",
			"inside_reaper",
			"def ",
			"id",
			"def ",
			"project_tab",
			"close_project_tab",
			"class",
			"some_function",
			"def \\w+(?:\\()",
			"def \\w+?(",
			"def ",
			"def",
			"close",
			"()\n",
			"start",
			"position",
			"def param",
			"param",
			"'latin-1'",
			"reaper_playback",
			"REAPER_PLAYBACK_IP",
			"host",
			"ping",
			"one",
			"play_btn",
			"stop_btn",
			"play_btn",
			"upd_btn",
			"upd",
			"root",
			"on_click"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"$1",
			"Length\\($1",
			"ValuesFilledType"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "plugin/src/key_bindings.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2264,
						"regions":
						{
						},
						"selection":
						[
							[
								1534,
								1534
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "\\.",
									"selector": "source.lua"
								},
								{
									"characters": ":",
									"selector": "source.lua"
								}
							],
							"lsp_hover_provider_count": 13,
							"lsp_uri": "file:///home/levitanus/gits/rea-score/plugin/src/key_bindings.rs",
							"show_definitions": false,
							"spell_check": true,
							"syntax": "Packages/Rust/Rust.sublime-syntax",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 613.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "rea-score/src/dom/mod.rs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10072,
						"regions":
						{
						},
						"selection":
						[
							[
								7114,
								7114
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "\\.",
									"selector": "source.lua"
								},
								{
									"characters": ":",
									"selector": "source.lua"
								},
								{
									"characters": ":.'(",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 4,
							"lsp_uri": "file:///home/levitanus/gits/rea-score/rea-score/src/dom/mod.rs",
							"show_definitions": false,
							"syntax": "Packages/Rust/Rust.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3003.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/levitanus/test inline/test inline.RPP",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4445,
						"regions":
						{
						},
						"selection":
						[
							[
								1621,
								1621
							]
						],
						"settings":
						{
							"lsp_uri": "file:///home/levitanus/test%20inline/test%20inline.RPP",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1093.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"file": "rea-score/src/notation/note_notations.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3663,
						"regions":
						{
						},
						"selection":
						[
							[
								141,
								141
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "\\.",
									"selector": "source.lua"
								},
								{
									"characters": ":",
									"selector": "source.lua"
								}
							],
							"lsp_hover_provider_count": 9,
							"lsp_uri": "file:///home/levitanus/gits/rea-score/rea-score/src/notation/note_notations.rs",
							"show_definitions": false,
							"syntax": "Packages/Rust/Rust.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "rea-score/src/notation/chord_notations.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1064,
						"regions":
						{
						},
						"selection":
						[
							[
								1064,
								1064
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "\\.",
									"selector": "source.lua"
								},
								{
									"characters": ":",
									"selector": "source.lua"
								}
							],
							"lsp_hover_provider_count": 13,
							"lsp_uri": "file:///home/levitanus/gits/rea-score/rea-score/src/notation/chord_notations.rs",
							"show_definitions": false,
							"syntax": "Packages/Rust/Rust.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "rea-score/src/notation/mod.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3687,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "\\.",
									"selector": "source.lua"
								},
								{
									"characters": ":",
									"selector": "source.lua"
								}
							],
							"lsp_hover_provider_count": 12,
							"lsp_uri": "file:///home/levitanus/gits/rea-score/rea-score/src/notation/mod.rs",
							"show_definitions": false,
							"syntax": "Packages/Rust/Rust.sublime-syntax",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "rea-score/src/dom/midi_parse.rs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4736,
						"regions":
						{
						},
						"selection":
						[
							[
								2501,
								2501
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "\\.",
									"selector": "source.lua"
								},
								{
									"characters": ":",
									"selector": "source.lua"
								},
								{
									"characters": ":.'(",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 4,
							"lsp_uri": "file:///home/levitanus/gits/rea-score/rea-score/src/dom/midi_parse.rs",
							"show_definitions": false,
							"syntax": "Packages/Rust/Rust.sublime-syntax",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 768.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 51.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 129.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 126.0
	},
	"output.Terminus":
	{
		"height": 104.0
	},
	"output.anaconda_documentation":
	{
		"height": 128.0
	},
	"output.autopep8":
	{
		"height": 156.0
	},
	"output.diagnostics":
	{
		"height": 110.0
	},
	"output.exec":
	{
		"height": 206.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "rea-score.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 516.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/gits/rea-score/rea-score.sublime-project"
			]
		],
		"width": 392.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 214.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
